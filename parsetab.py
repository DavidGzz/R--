
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND CHAR CTEF CTEI DIFF ELSE EQUALS FLOAT FOR FUNCTION GTHANEQ ID IF INT LETRERO LTHANEQ MAIN OR RETURN VOID WHILE WRITEprograma : ID primerCuad ';' vars programaF mainprimerCuad : main : MAIN llenarCuad '(' ')' bloquellenarCuad : programaF : function programaF\n                    | emptyfunction : FUNCTION tipoRetorno ID '(' functionParam ')' functionAux bloque functionAux2\n                | emptyfunctionAux : functionAux2 : tipoRetorno : INT\n                    | FLOAT\n                    | VOIDbloque : '{' cuerpo '}' cuerpo : vars estatutopestatutop : estatuto estatutop\n                    | emptyestatuto : asignacion\n                    | condicion\n                    | write\n                    | while\n                    | return\n                    | for\n                    | id ';'\n                    | emptyreturn : RETURN superexpresion ';' condicion : IF '(' superexpresion ')' condicionAux bloque condicionelsecondicionAux : condicionelse : ELSE condicionelseAux bloque\n                        | emptycondicionelseAux : write : WRITE '(' writep ')' ';' writep : superexpresion writepAux writepp\n              | LETRERO writepAux2 writeppwritepAux : writepAux2 : writepp : ',' writeppAux writep\n                | empty writeppAuxwriteppAux : for : FOR '(' id '=' superexpresion forAux ';' superexpresion forAux2 ')' bloque forAux3forAux : forAux2 : forAux3 : while : WHILE whileAux '(' superexpresion ')' whileAux2 bloquewhileAux : whileAux2 : asignacion : vars\n                    | id asignacionpasignacionp : '=' superexpresion ';'\n                    | '[' superexpresion ']' '=' superexpresion ';' superexpresion : megaexpresion superexpresionpsuperexpresionp : AND superexpresion\n                        | OR superexpresion\n                        | emptymegaexpresion : exp megaexpresionpmegaexpresionp : '<' exp\n                        | '>' exp\n                        | EQUALS exp\n                        | DIFF exp\n                        | LTHANEQ exp\n                        | GTHANEQ exp\n                        | emptyexp : termino exppexpp : '+' pAppT exp\n            | '-' pAppT exp\n            | emptypAppT : termino : factor terminopterminop : '*' pAppF termino\n                | '/' pAppF termino\n                | emptypAppF : factor : constante\n                | lParen superexpresion rParen lParen : '(' rParen : ')' constante : id\n                | CTEF ctef\n                | CTEI cteictef : ctei : functionParam : parametro\n                    | emptyparametro : tipo ID parametropparametrop : ',' parametro\n                | emptyvars : varspvarsp : tipo varspp ';' varsp\n                | emptyvarspp : ID varspppvarsppp : ',' varspp\n                | emptytipo : INT\n            | FLOAT\n            | CHARid : ID idpidp : '(' idpp ')'\n            | '[' superexpresion ']'\n            | emptyidpp : superexpresion idppp\n            | emptyidppp : ',' idpp\n            | emptyempty :"
    
_lr_action_items = {'ID':([0,6,7,8,9,10,11,21,22,23,24,25,27,31,39,41,45,50,51,53,54,55,56,57,58,59,60,65,71,72,73,74,75,76,84,88,89,91,92,101,102,104,105,108,109,110,111,112,113,116,117,120,121,131,146,147,148,149,152,155,158,160,162,173,174,178,179,181,183,184,187,190,191,],[2,-87,17,-89,-93,-94,-95,30,-11,-12,-13,-104,17,-88,43,-104,67,-14,-47,67,-25,-18,-19,-20,-21,-22,-23,67,-24,-48,67,67,67,67,67,-75,67,67,67,67,-26,67,67,67,67,67,67,67,67,-67,-67,-72,-72,-49,67,67,67,67,67,67,67,-32,-39,-104,67,-50,-27,-30,-44,67,-29,-43,-40,]),'$end':([1,18,40,50,],[0,-1,-3,-14,]),';':([2,3,16,17,26,28,32,61,67,78,79,80,81,82,83,85,86,87,90,93,95,103,106,107,114,115,118,119,122,124,125,134,138,139,140,141,142,143,144,145,150,151,153,157,166,167,168,169,170,172,177,],[-2,4,25,-104,-90,-92,-91,71,-104,102,-104,-104,-104,-104,-73,-77,-80,-81,-96,-99,131,-51,-54,-55,-62,-63,-66,-68,-71,-78,-79,160,-52,-53,-56,-57,-58,-59,-60,-61,-74,-76,-97,-98,-64,-65,-69,-70,-41,178,184,]),'INT':([4,6,8,15,25,31,34,41,45,48,50,51,53,54,55,56,57,58,59,60,71,72,102,131,160,173,178,179,181,183,187,190,191,],[9,-87,-89,22,9,-88,9,9,9,9,-14,-47,9,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-104,-50,-27,-30,-44,-29,-43,-40,]),'FLOAT':([4,6,8,15,25,31,34,41,45,48,50,51,53,54,55,56,57,58,59,60,71,72,102,131,160,173,178,179,181,183,187,190,191,],[10,-87,-89,23,10,-88,10,10,10,10,-14,-47,10,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-104,-50,-27,-30,-44,-29,-43,-40,]),'CHAR':([4,6,8,25,31,34,41,45,48,50,51,53,54,55,56,57,58,59,60,71,72,102,131,160,173,178,179,181,183,187,190,191,],[11,-87,-89,11,-88,11,11,11,11,-14,-47,11,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-104,-50,-27,-30,-44,-29,-43,-40,]),'FUNCTION':([4,5,6,8,13,14,25,31,50,68,94,],[-104,15,-87,-89,15,-8,-104,-88,-14,-10,-7,]),'MAIN':([4,5,6,8,12,13,14,20,25,31,50,68,94,],[-104,-104,-87,-89,19,-104,-6,-5,-104,-88,-14,-10,-7,]),'IF':([6,8,25,31,41,45,50,51,53,54,55,56,57,58,59,60,71,72,102,131,160,173,178,179,181,183,187,190,191,],[-87,-89,-104,-88,-104,62,-14,-47,62,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-104,-50,-27,-30,-44,-29,-43,-40,]),'WRITE':([6,8,25,31,41,45,50,51,53,54,55,56,57,58,59,60,71,72,102,131,160,173,178,179,181,183,187,190,191,],[-87,-89,-104,-88,-104,63,-14,-47,63,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-104,-50,-27,-30,-44,-29,-43,-40,]),'WHILE':([6,8,25,31,41,45,50,51,53,54,55,56,57,58,59,60,71,72,102,131,160,173,178,179,181,183,187,190,191,],[-87,-89,-104,-88,-104,64,-14,-47,64,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-104,-50,-27,-30,-44,-29,-43,-40,]),'RETURN':([6,8,25,31,41,45,50,51,53,54,55,56,57,58,59,60,71,72,102,131,160,173,178,179,181,183,187,190,191,],[-87,-89,-104,-88,-104,65,-14,-47,65,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-104,-50,-27,-30,-44,-29,-43,-40,]),'FOR':([6,8,25,31,41,45,50,51,53,54,55,56,57,58,59,60,71,72,102,131,160,173,178,179,181,183,187,190,191,],[-87,-89,-104,-88,-104,66,-14,-47,66,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-104,-50,-27,-30,-44,-29,-43,-40,]),'}':([6,8,25,31,41,44,45,50,51,52,53,54,55,56,57,58,59,60,70,71,72,102,131,160,173,178,179,181,183,187,190,191,],[-87,-89,-104,-88,-104,50,-104,-14,-47,-15,-104,-17,-18,-19,-20,-21,-22,-23,-16,-24,-48,-26,-49,-32,-104,-50,-27,-30,-44,-29,-43,-40,]),'VOID':([15,],[24,]),',':([17,43,67,79,80,81,82,83,85,86,87,90,93,99,100,103,106,107,114,115,118,119,122,124,125,128,135,136,138,139,140,141,142,143,144,145,150,151,153,157,166,167,168,169,],[27,48,-104,-104,-104,-104,-104,-73,-77,-80,-81,-96,-99,-35,-36,-51,-54,-55,-62,-63,-66,-68,-71,-78,-79,155,162,162,-52,-53,-56,-57,-58,-59,-60,-61,-74,-76,-97,-98,-64,-65,-69,-70,]),'(':([19,29,30,62,63,64,65,66,67,73,74,75,76,77,84,88,91,92,101,104,105,108,109,110,111,112,113,116,117,120,121,146,147,148,149,152,155,158,162,174,184,],[-4,33,34,75,76,-45,88,89,91,88,88,88,88,101,88,-75,88,88,88,88,88,88,88,88,88,88,88,-67,-67,-72,-72,88,88,88,88,88,88,88,-39,88,88,]),')':([33,34,36,37,38,43,47,49,67,69,79,80,81,82,83,85,86,87,90,91,93,97,98,99,100,103,106,107,114,115,118,119,122,123,124,125,127,128,129,135,136,137,138,139,140,141,142,143,144,145,150,151,153,154,155,156,157,161,163,164,166,167,168,169,171,175,182,186,188,],[35,-104,42,-82,-83,-104,-84,-86,-104,-85,-104,-104,-104,-104,-73,-77,-80,-81,-96,-104,-99,133,134,-35,-36,-51,-54,-55,-62,-63,-66,-68,-71,151,-78,-79,153,-104,-101,-104,-104,165,-52,-53,-56,-57,-58,-59,-60,-61,-74,-76,-97,-100,-104,-103,-98,-33,-39,-34,-64,-65,-69,-70,-102,-38,-37,-42,189,]),'{':([35,42,46,133,159,165,176,180,185,189,],[41,-9,41,-28,41,-46,41,-31,41,41,]),'ELSE':([50,173,],[-14,180,]),'=':([61,67,90,93,126,132,153,157,],[73,-104,-96,-99,152,158,-97,-98,]),'[':([61,67,90,93,153,157,],[74,92,-96,-99,-97,-98,]),'CTEF':([65,73,74,75,76,84,88,91,92,101,104,105,108,109,110,111,112,113,116,117,120,121,146,147,148,149,152,155,158,162,174,184,],[86,86,86,86,86,86,-75,86,86,86,86,86,86,86,86,86,86,86,-67,-67,-72,-72,86,86,86,86,86,86,86,-39,86,86,]),'CTEI':([65,73,74,75,76,84,88,91,92,101,104,105,108,109,110,111,112,113,116,117,120,121,146,147,148,149,152,155,158,162,174,184,],[87,87,87,87,87,87,-75,87,87,87,87,87,87,87,87,87,87,87,-67,-67,-72,-72,87,87,87,87,87,87,87,-39,87,87,]),'*':([67,82,83,85,86,87,90,93,124,125,150,151,153,157,],[-104,120,-73,-77,-80,-81,-96,-99,-78,-79,-74,-76,-97,-98,]),'/':([67,82,83,85,86,87,90,93,124,125,150,151,153,157,],[-104,121,-73,-77,-80,-81,-96,-99,-78,-79,-74,-76,-97,-98,]),'+':([67,81,82,83,85,86,87,90,93,119,122,124,125,150,151,153,157,168,169,],[-104,116,-104,-73,-77,-80,-81,-96,-99,-68,-71,-78,-79,-74,-76,-97,-98,-69,-70,]),'-':([67,81,82,83,85,86,87,90,93,119,122,124,125,150,151,153,157,168,169,],[-104,117,-104,-73,-77,-80,-81,-96,-99,-68,-71,-78,-79,-74,-76,-97,-98,-69,-70,]),'<':([67,80,81,82,83,85,86,87,90,93,115,118,119,122,124,125,150,151,153,157,166,167,168,169,],[-104,108,-104,-104,-73,-77,-80,-81,-96,-99,-63,-66,-68,-71,-78,-79,-74,-76,-97,-98,-64,-65,-69,-70,]),'>':([67,80,81,82,83,85,86,87,90,93,115,118,119,122,124,125,150,151,153,157,166,167,168,169,],[-104,109,-104,-104,-73,-77,-80,-81,-96,-99,-63,-66,-68,-71,-78,-79,-74,-76,-97,-98,-64,-65,-69,-70,]),'EQUALS':([67,80,81,82,83,85,86,87,90,93,115,118,119,122,124,125,150,151,153,157,166,167,168,169,],[-104,110,-104,-104,-73,-77,-80,-81,-96,-99,-63,-66,-68,-71,-78,-79,-74,-76,-97,-98,-64,-65,-69,-70,]),'DIFF':([67,80,81,82,83,85,86,87,90,93,115,118,119,122,124,125,150,151,153,157,166,167,168,169,],[-104,111,-104,-104,-73,-77,-80,-81,-96,-99,-63,-66,-68,-71,-78,-79,-74,-76,-97,-98,-64,-65,-69,-70,]),'LTHANEQ':([67,80,81,82,83,85,86,87,90,93,115,118,119,122,124,125,150,151,153,157,166,167,168,169,],[-104,112,-104,-104,-73,-77,-80,-81,-96,-99,-63,-66,-68,-71,-78,-79,-74,-76,-97,-98,-64,-65,-69,-70,]),'GTHANEQ':([67,80,81,82,83,85,86,87,90,93,115,118,119,122,124,125,150,151,153,157,166,167,168,169,],[-104,113,-104,-104,-73,-77,-80,-81,-96,-99,-63,-66,-68,-71,-78,-79,-74,-76,-97,-98,-64,-65,-69,-70,]),'AND':([67,79,80,81,82,83,85,86,87,90,93,107,114,115,118,119,122,124,125,140,141,142,143,144,145,150,151,153,157,166,167,168,169,],[-104,104,-104,-104,-104,-73,-77,-80,-81,-96,-99,-55,-62,-63,-66,-68,-71,-78,-79,-56,-57,-58,-59,-60,-61,-74,-76,-97,-98,-64,-65,-69,-70,]),'OR':([67,79,80,81,82,83,85,86,87,90,93,107,114,115,118,119,122,124,125,140,141,142,143,144,145,150,151,153,157,166,167,168,169,],[-104,105,-104,-104,-104,-73,-77,-80,-81,-96,-99,-55,-62,-63,-66,-68,-71,-78,-79,-56,-57,-58,-59,-60,-61,-74,-76,-97,-98,-64,-65,-69,-70,]),']':([67,79,80,81,82,83,85,86,87,90,93,96,103,106,107,114,115,118,119,122,124,125,130,138,139,140,141,142,143,144,145,150,151,153,157,166,167,168,169,],[-104,-104,-104,-104,-104,-73,-77,-80,-81,-96,-99,132,-51,-54,-55,-62,-63,-66,-68,-71,-78,-79,157,-52,-53,-56,-57,-58,-59,-60,-61,-74,-76,-97,-98,-64,-65,-69,-70,]),'LETRERO':([76,162,174,],[100,-39,100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'primerCuad':([2,],[3,]),'vars':([4,41,45,53,],[5,45,51,51,]),'varsp':([4,25,41,45,53,],[6,31,6,6,6,]),'tipo':([4,25,34,41,45,48,53,],[7,7,39,7,7,39,7,]),'empty':([4,5,13,17,25,34,41,43,45,53,67,79,80,81,82,91,128,135,136,155,173,],[8,14,14,28,8,38,8,49,54,54,93,106,114,118,122,129,156,163,163,129,181,]),'programaF':([5,13,],[12,20,]),'function':([5,13,],[13,13,]),'varspp':([7,27,],[16,32,]),'main':([12,],[18,]),'tipoRetorno':([15,],[21,]),'varsppp':([17,],[26,]),'llenarCuad':([19,],[29,]),'functionParam':([34,],[36,]),'parametro':([34,48,],[37,69,]),'bloque':([35,46,159,176,185,189,],[40,68,173,183,187,190,]),'cuerpo':([41,],[44,]),'functionAux':([42,],[46,]),'parametrop':([43,],[47,]),'estatutop':([45,53,],[52,70,]),'estatuto':([45,53,],[53,53,]),'asignacion':([45,53,],[55,55,]),'condicion':([45,53,],[56,56,]),'write':([45,53,],[57,57,]),'while':([45,53,],[58,58,]),'return':([45,53,],[59,59,]),'for':([45,53,],[60,60,]),'id':([45,53,65,73,74,75,76,84,89,91,92,101,104,105,108,109,110,111,112,113,146,147,148,149,152,155,158,174,184,],[61,61,85,85,85,85,85,85,126,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'asignacionp':([61,],[72,]),'whileAux':([64,],[77,]),'superexpresion':([65,73,74,75,76,84,91,92,101,104,105,152,155,158,174,184,],[78,95,96,97,99,123,128,130,137,138,139,170,128,172,99,186,]),'megaexpresion':([65,73,74,75,76,84,91,92,101,104,105,152,155,158,174,184,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'exp':([65,73,74,75,76,84,91,92,101,104,105,108,109,110,111,112,113,146,147,152,155,158,174,184,],[80,80,80,80,80,80,80,80,80,80,80,140,141,142,143,144,145,166,167,80,80,80,80,80,]),'termino':([65,73,74,75,76,84,91,92,101,104,105,108,109,110,111,112,113,146,147,148,149,152,155,158,174,184,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,168,169,81,81,81,81,81,]),'factor':([65,73,74,75,76,84,91,92,101,104,105,108,109,110,111,112,113,146,147,148,149,152,155,158,174,184,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'constante':([65,73,74,75,76,84,91,92,101,104,105,108,109,110,111,112,113,146,147,148,149,152,155,158,174,184,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'lParen':([65,73,74,75,76,84,91,92,101,104,105,108,109,110,111,112,113,146,147,148,149,152,155,158,174,184,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'idp':([67,],[90,]),'functionAux2':([68,],[94,]),'writep':([76,174,],[98,182,]),'superexpresionp':([79,],[103,]),'megaexpresionp':([80,],[107,]),'expp':([81,],[115,]),'terminop':([82,],[119,]),'ctef':([86,],[124,]),'ctei':([87,],[125,]),'idpp':([91,155,],[127,171,]),'writepAux':([99,],[135,]),'writepAux2':([100,],[136,]),'pAppT':([116,117,],[146,147,]),'pAppF':([120,121,],[148,149,]),'rParen':([123,],[150,]),'idppp':([128,],[154,]),'condicionAux':([133,],[159,]),'writepp':([135,136,],[161,164,]),'writeppAux':([162,163,],[174,175,]),'whileAux2':([165,],[176,]),'forAux':([170,],[177,]),'condicionelse':([173,],[179,]),'condicionelseAux':([180,],[185,]),'forAux2':([186,],[188,]),'forAux3':([190,],[191,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ID primerCuad ; vars programaF main','programa',6,'p_programa','parser.py',35),
  ('primerCuad -> <empty>','primerCuad',0,'p_primerCuad','parser.py',38),
  ('main -> MAIN llenarCuad ( ) bloque','main',5,'p_main','parser.py',42),
  ('llenarCuad -> <empty>','llenarCuad',0,'p_llenarCuad','parser.py',45),
  ('programaF -> function programaF','programaF',2,'p_programaF','parser.py',49),
  ('programaF -> empty','programaF',1,'p_programaF','parser.py',50),
  ('function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2','function',9,'p_function','parser.py',53),
  ('function -> empty','function',1,'p_function','parser.py',54),
  ('functionAux -> <empty>','functionAux',0,'p_functionAux','parser.py',57),
  ('functionAux2 -> <empty>','functionAux2',0,'p_functionAux2','parser.py',72),
  ('tipoRetorno -> INT','tipoRetorno',1,'p_tipoRetorno','parser.py',92),
  ('tipoRetorno -> FLOAT','tipoRetorno',1,'p_tipoRetorno','parser.py',93),
  ('tipoRetorno -> VOID','tipoRetorno',1,'p_tipoRetorno','parser.py',94),
  ('bloque -> { cuerpo }','bloque',3,'p_bloque','parser.py',98),
  ('cuerpo -> vars estatutop','cuerpo',2,'p_cuerpo','parser.py',101),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_estatutop','parser.py',104),
  ('estatutop -> empty','estatutop',1,'p_estatutop','parser.py',105),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',108),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',109),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser.py',110),
  ('estatuto -> while','estatuto',1,'p_estatuto','parser.py',111),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser.py',112),
  ('estatuto -> for','estatuto',1,'p_estatuto','parser.py',113),
  ('estatuto -> id ;','estatuto',2,'p_estatuto','parser.py',114),
  ('estatuto -> empty','estatuto',1,'p_estatuto','parser.py',115),
  ('return -> RETURN superexpresion ;','return',3,'p_return','parser.py',118),
  ('condicion -> IF ( superexpresion ) condicionAux bloque condicionelse','condicion',7,'p_condicion','parser.py',133),
  ('condicionAux -> <empty>','condicionAux',0,'p_condicionAux','parser.py',136),
  ('condicionelse -> ELSE condicionelseAux bloque','condicionelse',3,'p_condicionelse','parser.py',146),
  ('condicionelse -> empty','condicionelse',1,'p_condicionelse','parser.py',147),
  ('condicionelseAux -> <empty>','condicionelseAux',0,'p_condicionelseAux','parser.py',152),
  ('write -> WRITE ( writep ) ;','write',5,'p_write','parser.py',159),
  ('writep -> superexpresion writepAux writepp','writep',3,'p_writep','parser.py',162),
  ('writep -> LETRERO writepAux2 writepp','writep',3,'p_writep','parser.py',163),
  ('writepAux -> <empty>','writepAux',0,'p_writepAux','parser.py',166),
  ('writepAux2 -> <empty>','writepAux2',0,'p_writepAux2','parser.py',171),
  ('writepp -> , writeppAux writep','writepp',3,'p_writepp','parser.py',178),
  ('writepp -> empty writeppAux','writepp',2,'p_writepp','parser.py',179),
  ('writeppAux -> <empty>','writeppAux',0,'p_writeppAux','parser.py',182),
  ('for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3','for',12,'p_for','parser.py',193),
  ('forAux -> <empty>','forAux',0,'p_forAux','parser.py',196),
  ('forAux2 -> <empty>','forAux2',0,'p_forAux2','parser.py',202),
  ('forAux3 -> <empty>','forAux3',0,'p_forAux3','parser.py',208),
  ('while -> WHILE whileAux ( superexpresion ) whileAux2 bloque','while',7,'p_while','parser.py',214),
  ('whileAux -> <empty>','whileAux',0,'p_whileAux','parser.py',221),
  ('whileAux2 -> <empty>','whileAux2',0,'p_whileAux2','parser.py',225),
  ('asignacion -> vars','asignacion',1,'p_asignacion','parser.py',234),
  ('asignacion -> id asignacionp','asignacion',2,'p_asignacion','parser.py',235),
  ('asignacionp -> = superexpresion ;','asignacionp',3,'p_asignacionp','parser.py',238),
  ('asignacionp -> [ superexpresion ] = superexpresion ;','asignacionp',6,'p_asignacionp','parser.py',239),
  ('superexpresion -> megaexpresion superexpresionp','superexpresion',2,'p_superexpresion','parser.py',245),
  ('superexpresionp -> AND superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',262),
  ('superexpresionp -> OR superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',263),
  ('superexpresionp -> empty','superexpresionp',1,'p_superexpresionp','parser.py',264),
  ('megaexpresion -> exp megaexpresionp','megaexpresion',2,'p_megaexpresion','parser.py',269),
  ('megaexpresionp -> < exp','megaexpresionp',2,'p_megaexpresionp','parser.py',285),
  ('megaexpresionp -> > exp','megaexpresionp',2,'p_megaexpresionp','parser.py',286),
  ('megaexpresionp -> EQUALS exp','megaexpresionp',2,'p_megaexpresionp','parser.py',287),
  ('megaexpresionp -> DIFF exp','megaexpresionp',2,'p_megaexpresionp','parser.py',288),
  ('megaexpresionp -> LTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',289),
  ('megaexpresionp -> GTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',290),
  ('megaexpresionp -> empty','megaexpresionp',1,'p_megaexpresionp','parser.py',291),
  ('exp -> termino expp','exp',2,'p_exp','parser.py',296),
  ('expp -> + pAppT exp','expp',3,'p_expp','parser.py',314),
  ('expp -> - pAppT exp','expp',3,'p_expp','parser.py',315),
  ('expp -> empty','expp',1,'p_expp','parser.py',316),
  ('pAppT -> <empty>','pAppT',0,'p_pAppT','parser.py',321),
  ('termino -> factor terminop','termino',2,'p_termino','parser.py',339),
  ('terminop -> * pAppF termino','terminop',3,'p_terminop','parser.py',357),
  ('terminop -> / pAppF termino','terminop',3,'p_terminop','parser.py',358),
  ('terminop -> empty','terminop',1,'p_terminop','parser.py',359),
  ('pAppF -> <empty>','pAppF',0,'p_pAppF','parser.py',364),
  ('factor -> constante','factor',1,'p_factor','parser.py',387),
  ('factor -> lParen superexpresion rParen','factor',3,'p_factor','parser.py',388),
  ('lParen -> (','lParen',1,'p_lParen','parser.py',391),
  ('rParen -> )','rParen',1,'p_rParen','parser.py',395),
  ('constante -> id','constante',1,'p_constante','parser.py',399),
  ('constante -> CTEF ctef','constante',2,'p_constante','parser.py',400),
  ('constante -> CTEI ctei','constante',2,'p_constante','parser.py',401),
  ('ctef -> <empty>','ctef',0,'p_ctef','parser.py',404),
  ('ctei -> <empty>','ctei',0,'p_ctei','parser.py',410),
  ('functionParam -> parametro','functionParam',1,'p_functionParam','parser.py',416),
  ('functionParam -> empty','functionParam',1,'p_functionParam','parser.py',417),
  ('parametro -> tipo ID parametrop','parametro',3,'p_parametro','parser.py',420),
  ('parametrop -> , parametro','parametrop',2,'p_parametrop','parser.py',426),
  ('parametrop -> empty','parametrop',1,'p_parametrop','parser.py',427),
  ('vars -> varsp','vars',1,'p_vars','parser.py',430),
  ('varsp -> tipo varspp ; varsp','varsp',4,'p_varsp','parser.py',435),
  ('varsp -> empty','varsp',1,'p_varsp','parser.py',436),
  ('varspp -> ID varsppp','varspp',2,'p_varspp','parser.py',439),
  ('varsppp -> , varspp','varsppp',2,'p_varsppp','parser.py',459),
  ('varsppp -> empty','varsppp',1,'p_varsppp','parser.py',460),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',463),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',464),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',465),
  ('id -> ID idp','id',2,'p_id','parser.py',469),
  ('idp -> ( idpp )','idp',3,'p_idp','parser.py',472),
  ('idp -> [ superexpresion ]','idp',3,'p_idp','parser.py',473),
  ('idp -> empty','idp',1,'p_idp','parser.py',474),
  ('idpp -> superexpresion idppp','idpp',2,'p_idpp','parser.py',503),
  ('idpp -> empty','idpp',1,'p_idpp','parser.py',504),
  ('idppp -> , idpp','idppp',2,'p_idppp','parser.py',507),
  ('idppp -> empty','idppp',1,'p_idppp','parser.py',508),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',513),
]
