
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND CHAR CTEF CTEI DIFF ELSE EQUALS FLOAT FOR FUNCTION GTHANEQ ID IF INT LETRERO LTHANEQ MAIN OR PROGRAMA RETURN VOID WHILE WRITEprograma : ID ';' vars programaF mainmain : MAIN '(' ')' bloqueprogramaF : function programaF\n                    | emptyfunction : FUNCTION tipoRetorno ID '(' functionParam ')' functionAux bloque functionAux2\n                | emptyfunctionAux : functionAux2 : tipoRetorno : INT\n                    | FLOAT\n                    | VOIDbloque : '{' cuerpo '}' cuerpo : vars estatutopestatutop : estatuto estatutop\n                    | emptyestatuto : asignacion\n                    | condicion\n                    | write\n                    | while\n                    | return\n                    | emptyreturn : RETURN superexpresion ';' condicion : IF '(' superexpresion ')' condicionAux bloque condicionelsecondicionAux : condicionelse : ELSE condicionelseAux bloque\n                        | emptycondicionelseAux : write : WRITE '(' writep ')' ';' writep : superexpresion writepAux writepp\n              | LETRERO writepAux2 writeppwritepAux : writepAux2 : writepp : ',' writeppAux writep\n                | empty writeppAuxwriteppAux : while : WHILE whileAux '(' superexpresion ')' whileAux2 bloquewhileAux : whileAux2 : asignacion : vars\n                    | id asignacionpasignacionp : '=' superexpresion ';'\n                    | '[' superexpresion ']' '=' superexpresion ';' superexpresion : megaexpresion superexpresionpsuperexpresionp : AND superexpresion\n                        | OR superexpresion\n                        | emptymegaexpresion : exp megaexpresionpmegaexpresionp : '<' exp\n                        | '>' exp\n                        | EQUALS exp\n                        | DIFF exp\n                        | LTHANEQ exp\n                        | GTHANEQ exp\n                        | emptyexp : termino exppexpp : '+' exp\n            | '-' exp\n            | emptytermino : factor terminopterminop : '*' termino\n                | '/' termino\n                | emptyfactor : constante\n                | lParen superexpresion rParen lParen : '(' rParen : ')' constante : id\n                | CTEF ctef\n                | CTEI cteictef : ctei : functionParam : parametro\n                    | emptyparametro : tipo ID parametropparametrop : ',' parametro\n                | emptyvars : varspvarsp : tipo varspp ';' varsp\n                | emptyvarspp : ID varspppvarsppp : ',' varspp\n                | emptytipo : INT\n            | FLOAT\n            | CHARid : ID idpidp : '(' idpp ')'\n            | '[' superexpresion ']'\n            | emptyidpp : superexpresion idppp\n            | emptyidppp : ',' idpp\n            | emptyempty :"
    
_lr_action_items = {'ID':([0,5,6,7,8,9,10,20,21,22,23,24,26,30,35,39,41,44,45,47,48,49,50,51,52,53,58,65,66,67,68,69,77,81,83,84,94,95,97,98,101,102,103,104,105,106,109,110,113,114,124,147,150,152,154,160,161,164,165,167,169,171,],[2,-77,16,-79,-83,-84,-85,29,-9,-10,-11,-94,16,-78,-94,43,59,-12,-39,59,-21,-16,-17,-18,-19,-20,59,-40,59,59,59,59,59,-65,59,59,59,-22,59,59,59,59,59,59,59,59,59,59,59,59,-41,59,59,-28,-35,-94,59,-42,-23,-26,-36,-25,]),'$end':([1,17,34,44,],[0,-1,-2,-12,]),';':([2,15,16,25,27,31,59,71,72,73,74,75,76,78,79,80,82,85,88,96,99,100,107,108,111,112,115,117,118,127,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,149,159,],[3,24,-94,-80,-82,-81,-94,95,-94,-94,-94,-94,-63,-67,-70,-71,-86,-89,124,-43,-46,-47,-54,-55,-58,-59,-62,-68,-69,152,-44,-45,-48,-49,-50,-51,-52,-53,-56,-57,-60,-61,-64,-66,-87,-88,164,]),'INT':([3,5,7,14,24,30,33,35,41,44,45,47,48,49,50,51,52,53,62,65,95,124,152,160,164,165,167,169,171,],[8,-77,-79,21,8,-78,8,8,8,-12,-39,8,-21,-16,-17,-18,-19,-20,8,-40,-22,-41,-28,-94,-42,-23,-26,-36,-25,]),'FLOAT':([3,5,7,14,24,30,33,35,41,44,45,47,48,49,50,51,52,53,62,65,95,124,152,160,164,165,167,169,171,],[9,-77,-79,22,9,-78,9,9,9,-12,-39,9,-21,-16,-17,-18,-19,-20,9,-40,-22,-41,-28,-94,-42,-23,-26,-36,-25,]),'CHAR':([3,5,7,24,30,33,35,41,44,45,47,48,49,50,51,52,53,62,65,95,124,152,160,164,165,167,169,171,],[10,-77,-79,10,-78,10,10,10,-12,-39,10,-21,-16,-17,-18,-19,-20,10,-40,-22,-41,-28,-94,-42,-23,-26,-36,-25,]),'FUNCTION':([3,4,5,7,12,13,24,30,44,86,123,],[-94,14,-77,-79,14,-6,-94,-78,-12,-8,-5,]),'MAIN':([3,4,5,7,11,12,13,19,24,30,44,86,123,],[-94,-94,-77,-79,18,-94,-4,-3,-94,-78,-12,-8,-5,]),'IF':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,95,124,152,160,164,165,167,169,171,],[-77,-79,-94,-78,-94,55,-12,-39,55,-21,-16,-17,-18,-19,-20,-40,-22,-41,-28,-94,-42,-23,-26,-36,-25,]),'WRITE':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,95,124,152,160,164,165,167,169,171,],[-77,-79,-94,-78,-94,56,-12,-39,56,-21,-16,-17,-18,-19,-20,-40,-22,-41,-28,-94,-42,-23,-26,-36,-25,]),'WHILE':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,95,124,152,160,164,165,167,169,171,],[-77,-79,-94,-78,-94,57,-12,-39,57,-21,-16,-17,-18,-19,-20,-40,-22,-41,-28,-94,-42,-23,-26,-36,-25,]),'RETURN':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,95,124,152,160,164,165,167,169,171,],[-77,-79,-94,-78,-94,58,-12,-39,58,-21,-16,-17,-18,-19,-20,-40,-22,-41,-28,-94,-42,-23,-26,-36,-25,]),'}':([5,7,24,30,35,40,41,44,45,46,47,48,49,50,51,52,53,64,65,95,124,152,160,164,165,167,169,171,],[-77,-79,-94,-78,-94,44,-94,-12,-39,-13,-94,-15,-16,-17,-18,-19,-20,-14,-40,-22,-41,-28,-94,-42,-23,-26,-36,-25,]),'VOID':([14,],[23,]),',':([16,43,59,72,73,74,75,76,78,79,80,82,85,92,93,96,99,100,107,108,111,112,115,117,118,120,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,149,],[26,62,-94,-94,-94,-94,-94,-63,-67,-70,-71,-86,-89,-31,-32,-43,-46,-47,-54,-55,-58,-59,-62,-68,-69,147,154,154,-44,-45,-48,-49,-50,-51,-52,-53,-56,-57,-60,-61,-64,-66,-87,-88,]),'(':([18,29,55,56,57,58,59,66,67,68,69,70,77,81,83,84,94,97,98,101,102,103,104,105,106,109,110,113,114,147,150,154,161,],[28,33,68,69,-37,81,83,81,81,81,81,94,81,-65,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-35,81,]),')':([28,33,36,37,38,43,59,61,63,72,73,74,75,76,78,79,80,82,83,85,87,90,91,92,93,96,99,100,107,108,111,112,115,116,117,118,119,120,121,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,156,158,162,168,],[32,-94,42,-72,-73,-94,-94,-74,-76,-94,-94,-94,-94,-63,-67,-70,-71,-86,-94,-89,-75,126,127,-31,-32,-43,-46,-47,-54,-55,-58,-59,-62,144,-68,-69,145,-94,-91,-94,-94,157,-44,-45,-48,-49,-50,-51,-52,-53,-56,-57,-60,-61,-64,-66,-87,-90,-94,-93,-88,-29,-35,-30,-92,-34,-33,]),'{':([32,42,60,126,151,157,163,166,170,],[35,-7,35,-24,35,-38,35,-27,35,]),'ELSE':([44,160,],[-12,166,]),'=':([54,59,82,85,125,145,149,],[66,-94,-86,-89,150,-87,-88,]),'[':([54,59,82,85,145,149,],[67,84,-86,-89,-87,-88,]),'CTEF':([58,66,67,68,69,77,81,83,84,94,97,98,101,102,103,104,105,106,109,110,113,114,147,150,154,161,],[79,79,79,79,79,79,-65,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-35,79,]),'CTEI':([58,66,67,68,69,77,81,83,84,94,97,98,101,102,103,104,105,106,109,110,113,114,147,150,154,161,],[80,80,80,80,80,80,-65,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-35,80,]),'*':([59,75,76,78,79,80,82,85,117,118,143,144,145,149,],[-94,113,-63,-67,-70,-71,-86,-89,-68,-69,-64,-66,-87,-88,]),'/':([59,75,76,78,79,80,82,85,117,118,143,144,145,149,],[-94,114,-63,-67,-70,-71,-86,-89,-68,-69,-64,-66,-87,-88,]),'+':([59,74,75,76,78,79,80,82,85,112,115,117,118,141,142,143,144,145,149,],[-94,109,-94,-63,-67,-70,-71,-86,-89,-59,-62,-68,-69,-60,-61,-64,-66,-87,-88,]),'-':([59,74,75,76,78,79,80,82,85,112,115,117,118,141,142,143,144,145,149,],[-94,110,-94,-63,-67,-70,-71,-86,-89,-59,-62,-68,-69,-60,-61,-64,-66,-87,-88,]),'<':([59,73,74,75,76,78,79,80,82,85,108,111,112,115,117,118,139,140,141,142,143,144,145,149,],[-94,101,-94,-94,-63,-67,-70,-71,-86,-89,-55,-58,-59,-62,-68,-69,-56,-57,-60,-61,-64,-66,-87,-88,]),'>':([59,73,74,75,76,78,79,80,82,85,108,111,112,115,117,118,139,140,141,142,143,144,145,149,],[-94,102,-94,-94,-63,-67,-70,-71,-86,-89,-55,-58,-59,-62,-68,-69,-56,-57,-60,-61,-64,-66,-87,-88,]),'EQUALS':([59,73,74,75,76,78,79,80,82,85,108,111,112,115,117,118,139,140,141,142,143,144,145,149,],[-94,103,-94,-94,-63,-67,-70,-71,-86,-89,-55,-58,-59,-62,-68,-69,-56,-57,-60,-61,-64,-66,-87,-88,]),'DIFF':([59,73,74,75,76,78,79,80,82,85,108,111,112,115,117,118,139,140,141,142,143,144,145,149,],[-94,104,-94,-94,-63,-67,-70,-71,-86,-89,-55,-58,-59,-62,-68,-69,-56,-57,-60,-61,-64,-66,-87,-88,]),'LTHANEQ':([59,73,74,75,76,78,79,80,82,85,108,111,112,115,117,118,139,140,141,142,143,144,145,149,],[-94,105,-94,-94,-63,-67,-70,-71,-86,-89,-55,-58,-59,-62,-68,-69,-56,-57,-60,-61,-64,-66,-87,-88,]),'GTHANEQ':([59,73,74,75,76,78,79,80,82,85,108,111,112,115,117,118,139,140,141,142,143,144,145,149,],[-94,106,-94,-94,-63,-67,-70,-71,-86,-89,-55,-58,-59,-62,-68,-69,-56,-57,-60,-61,-64,-66,-87,-88,]),'AND':([59,72,73,74,75,76,78,79,80,82,85,100,107,108,111,112,115,117,118,133,134,135,136,137,138,139,140,141,142,143,144,145,149,],[-94,97,-94,-94,-94,-63,-67,-70,-71,-86,-89,-47,-54,-55,-58,-59,-62,-68,-69,-48,-49,-50,-51,-52,-53,-56,-57,-60,-61,-64,-66,-87,-88,]),'OR':([59,72,73,74,75,76,78,79,80,82,85,100,107,108,111,112,115,117,118,133,134,135,136,137,138,139,140,141,142,143,144,145,149,],[-94,98,-94,-94,-94,-63,-67,-70,-71,-86,-89,-47,-54,-55,-58,-59,-62,-68,-69,-48,-49,-50,-51,-52,-53,-56,-57,-60,-61,-64,-66,-87,-88,]),']':([59,72,73,74,75,76,78,79,80,82,85,89,96,99,100,107,108,111,112,115,117,118,122,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,149,],[-94,-94,-94,-94,-94,-63,-67,-70,-71,-86,-89,125,-43,-46,-47,-54,-55,-58,-59,-62,-68,-69,149,-44,-45,-48,-49,-50,-51,-52,-53,-56,-57,-60,-61,-64,-66,-87,-88,]),'LETRERO':([69,154,161,],[93,-35,93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([3,35,41,47,],[4,41,45,45,]),'varsp':([3,24,35,41,47,],[5,30,5,5,5,]),'tipo':([3,24,33,35,41,47,62,],[6,6,39,6,6,6,39,]),'empty':([3,4,12,16,24,33,35,41,43,47,59,72,73,74,75,83,120,128,129,147,160,],[7,13,13,27,7,38,7,48,63,48,85,99,107,111,115,121,148,155,155,121,167,]),'programaF':([4,12,],[11,19,]),'function':([4,12,],[12,12,]),'varspp':([6,26,],[15,31,]),'main':([11,],[17,]),'tipoRetorno':([14,],[20,]),'varsppp':([16,],[25,]),'bloque':([32,60,151,163,170,],[34,86,160,169,171,]),'functionParam':([33,],[36,]),'parametro':([33,62,],[37,87,]),'cuerpo':([35,],[40,]),'estatutop':([41,47,],[46,64,]),'estatuto':([41,47,],[47,47,]),'asignacion':([41,47,],[49,49,]),'condicion':([41,47,],[50,50,]),'write':([41,47,],[51,51,]),'while':([41,47,],[52,52,]),'return':([41,47,],[53,53,]),'id':([41,47,58,66,67,68,69,77,83,84,94,97,98,101,102,103,104,105,106,109,110,113,114,147,150,161,],[54,54,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'functionAux':([42,],[60,]),'parametrop':([43,],[61,]),'asignacionp':([54,],[65,]),'whileAux':([57,],[70,]),'superexpresion':([58,66,67,68,69,77,83,84,94,97,98,147,150,161,],[71,88,89,90,92,116,120,122,130,131,132,120,159,92,]),'megaexpresion':([58,66,67,68,69,77,83,84,94,97,98,147,150,161,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'exp':([58,66,67,68,69,77,83,84,94,97,98,101,102,103,104,105,106,109,110,147,150,161,],[73,73,73,73,73,73,73,73,73,73,73,133,134,135,136,137,138,139,140,73,73,73,]),'termino':([58,66,67,68,69,77,83,84,94,97,98,101,102,103,104,105,106,109,110,113,114,147,150,161,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,141,142,74,74,74,]),'factor':([58,66,67,68,69,77,83,84,94,97,98,101,102,103,104,105,106,109,110,113,114,147,150,161,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'constante':([58,66,67,68,69,77,83,84,94,97,98,101,102,103,104,105,106,109,110,113,114,147,150,161,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'lParen':([58,66,67,68,69,77,83,84,94,97,98,101,102,103,104,105,106,109,110,113,114,147,150,161,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'idp':([59,],[82,]),'writep':([69,161,],[91,168,]),'superexpresionp':([72,],[96,]),'megaexpresionp':([73,],[100,]),'expp':([74,],[108,]),'terminop':([75,],[112,]),'ctef':([79,],[117,]),'ctei':([80,],[118,]),'idpp':([83,147,],[119,158,]),'functionAux2':([86,],[123,]),'writepAux':([92,],[128,]),'writepAux2':([93,],[129,]),'rParen':([116,],[143,]),'idppp':([120,],[146,]),'condicionAux':([126,],[151,]),'writepp':([128,129,],[153,156,]),'writeppAux':([154,155,],[161,162,]),'whileAux2':([157,],[163,]),'condicionelse':([160,],[165,]),'condicionelseAux':([166,],[170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ID ; vars programaF main','programa',5,'p_programa','parser.py',24),
  ('main -> MAIN ( ) bloque','main',4,'p_main','parser.py',27),
  ('programaF -> function programaF','programaF',2,'p_programaF','parser.py',30),
  ('programaF -> empty','programaF',1,'p_programaF','parser.py',31),
  ('function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2','function',9,'p_function','parser.py',34),
  ('function -> empty','function',1,'p_function','parser.py',35),
  ('functionAux -> <empty>','functionAux',0,'p_functionAux','parser.py',38),
  ('functionAux2 -> <empty>','functionAux2',0,'p_functionAux2','parser.py',51),
  ('tipoRetorno -> INT','tipoRetorno',1,'p_tipoRetorno','parser.py',59),
  ('tipoRetorno -> FLOAT','tipoRetorno',1,'p_tipoRetorno','parser.py',60),
  ('tipoRetorno -> VOID','tipoRetorno',1,'p_tipoRetorno','parser.py',61),
  ('bloque -> { cuerpo }','bloque',3,'p_bloque','parser.py',65),
  ('cuerpo -> vars estatutop','cuerpo',2,'p_cuerpo','parser.py',68),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_estatutop','parser.py',71),
  ('estatutop -> empty','estatutop',1,'p_estatutop','parser.py',72),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',75),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',76),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser.py',77),
  ('estatuto -> while','estatuto',1,'p_estatuto','parser.py',78),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser.py',79),
  ('estatuto -> empty','estatuto',1,'p_estatuto','parser.py',80),
  ('return -> RETURN superexpresion ;','return',3,'p_return','parser.py',84),
  ('condicion -> IF ( superexpresion ) condicionAux bloque condicionelse','condicion',7,'p_condicion','parser.py',98),
  ('condicionAux -> <empty>','condicionAux',0,'p_condicionAux','parser.py',101),
  ('condicionelse -> ELSE condicionelseAux bloque','condicionelse',3,'p_condicionelse','parser.py',111),
  ('condicionelse -> empty','condicionelse',1,'p_condicionelse','parser.py',112),
  ('condicionelseAux -> <empty>','condicionelseAux',0,'p_condicionelseAux','parser.py',117),
  ('write -> WRITE ( writep ) ;','write',5,'p_write','parser.py',124),
  ('writep -> superexpresion writepAux writepp','writep',3,'p_writep','parser.py',127),
  ('writep -> LETRERO writepAux2 writepp','writep',3,'p_writep','parser.py',128),
  ('writepAux -> <empty>','writepAux',0,'p_writepAux','parser.py',131),
  ('writepAux2 -> <empty>','writepAux2',0,'p_writepAux2','parser.py',136),
  ('writepp -> , writeppAux writep','writepp',3,'p_writepp','parser.py',143),
  ('writepp -> empty writeppAux','writepp',2,'p_writepp','parser.py',144),
  ('writeppAux -> <empty>','writeppAux',0,'p_writeppAux','parser.py',147),
  ('while -> WHILE whileAux ( superexpresion ) whileAux2 bloque','while',7,'p_while','parser.py',166),
  ('whileAux -> <empty>','whileAux',0,'p_whileAux','parser.py',173),
  ('whileAux2 -> <empty>','whileAux2',0,'p_whileAux2','parser.py',177),
  ('asignacion -> vars','asignacion',1,'p_asignacion','parser.py',186),
  ('asignacion -> id asignacionp','asignacion',2,'p_asignacion','parser.py',187),
  ('asignacionp -> = superexpresion ;','asignacionp',3,'p_asignacionp','parser.py',190),
  ('asignacionp -> [ superexpresion ] = superexpresion ;','asignacionp',6,'p_asignacionp','parser.py',191),
  ('superexpresion -> megaexpresion superexpresionp','superexpresion',2,'p_superexpresion','parser.py',197),
  ('superexpresionp -> AND superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',213),
  ('superexpresionp -> OR superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',214),
  ('superexpresionp -> empty','superexpresionp',1,'p_superexpresionp','parser.py',215),
  ('megaexpresion -> exp megaexpresionp','megaexpresion',2,'p_megaexpresion','parser.py',220),
  ('megaexpresionp -> < exp','megaexpresionp',2,'p_megaexpresionp','parser.py',235),
  ('megaexpresionp -> > exp','megaexpresionp',2,'p_megaexpresionp','parser.py',236),
  ('megaexpresionp -> EQUALS exp','megaexpresionp',2,'p_megaexpresionp','parser.py',237),
  ('megaexpresionp -> DIFF exp','megaexpresionp',2,'p_megaexpresionp','parser.py',238),
  ('megaexpresionp -> LTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',239),
  ('megaexpresionp -> GTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',240),
  ('megaexpresionp -> empty','megaexpresionp',1,'p_megaexpresionp','parser.py',241),
  ('exp -> termino expp','exp',2,'p_exp','parser.py',246),
  ('expp -> + exp','expp',2,'p_expp','parser.py',261),
  ('expp -> - exp','expp',2,'p_expp','parser.py',262),
  ('expp -> empty','expp',1,'p_expp','parser.py',263),
  ('termino -> factor terminop','termino',2,'p_termino','parser.py',268),
  ('terminop -> * termino','terminop',2,'p_terminop','parser.py',283),
  ('terminop -> / termino','terminop',2,'p_terminop','parser.py',284),
  ('terminop -> empty','terminop',1,'p_terminop','parser.py',285),
  ('factor -> constante','factor',1,'p_factor','parser.py',290),
  ('factor -> lParen superexpresion rParen','factor',3,'p_factor','parser.py',291),
  ('lParen -> (','lParen',1,'p_lParen','parser.py',294),
  ('rParen -> )','rParen',1,'p_rParen','parser.py',298),
  ('constante -> id','constante',1,'p_constante','parser.py',302),
  ('constante -> CTEF ctef','constante',2,'p_constante','parser.py',303),
  ('constante -> CTEI ctei','constante',2,'p_constante','parser.py',304),
  ('ctef -> <empty>','ctef',0,'p_ctef','parser.py',307),
  ('ctei -> <empty>','ctei',0,'p_ctei','parser.py',313),
  ('functionParam -> parametro','functionParam',1,'p_functionParam','parser.py',319),
  ('functionParam -> empty','functionParam',1,'p_functionParam','parser.py',320),
  ('parametro -> tipo ID parametrop','parametro',3,'p_parametro','parser.py',323),
  ('parametrop -> , parametro','parametrop',2,'p_parametrop','parser.py',329),
  ('parametrop -> empty','parametrop',1,'p_parametrop','parser.py',330),
  ('vars -> varsp','vars',1,'p_vars','parser.py',333),
  ('varsp -> tipo varspp ; varsp','varsp',4,'p_varsp','parser.py',337),
  ('varsp -> empty','varsp',1,'p_varsp','parser.py',338),
  ('varspp -> ID varsppp','varspp',2,'p_varspp','parser.py',341),
  ('varsppp -> , varspp','varsppp',2,'p_varsppp','parser.py',358),
  ('varsppp -> empty','varsppp',1,'p_varsppp','parser.py',359),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',362),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',363),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',364),
  ('id -> ID idp','id',2,'p_id','parser.py',368),
  ('idp -> ( idpp )','idp',3,'p_idp','parser.py',371),
  ('idp -> [ superexpresion ]','idp',3,'p_idp','parser.py',372),
  ('idp -> empty','idp',1,'p_idp','parser.py',373),
  ('idpp -> superexpresion idppp','idpp',2,'p_idpp','parser.py',378),
  ('idpp -> empty','idpp',1,'p_idpp','parser.py',379),
  ('idppp -> , idpp','idppp',2,'p_idppp','parser.py',382),
  ('idppp -> empty','idppp',1,'p_idppp','parser.py',383),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',386),
]
