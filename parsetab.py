
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ARREGLO CHAR CTEF CTEI CUADRATICA DIFF ELSE EQUALS FACT FIBONACCI FLOAT FOR FUNCTION GTHANEQ ID IF INT LETRERO LTHANEQ MAIN OR RAIZ READ RETURN VOID WHILE WRITEprograma : ID primerCuad ';' vars programaF mainprimerCuad : main : MAIN llenarCuad '(' ')' bloquellenarCuad : programaF : function programaF\n                    | emptyfunction : FUNCTION tipoRetorno ID '(' functionParam ')' functionAux bloque functionAux2\n                | emptyfunctionAux : functionAux2 : tipoRetorno : INT\n                    | FLOAT\n                    | VOIDbloque : '{' cuerpo '}' cuerpo : vars estatutopestatutop : estatuto estatutop\n                    | emptyestatuto : asignacion\n                    | condicion\n                    | write\n                    | read\n                    | while\n                    | return\n                    | for\n                    | fact\n                    | fibonacci\n                    | cuadratica\n                    | raiz\n                    | id ';'\n                    | emptyreturn : RETURN '(' superexpresion ')' ';' condicion : IF '(' superexpresion ')' condicionAux bloque condicionelsecondicionAux : condicionelse : ELSE condicionelseAux bloque\n                        | emptycondicionelseAux : write : WRITE '(' writep ')' ';' writep : superexpresion writepAux writepp\n              | LETRERO writepAux2 writeppwritepAux : writepAux2 : writepp : ',' writeppAux writep\n                | writeppAux\n                | emptywriteppAux : read : READ '(' id ')' readAux ';' readAux : for : FOR '(' id '=' superexpresion forAux ';' superexpresion forAux2 ';' asignacion ')' bloque forAux3forAux : forAux2 : forAux3 : while : WHILE whileAux '(' superexpresion ')' whileAux2 bloquewhileAux : whileAux2 : asignacion : vars\n                    | id asignacionpasignacionp : '=' superexpresion ';' superexpresion : megaexpresion superexpresionpsuperexpresionp : AND superexpresion\n                        | OR superexpresion\n                        | emptymegaexpresion : exp megaexpresionpmegaexpresionp : '<' exp\n                        | '>' exp\n                        | EQUALS exp\n                        | DIFF exp\n                        | LTHANEQ exp\n                        | GTHANEQ exp\n                        | emptyexp : termino exppexpp : '+' pAppT exp\n            | '-' pAppT exp\n            | emptypAppT : termino : factor terminopterminop : '*' pAppF termino\n                | '/' pAppF termino\n                | emptypAppF : factor : constante\n                | lParen superexpresion rParen lParen : '(' rParen : ')' constante : id\n                | CTEF ctef\n                | CTEI cteictef : ctei : functionParam : parametro\n                    | emptyparametro : tipo ID parametropparametrop : ',' parametro\n                | emptyvars : varspvarsp : tipo varspp ';' varsp\n                | emptyvarspp : ID varspppvarsppp : ',' varspp\n                | emptytipo : INT\n            | FLOAT\n            | CHAR\n            | ARREGLO arregloarreglo : '[' CTEI ']' id : ID idpidp : '(' idpp ')'\n            | '[' CTEI ']'\n            | emptyidpp : superexpresion idppp\n            | emptyidppp : ',' idpp\n            | emptyfact : FACT '(' CTEI ')' ';' cuadratica : CUADRATICA '(' CTEI ',' CTEI ',' CTEI ')' ';' fibonacci : FIBONACCI '(' CTEI ')' ';' raiz : RAIZ '(' CTEI ')' ';' empty :"
    
_lr_action_items = {'ID':([0,6,7,8,9,10,11,19,24,25,26,27,28,30,35,37,44,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,88,89,90,91,93,94,100,110,114,120,131,133,134,137,138,139,140,141,142,145,146,149,150,162,169,180,181,182,183,187,189,195,197,198,200,206,207,208,212,214,216,217,222,224,225,229,230,],[2,-94,18,-96,-100,-101,-102,-103,34,-11,-12,-13,-117,18,-95,-104,48,-117,82,-14,-55,82,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,82,82,82,82,82,82,82,82,-82,82,-57,82,82,82,82,82,82,82,82,-74,-74,-79,-79,82,82,82,82,82,82,-37,-45,-31,-113,-115,-116,-117,82,-46,-32,-35,-52,82,-34,-114,82,-51,-48,]),'$end':([1,21,45,55,],[0,-1,-3,-14,]),';':([2,3,17,18,29,31,36,71,82,99,102,104,105,106,107,108,109,111,112,113,132,135,136,143,144,147,148,151,153,154,156,159,161,163,164,166,167,171,172,173,174,175,176,177,178,179,184,185,193,196,202,203,204,205,210,220,221,223,],[-2,4,28,-117,-97,-99,-98,86,-117,-105,-108,131,-117,-117,-117,-117,-80,-84,-87,-88,-58,-61,-62,-69,-70,-73,-75,-78,-85,-86,187,-47,195,197,198,200,-106,-107,-59,-60,-63,-64,-65,-66,-67,-68,-81,-83,208,-49,-71,-72,-76,-77,217,-50,224,225,]),'INT':([4,6,8,16,28,35,39,46,50,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,225,229,230,],[9,-94,-96,25,9,-95,9,9,9,9,-14,-55,9,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,9,-51,-48,]),'FLOAT':([4,6,8,16,28,35,39,46,50,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,225,229,230,],[10,-94,-96,26,10,-95,10,10,10,10,-14,-55,10,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,10,-51,-48,]),'CHAR':([4,6,8,28,35,39,46,50,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,225,229,230,],[11,-94,-96,11,-95,11,11,11,11,-14,-55,11,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,11,-51,-48,]),'ARREGLO':([4,6,8,28,35,39,46,50,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,225,229,230,],[12,-94,-96,12,-95,12,12,12,12,-14,-55,12,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,12,-51,-48,]),'FUNCTION':([4,5,6,8,14,15,28,35,55,83,103,],[-117,16,-94,-96,16,-8,-117,-95,-14,-10,-7,]),'MAIN':([4,5,6,8,13,14,15,23,28,35,55,83,103,],[-117,-117,-94,-96,22,-117,-6,-5,-117,-95,-14,-10,-7,]),'IF':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,72,-14,-55,72,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'WRITE':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,73,-14,-55,73,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'READ':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,74,-14,-55,74,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'WHILE':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,75,-14,-55,75,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'RETURN':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,76,-14,-55,76,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'FOR':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,77,-14,-55,77,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'FACT':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,78,-14,-55,78,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'FIBONACCI':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,79,-14,-55,79,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'CUADRATICA':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,80,-14,-55,80,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'RAIZ':([6,8,28,35,46,50,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,81,-14,-55,81,-30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),'}':([6,8,28,35,46,49,50,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,85,86,87,131,187,195,197,198,200,206,208,212,214,216,222,224,229,230,],[-94,-96,-117,-95,-117,55,-117,-14,-55,-15,-117,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-16,-29,-56,-57,-37,-31,-113,-115,-116,-117,-46,-32,-35,-52,-34,-114,-51,-48,]),')':([6,8,28,35,38,39,41,42,43,48,52,54,56,82,84,87,99,100,102,105,106,107,108,109,111,112,113,115,116,117,118,119,121,123,124,126,127,128,129,131,132,135,136,143,144,147,148,151,152,153,154,157,158,160,167,168,169,170,171,172,173,174,175,176,177,178,179,184,185,188,190,191,192,201,202,203,204,205,215,218,225,227,],[-94,-96,-117,-95,40,-117,47,-89,-90,-117,-91,-93,-55,-117,-92,-56,-105,-117,-108,-117,-117,-117,-117,-80,-84,-87,-88,155,156,-40,-41,159,161,163,164,166,167,-117,-110,-57,-58,-61,-62,-69,-70,-73,-75,-78,185,-85,-86,-45,-45,194,-106,-109,-117,-112,-107,-59,-60,-63,-64,-65,-66,-67,-68,-81,-83,-38,-43,-44,-39,-111,-71,-72,-76,-77,-42,221,-117,228,]),'[':([12,82,],[20,101,]),'VOID':([16,],[27,]),',':([18,48,82,99,102,105,106,107,108,109,111,112,113,117,118,125,128,132,135,136,143,144,147,148,151,153,154,157,158,167,171,172,173,174,175,176,177,178,179,184,185,199,202,203,204,205,],[30,53,-117,-105,-108,-117,-117,-117,-117,-80,-84,-87,-88,-40,-41,165,169,-58,-61,-62,-69,-70,-73,-75,-78,-85,-86,189,189,-106,-107,-59,-60,-63,-64,-65,-66,-67,-68,-81,-83,211,-71,-72,-76,-77,]),'CTEI':([20,88,89,90,93,95,96,97,98,100,101,110,114,120,133,134,137,138,139,140,141,142,145,146,149,150,162,165,169,180,181,182,183,189,207,211,217,],[32,113,113,113,113,123,124,125,126,113,130,113,-82,113,113,113,113,113,113,113,113,113,-74,-74,-79,-79,113,199,113,113,113,113,113,-45,113,218,113,]),'(':([22,33,34,72,73,74,75,76,77,78,79,80,81,82,88,89,90,92,93,100,110,114,120,133,134,137,138,139,140,141,142,145,146,149,150,162,169,180,181,182,183,189,207,217,],[-4,38,39,89,90,91,-53,93,94,95,96,97,98,100,114,114,114,120,114,114,114,-82,114,114,114,114,114,114,114,114,114,-74,-74,-79,-79,114,114,114,114,114,114,-45,114,114,]),']':([32,130,],[37,171,]),'{':([40,47,51,155,186,194,209,213,219,228,],[46,-9,46,-33,46,-54,46,-36,46,46,]),'ELSE':([55,206,],[-14,213,]),'=':([71,82,99,102,122,167,171,226,],[88,-117,-105,-108,162,-106,-107,88,]),'*':([82,99,102,108,109,111,112,113,153,154,167,171,184,185,],[-117,-105,-108,149,-80,-84,-87,-88,-85,-86,-106,-107,-81,-83,]),'/':([82,99,102,108,109,111,112,113,153,154,167,171,184,185,],[-117,-105,-108,150,-80,-84,-87,-88,-85,-86,-106,-107,-81,-83,]),'+':([82,99,102,107,108,109,111,112,113,148,151,153,154,167,171,184,185,204,205,],[-117,-105,-108,145,-117,-80,-84,-87,-88,-75,-78,-85,-86,-106,-107,-81,-83,-76,-77,]),'-':([82,99,102,107,108,109,111,112,113,148,151,153,154,167,171,184,185,204,205,],[-117,-105,-108,146,-117,-80,-84,-87,-88,-75,-78,-85,-86,-106,-107,-81,-83,-76,-77,]),'<':([82,99,102,106,107,108,109,111,112,113,144,147,148,151,153,154,167,171,184,185,202,203,204,205,],[-117,-105,-108,137,-117,-117,-80,-84,-87,-88,-70,-73,-75,-78,-85,-86,-106,-107,-81,-83,-71,-72,-76,-77,]),'>':([82,99,102,106,107,108,109,111,112,113,144,147,148,151,153,154,167,171,184,185,202,203,204,205,],[-117,-105,-108,138,-117,-117,-80,-84,-87,-88,-70,-73,-75,-78,-85,-86,-106,-107,-81,-83,-71,-72,-76,-77,]),'EQUALS':([82,99,102,106,107,108,109,111,112,113,144,147,148,151,153,154,167,171,184,185,202,203,204,205,],[-117,-105,-108,139,-117,-117,-80,-84,-87,-88,-70,-73,-75,-78,-85,-86,-106,-107,-81,-83,-71,-72,-76,-77,]),'DIFF':([82,99,102,106,107,108,109,111,112,113,144,147,148,151,153,154,167,171,184,185,202,203,204,205,],[-117,-105,-108,140,-117,-117,-80,-84,-87,-88,-70,-73,-75,-78,-85,-86,-106,-107,-81,-83,-71,-72,-76,-77,]),'LTHANEQ':([82,99,102,106,107,108,109,111,112,113,144,147,148,151,153,154,167,171,184,185,202,203,204,205,],[-117,-105,-108,141,-117,-117,-80,-84,-87,-88,-70,-73,-75,-78,-85,-86,-106,-107,-81,-83,-71,-72,-76,-77,]),'GTHANEQ':([82,99,102,106,107,108,109,111,112,113,144,147,148,151,153,154,167,171,184,185,202,203,204,205,],[-117,-105,-108,142,-117,-117,-80,-84,-87,-88,-70,-73,-75,-78,-85,-86,-106,-107,-81,-83,-71,-72,-76,-77,]),'AND':([82,99,102,105,106,107,108,109,111,112,113,136,143,144,147,148,151,153,154,167,171,174,175,176,177,178,179,184,185,202,203,204,205,],[-117,-105,-108,133,-117,-117,-117,-80,-84,-87,-88,-62,-69,-70,-73,-75,-78,-85,-86,-106,-107,-63,-64,-65,-66,-67,-68,-81,-83,-71,-72,-76,-77,]),'OR':([82,99,102,105,106,107,108,109,111,112,113,136,143,144,147,148,151,153,154,167,171,174,175,176,177,178,179,184,185,202,203,204,205,],[-117,-105,-108,134,-117,-117,-117,-80,-84,-87,-88,-62,-69,-70,-73,-75,-78,-85,-86,-106,-107,-63,-64,-65,-66,-67,-68,-81,-83,-71,-72,-76,-77,]),'CTEF':([88,89,90,93,100,110,114,120,133,134,137,138,139,140,141,142,145,146,149,150,162,169,180,181,182,183,189,207,217,],[112,112,112,112,112,112,-82,112,112,112,112,112,112,112,112,112,-74,-74,-79,-79,112,112,112,112,112,112,-45,112,112,]),'LETRERO':([90,189,207,],[118,-45,118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'primerCuad':([2,],[3,]),'vars':([4,46,50,58,225,],[5,50,56,56,56,]),'varsp':([4,28,46,50,58,225,],[6,35,6,6,6,6,]),'tipo':([4,28,39,46,50,53,58,225,],[7,7,44,7,7,44,7,7,]),'empty':([4,5,14,18,28,39,46,48,50,58,82,100,105,106,107,108,128,157,158,169,206,225,],[8,15,15,31,8,43,8,54,59,59,102,129,135,143,147,151,170,191,191,129,214,8,]),'programaF':([5,14,],[13,23,]),'function':([5,14,],[14,14,]),'varspp':([7,30,],[17,36,]),'arreglo':([12,],[19,]),'main':([13,],[21,]),'tipoRetorno':([16,],[24,]),'varsppp':([18,],[29,]),'llenarCuad':([22,],[33,]),'functionParam':([39,],[41,]),'parametro':([39,53,],[42,84,]),'bloque':([40,51,186,209,219,228,],[45,83,206,216,222,229,]),'cuerpo':([46,],[49,]),'functionAux':([47,],[51,]),'parametrop':([48,],[52,]),'estatutop':([50,58,],[57,85,]),'estatuto':([50,58,],[58,58,]),'asignacion':([50,58,225,],[60,60,227,]),'condicion':([50,58,],[61,61,]),'write':([50,58,],[62,62,]),'read':([50,58,],[63,63,]),'while':([50,58,],[64,64,]),'return':([50,58,],[65,65,]),'for':([50,58,],[66,66,]),'fact':([50,58,],[67,67,]),'fibonacci':([50,58,],[68,68,]),'cuadratica':([50,58,],[69,69,]),'raiz':([50,58,],[70,70,]),'id':([50,58,88,89,90,91,93,94,100,110,120,133,134,137,138,139,140,141,142,162,169,180,181,182,183,207,217,225,],[71,71,111,111,111,119,111,122,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,226,]),'asignacionp':([71,226,],[87,87,]),'whileAux':([75,],[92,]),'idp':([82,],[99,]),'functionAux2':([83,],[103,]),'superexpresion':([88,89,90,93,100,110,120,133,134,162,169,207,217,],[104,115,117,121,128,152,160,172,173,196,128,117,220,]),'megaexpresion':([88,89,90,93,100,110,120,133,134,162,169,207,217,],[105,105,105,105,105,105,105,105,105,105,105,105,105,]),'exp':([88,89,90,93,100,110,120,133,134,137,138,139,140,141,142,162,169,180,181,207,217,],[106,106,106,106,106,106,106,106,106,174,175,176,177,178,179,106,106,202,203,106,106,]),'termino':([88,89,90,93,100,110,120,133,134,137,138,139,140,141,142,162,169,180,181,182,183,207,217,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,204,205,107,107,]),'factor':([88,89,90,93,100,110,120,133,134,137,138,139,140,141,142,162,169,180,181,182,183,207,217,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'constante':([88,89,90,93,100,110,120,133,134,137,138,139,140,141,142,162,169,180,181,182,183,207,217,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'lParen':([88,89,90,93,100,110,120,133,134,137,138,139,140,141,142,162,169,180,181,182,183,207,217,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'writep':([90,207,],[116,215,]),'idpp':([100,169,],[127,201,]),'superexpresionp':([105,],[132,]),'megaexpresionp':([106,],[136,]),'expp':([107,],[144,]),'terminop':([108,],[148,]),'ctef':([112,],[153,]),'ctei':([113,],[154,]),'writepAux':([117,],[157,]),'writepAux2':([118,],[158,]),'idppp':([128,],[168,]),'pAppT':([145,146,],[180,181,]),'pAppF':([149,150,],[182,183,]),'rParen':([152,],[184,]),'condicionAux':([155,],[186,]),'writepp':([157,158,],[188,192,]),'writeppAux':([157,158,189,],[190,190,207,]),'readAux':([159,],[193,]),'whileAux2':([194,],[209,]),'forAux':([196,],[210,]),'condicionelse':([206,],[212,]),'condicionelseAux':([213,],[219,]),'forAux2':([220,],[223,]),'forAux3':([229,],[230,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ID primerCuad ; vars programaF main','programa',6,'p_programa','parser.py',42),
  ('primerCuad -> <empty>','primerCuad',0,'p_primerCuad','parser.py',46),
  ('main -> MAIN llenarCuad ( ) bloque','main',5,'p_main','parser.py',50),
  ('llenarCuad -> <empty>','llenarCuad',0,'p_llenarCuad','parser.py',63),
  ('programaF -> function programaF','programaF',2,'p_programaF','parser.py',67),
  ('programaF -> empty','programaF',1,'p_programaF','parser.py',68),
  ('function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2','function',9,'p_function','parser.py',71),
  ('function -> empty','function',1,'p_function','parser.py',72),
  ('functionAux -> <empty>','functionAux',0,'p_functionAux','parser.py',75),
  ('functionAux2 -> <empty>','functionAux2',0,'p_functionAux2','parser.py',92),
  ('tipoRetorno -> INT','tipoRetorno',1,'p_tipoRetorno','parser.py',114),
  ('tipoRetorno -> FLOAT','tipoRetorno',1,'p_tipoRetorno','parser.py',115),
  ('tipoRetorno -> VOID','tipoRetorno',1,'p_tipoRetorno','parser.py',116),
  ('bloque -> { cuerpo }','bloque',3,'p_bloque','parser.py',120),
  ('cuerpo -> vars estatutop','cuerpo',2,'p_cuerpo','parser.py',123),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_estatutop','parser.py',126),
  ('estatutop -> empty','estatutop',1,'p_estatutop','parser.py',127),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',130),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',131),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser.py',132),
  ('estatuto -> read','estatuto',1,'p_estatuto','parser.py',133),
  ('estatuto -> while','estatuto',1,'p_estatuto','parser.py',134),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser.py',135),
  ('estatuto -> for','estatuto',1,'p_estatuto','parser.py',136),
  ('estatuto -> fact','estatuto',1,'p_estatuto','parser.py',137),
  ('estatuto -> fibonacci','estatuto',1,'p_estatuto','parser.py',138),
  ('estatuto -> cuadratica','estatuto',1,'p_estatuto','parser.py',139),
  ('estatuto -> raiz','estatuto',1,'p_estatuto','parser.py',140),
  ('estatuto -> id ;','estatuto',2,'p_estatuto','parser.py',141),
  ('estatuto -> empty','estatuto',1,'p_estatuto','parser.py',142),
  ('return -> RETURN ( superexpresion ) ;','return',5,'p_return','parser.py',145),
  ('condicion -> IF ( superexpresion ) condicionAux bloque condicionelse','condicion',7,'p_condicion','parser.py',160),
  ('condicionAux -> <empty>','condicionAux',0,'p_condicionAux','parser.py',163),
  ('condicionelse -> ELSE condicionelseAux bloque','condicionelse',3,'p_condicionelse','parser.py',176),
  ('condicionelse -> empty','condicionelse',1,'p_condicionelse','parser.py',177),
  ('condicionelseAux -> <empty>','condicionelseAux',0,'p_condicionelseAux','parser.py',183),
  ('write -> WRITE ( writep ) ;','write',5,'p_write','parser.py',191),
  ('writep -> superexpresion writepAux writepp','writep',3,'p_writep','parser.py',194),
  ('writep -> LETRERO writepAux2 writepp','writep',3,'p_writep','parser.py',195),
  ('writepAux -> <empty>','writepAux',0,'p_writepAux','parser.py',198),
  ('writepAux2 -> <empty>','writepAux2',0,'p_writepAux2','parser.py',203),
  ('writepp -> , writeppAux writep','writepp',3,'p_writepp','parser.py',210),
  ('writepp -> writeppAux','writepp',1,'p_writepp','parser.py',211),
  ('writepp -> empty','writepp',1,'p_writepp','parser.py',212),
  ('writeppAux -> <empty>','writeppAux',0,'p_writeppAux','parser.py',215),
  ('read -> READ ( id ) readAux ;','read',6,'p_read','parser.py',226),
  ('readAux -> <empty>','readAux',0,'p_readAux','parser.py',229),
  ('for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ; asignacion ) bloque forAux3','for',14,'p_for','parser.py',235),
  ('forAux -> <empty>','forAux',0,'p_forAux','parser.py',238),
  ('forAux2 -> <empty>','forAux2',0,'p_forAux2','parser.py',245),
  ('forAux3 -> <empty>','forAux3',0,'p_forAux3','parser.py',252),
  ('while -> WHILE whileAux ( superexpresion ) whileAux2 bloque','while',7,'p_while','parser.py',259),
  ('whileAux -> <empty>','whileAux',0,'p_whileAux','parser.py',267),
  ('whileAux2 -> <empty>','whileAux2',0,'p_whileAux2','parser.py',272),
  ('asignacion -> vars','asignacion',1,'p_asignacion','parser.py',282),
  ('asignacion -> id asignacionp','asignacion',2,'p_asignacion','parser.py',283),
  ('asignacionp -> = superexpresion ;','asignacionp',3,'p_asignacionp','parser.py',286),
  ('superexpresion -> megaexpresion superexpresionp','superexpresion',2,'p_superexpresion','parser.py',309),
  ('superexpresionp -> AND superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',329),
  ('superexpresionp -> OR superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',330),
  ('superexpresionp -> empty','superexpresionp',1,'p_superexpresionp','parser.py',331),
  ('megaexpresion -> exp megaexpresionp','megaexpresion',2,'p_megaexpresion','parser.py',336),
  ('megaexpresionp -> < exp','megaexpresionp',2,'p_megaexpresionp','parser.py',352),
  ('megaexpresionp -> > exp','megaexpresionp',2,'p_megaexpresionp','parser.py',353),
  ('megaexpresionp -> EQUALS exp','megaexpresionp',2,'p_megaexpresionp','parser.py',354),
  ('megaexpresionp -> DIFF exp','megaexpresionp',2,'p_megaexpresionp','parser.py',355),
  ('megaexpresionp -> LTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',356),
  ('megaexpresionp -> GTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',357),
  ('megaexpresionp -> empty','megaexpresionp',1,'p_megaexpresionp','parser.py',358),
  ('exp -> termino expp','exp',2,'p_exp','parser.py',363),
  ('expp -> + pAppT exp','expp',3,'p_expp','parser.py',381),
  ('expp -> - pAppT exp','expp',3,'p_expp','parser.py',382),
  ('expp -> empty','expp',1,'p_expp','parser.py',383),
  ('pAppT -> <empty>','pAppT',0,'p_pAppT','parser.py',388),
  ('termino -> factor terminop','termino',2,'p_termino','parser.py',408),
  ('terminop -> * pAppF termino','terminop',3,'p_terminop','parser.py',426),
  ('terminop -> / pAppF termino','terminop',3,'p_terminop','parser.py',427),
  ('terminop -> empty','terminop',1,'p_terminop','parser.py',428),
  ('pAppF -> <empty>','pAppF',0,'p_pAppF','parser.py',433),
  ('factor -> constante','factor',1,'p_factor','parser.py',456),
  ('factor -> lParen superexpresion rParen','factor',3,'p_factor','parser.py',457),
  ('lParen -> (','lParen',1,'p_lParen','parser.py',460),
  ('rParen -> )','rParen',1,'p_rParen','parser.py',464),
  ('constante -> id','constante',1,'p_constante','parser.py',468),
  ('constante -> CTEF ctef','constante',2,'p_constante','parser.py',469),
  ('constante -> CTEI ctei','constante',2,'p_constante','parser.py',470),
  ('ctef -> <empty>','ctef',0,'p_ctef','parser.py',473),
  ('ctei -> <empty>','ctei',0,'p_ctei','parser.py',481),
  ('functionParam -> parametro','functionParam',1,'p_functionParam','parser.py',487),
  ('functionParam -> empty','functionParam',1,'p_functionParam','parser.py',488),
  ('parametro -> tipo ID parametrop','parametro',3,'p_parametro','parser.py',491),
  ('parametrop -> , parametro','parametrop',2,'p_parametrop','parser.py',498),
  ('parametrop -> empty','parametrop',1,'p_parametrop','parser.py',499),
  ('vars -> varsp','vars',1,'p_vars','parser.py',502),
  ('varsp -> tipo varspp ; varsp','varsp',4,'p_varsp','parser.py',508),
  ('varsp -> empty','varsp',1,'p_varsp','parser.py',509),
  ('varspp -> ID varsppp','varspp',2,'p_varspp','parser.py',512),
  ('varsppp -> , varspp','varsppp',2,'p_varsppp','parser.py',536),
  ('varsppp -> empty','varsppp',1,'p_varsppp','parser.py',537),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',540),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',541),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',542),
  ('tipo -> ARREGLO arreglo','tipo',2,'p_tipo','parser.py',543),
  ('arreglo -> [ CTEI ]','arreglo',3,'p_arreglo','parser.py',547),
  ('id -> ID idp','id',2,'p_id','parser.py',552),
  ('idp -> ( idpp )','idp',3,'p_idp','parser.py',555),
  ('idp -> [ CTEI ]','idp',3,'p_idp','parser.py',556),
  ('idp -> empty','idp',1,'p_idp','parser.py',557),
  ('idpp -> superexpresion idppp','idpp',2,'p_idpp','parser.py',605),
  ('idpp -> empty','idpp',1,'p_idpp','parser.py',606),
  ('idppp -> , idpp','idppp',2,'p_idppp','parser.py',609),
  ('idppp -> empty','idppp',1,'p_idppp','parser.py',610),
  ('fact -> FACT ( CTEI ) ;','fact',5,'p_fact','parser.py',616),
  ('cuadratica -> CUADRATICA ( CTEI , CTEI , CTEI ) ;','cuadratica',9,'p_cuadratica','parser.py',620),
  ('fibonacci -> FIBONACCI ( CTEI ) ;','fibonacci',5,'p_fibonacci','parser.py',624),
  ('raiz -> RAIZ ( CTEI ) ;','raiz',5,'p_raiz','parser.py',628),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',633),
]
