
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND CHAR CTEF CTEI CUADRATICA DIFF ELSE EQUALS FACT FIBONACCI FLOAT FOR FUNCTION GTHANEQ ID IF INT LETRERO LTHANEQ MAIN OR RAIZ RETURN VOID WHILE WRITEprograma : ID primerCuad ';' vars programaF mainprimerCuad : main : MAIN llenarCuad '(' ')' bloquellenarCuad : programaF : function programaF\n                    | emptyfunction : FUNCTION tipoRetorno ID '(' functionParam ')' functionAux bloque functionAux2\n                | emptyfunctionAux : functionAux2 : tipoRetorno : INT\n                    | FLOAT\n                    | VOIDbloque : '{' cuerpo '}' cuerpo : vars estatutopestatutop : estatuto estatutop\n                    | emptyestatuto : asignacion\n                    | condicion\n                    | write\n                    | while\n                    | return\n                    | for\n                    | fact\n                    | fibonacci\n                    | cuadratica\n                    | raiz\n                    | id ';'\n                    | emptyreturn : RETURN superexpresion ';' condicion : IF '(' superexpresion ')' condicionAux bloque condicionelsecondicionAux : condicionelse : ELSE condicionelseAux bloque\n                        | emptycondicionelseAux : write : WRITE '(' writep ')' ';' writep : superexpresion writepAux writepp\n              | LETRERO writepAux2 writeppwritepAux : writepAux2 : writepp : ',' writeppAux writep\n                | empty writeppAuxwriteppAux : for : FOR '(' id '=' superexpresion forAux ';' superexpresion forAux2 ')' bloque forAux3forAux : forAux2 : forAux3 : while : WHILE whileAux '(' superexpresion ')' whileAux2 bloquewhileAux : whileAux2 : asignacion : vars\n                    | id asignacionpasignacionp : '=' superexpresion ';' superexpresion : megaexpresion superexpresionpsuperexpresionp : AND superexpresion\n                        | OR superexpresion\n                        | emptymegaexpresion : exp megaexpresionpmegaexpresionp : '<' exp\n                        | '>' exp\n                        | EQUALS exp\n                        | DIFF exp\n                        | LTHANEQ exp\n                        | GTHANEQ exp\n                        | emptyexp : termino exppexpp : '+' pAppT exp\n            | '-' pAppT exp\n            | emptypAppT : termino : factor terminopterminop : '*' pAppF termino\n                | '/' pAppF termino\n                | emptypAppF : factor : constante\n                | lParen superexpresion rParen lParen : '(' rParen : ')' constante : id\n                | CTEF ctef\n                | CTEI cteictef : ctei : functionParam : parametro\n                    | emptyparametro : tipo ID parametropparametrop : ',' parametro\n                | emptyvars : varspvarsp : tipo varspp ';' varsp\n                | emptyvarspp : ID varspppvarsppp : ',' varspp\n                | '[' CTEI ']' arreglo\n                | emptyarreglo : ',' varspp\n                | emptytipo : INT\n            | FLOAT\n            | CHARid : ID idpidp : '(' idpp ')'\n            | '[' superexpresion ']'\n            | emptyidpp : superexpresion idppp\n            | emptyidppp : ',' idpp\n            | emptyfact : FACT '(' CTEI ')' ';' cuadratica : CUADRATICA '(' CTEI ',' CTEI ',' CTEI ')' ';' fibonacci : FIBONACCI '(' CTEI ')' ';' raiz : RAIZ '(' CTEI ')' ';' empty :"
    
_lr_action_items = {'ID':([0,6,7,8,9,10,11,21,22,23,24,25,27,32,42,44,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,86,87,88,89,90,98,102,103,109,110,118,119,121,122,125,126,127,128,129,130,133,134,137,138,152,166,167,168,169,172,179,183,185,194,195,197,199,200,205,207,209,210,215,217,219,220,],[2,-90,17,-92,-99,-100,-101,31,-11,-12,-13,-114,17,-91,49,17,-114,82,-14,-51,82,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,82,-28,-52,82,82,82,82,-78,82,82,82,82,-30,82,82,82,82,82,82,82,82,-70,-70,-75,-75,-53,82,82,82,82,82,82,-36,-43,-110,-112,-113,-114,82,-31,-34,-48,82,-33,-111,-47,-44,]),'$end':([1,18,46,57,],[0,-1,-3,-14,]),';':([2,3,16,17,26,29,33,37,43,45,50,72,82,92,93,94,95,96,97,99,100,101,108,111,113,120,123,124,131,132,135,136,139,141,142,154,158,159,160,161,162,163,164,165,170,171,173,174,176,177,181,189,190,191,192,193,203,214,],[-2,4,25,-114,-93,-96,-94,-114,-95,-98,-97,86,-114,119,-114,-114,-114,-114,-76,-80,-83,-84,-102,-105,152,-54,-57,-58,-65,-66,-69,-71,-74,-81,-82,183,-55,-56,-59,-60,-61,-62,-63,-64,-77,-79,194,195,197,-103,-104,-67,-68,-72,-73,-45,210,217,]),'INT':([4,6,8,15,25,32,36,47,52,55,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[9,-90,-92,22,9,-91,9,9,9,9,-14,-51,9,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'FLOAT':([4,6,8,15,25,32,36,47,52,55,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[10,-90,-92,23,10,-91,10,10,10,10,-14,-51,10,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'CHAR':([4,6,8,25,32,36,47,52,55,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[11,-90,-92,11,-91,11,11,11,11,-14,-51,11,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'FUNCTION':([4,5,6,8,13,14,25,32,57,83,112,],[-114,15,-90,-92,15,-8,-114,-91,-14,-10,-7,]),'MAIN':([4,5,6,8,12,13,14,20,25,32,57,83,112,],[-114,-114,-90,-92,19,-114,-6,-5,-114,-91,-14,-10,-7,]),'IF':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,73,-14,-51,73,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'WRITE':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,74,-14,-51,74,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'WHILE':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,75,-14,-51,75,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'RETURN':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,76,-14,-51,76,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'FOR':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,77,-14,-51,77,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'FACT':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,78,-14,-51,78,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'FIBONACCI':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,79,-14,-51,79,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'CUADRATICA':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,80,-14,-51,80,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'RAIZ':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,68,69,70,71,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,81,-14,-51,81,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'}':([6,8,25,32,47,51,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,119,152,183,194,195,197,199,205,207,209,215,217,219,220,],[-90,-92,-114,-91,-114,57,-114,-14,-51,-15,-114,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-16,-28,-52,-30,-53,-36,-110,-112,-113,-114,-31,-34,-48,-33,-111,-47,-44,]),'VOID':([15,],[24,]),',':([17,37,49,82,93,94,95,96,97,99,100,101,108,111,116,117,120,123,124,131,132,135,136,139,141,142,146,149,155,156,158,159,160,161,162,163,164,165,170,171,177,181,189,190,191,192,196,],[27,44,55,-114,-114,-114,-114,-114,-76,-80,-83,-84,-102,-105,-39,-40,-54,-57,-58,-65,-66,-69,-71,-74,-81,-82,175,179,185,185,-55,-56,-59,-60,-61,-62,-63,-64,-77,-79,-103,-104,-67,-68,-72,-73,204,]),'[':([17,82,],[28,110,]),'(':([19,30,31,73,74,75,76,77,78,79,80,81,82,88,89,90,91,98,102,109,110,118,121,122,125,126,127,128,129,130,133,134,137,138,166,167,168,169,172,179,185,200,210,],[-4,35,36,89,90,-49,102,103,104,105,106,107,109,102,102,102,118,102,-78,102,102,102,102,102,102,102,102,102,102,102,-70,-70,-75,-75,102,102,102,102,102,102,-43,102,102,]),'CTEI':([28,76,88,89,90,98,102,104,105,106,107,109,110,118,121,122,125,126,127,128,129,130,133,134,137,138,166,167,168,169,172,175,179,185,200,204,210,],[34,101,101,101,101,101,-78,144,145,146,147,101,101,101,101,101,101,101,101,101,101,101,-70,-70,-75,-75,101,101,101,101,101,196,101,-43,101,211,101,]),']':([34,82,93,94,95,96,97,99,100,101,108,111,120,123,124,131,132,135,136,139,141,142,151,158,159,160,161,162,163,164,165,170,171,177,181,189,190,191,192,],[37,-114,-114,-114,-114,-114,-76,-80,-83,-84,-102,-105,-54,-57,-58,-65,-66,-69,-71,-74,-81,-82,181,-55,-56,-59,-60,-61,-62,-63,-64,-77,-79,-103,-104,-67,-68,-72,-73,]),')':([35,36,39,40,41,49,54,56,82,84,93,94,95,96,97,99,100,101,108,109,111,114,115,116,117,120,123,124,131,132,135,136,139,140,141,142,144,145,147,148,149,150,155,156,157,158,159,160,161,162,163,164,165,170,171,177,178,179,180,181,184,186,187,189,190,191,192,198,201,208,211,213,216,],[38,-114,48,-85,-86,-114,-87,-89,-114,-88,-114,-114,-114,-114,-76,-80,-83,-84,-102,-114,-105,153,154,-39,-40,-54,-57,-58,-65,-66,-69,-71,-74,171,-81,-82,173,174,176,177,-114,-107,-114,-114,188,-55,-56,-59,-60,-61,-62,-63,-64,-77,-79,-103,-106,-114,-109,-104,-37,-43,-38,-67,-68,-72,-73,-108,-42,-41,214,-46,218,]),'{':([38,48,53,153,182,188,202,206,212,218,],[47,-9,47,-32,47,-50,47,-35,47,47,]),'ELSE':([57,199,],[-14,206,]),'=':([72,82,108,111,143,177,181,],[88,-114,-102,-105,172,-103,-104,]),'CTEF':([76,88,89,90,98,102,109,110,118,121,122,125,126,127,128,129,130,133,134,137,138,166,167,168,169,172,179,185,200,210,],[100,100,100,100,100,-78,100,100,100,100,100,100,100,100,100,100,100,-70,-70,-75,-75,100,100,100,100,100,100,-43,100,100,]),'*':([82,96,97,99,100,101,108,111,141,142,170,171,177,181,],[-114,137,-76,-80,-83,-84,-102,-105,-81,-82,-77,-79,-103,-104,]),'/':([82,96,97,99,100,101,108,111,141,142,170,171,177,181,],[-114,138,-76,-80,-83,-84,-102,-105,-81,-82,-77,-79,-103,-104,]),'+':([82,95,96,97,99,100,101,108,111,136,139,141,142,170,171,177,181,191,192,],[-114,133,-114,-76,-80,-83,-84,-102,-105,-71,-74,-81,-82,-77,-79,-103,-104,-72,-73,]),'-':([82,95,96,97,99,100,101,108,111,136,139,141,142,170,171,177,181,191,192,],[-114,134,-114,-76,-80,-83,-84,-102,-105,-71,-74,-81,-82,-77,-79,-103,-104,-72,-73,]),'<':([82,94,95,96,97,99,100,101,108,111,132,135,136,139,141,142,170,171,177,181,189,190,191,192,],[-114,125,-114,-114,-76,-80,-83,-84,-102,-105,-66,-69,-71,-74,-81,-82,-77,-79,-103,-104,-67,-68,-72,-73,]),'>':([82,94,95,96,97,99,100,101,108,111,132,135,136,139,141,142,170,171,177,181,189,190,191,192,],[-114,126,-114,-114,-76,-80,-83,-84,-102,-105,-66,-69,-71,-74,-81,-82,-77,-79,-103,-104,-67,-68,-72,-73,]),'EQUALS':([82,94,95,96,97,99,100,101,108,111,132,135,136,139,141,142,170,171,177,181,189,190,191,192,],[-114,127,-114,-114,-76,-80,-83,-84,-102,-105,-66,-69,-71,-74,-81,-82,-77,-79,-103,-104,-67,-68,-72,-73,]),'DIFF':([82,94,95,96,97,99,100,101,108,111,132,135,136,139,141,142,170,171,177,181,189,190,191,192,],[-114,128,-114,-114,-76,-80,-83,-84,-102,-105,-66,-69,-71,-74,-81,-82,-77,-79,-103,-104,-67,-68,-72,-73,]),'LTHANEQ':([82,94,95,96,97,99,100,101,108,111,132,135,136,139,141,142,170,171,177,181,189,190,191,192,],[-114,129,-114,-114,-76,-80,-83,-84,-102,-105,-66,-69,-71,-74,-81,-82,-77,-79,-103,-104,-67,-68,-72,-73,]),'GTHANEQ':([82,94,95,96,97,99,100,101,108,111,132,135,136,139,141,142,170,171,177,181,189,190,191,192,],[-114,130,-114,-114,-76,-80,-83,-84,-102,-105,-66,-69,-71,-74,-81,-82,-77,-79,-103,-104,-67,-68,-72,-73,]),'AND':([82,93,94,95,96,97,99,100,101,108,111,124,131,132,135,136,139,141,142,160,161,162,163,164,165,170,171,177,181,189,190,191,192,],[-114,121,-114,-114,-114,-76,-80,-83,-84,-102,-105,-58,-65,-66,-69,-71,-74,-81,-82,-59,-60,-61,-62,-63,-64,-77,-79,-103,-104,-67,-68,-72,-73,]),'OR':([82,93,94,95,96,97,99,100,101,108,111,124,131,132,135,136,139,141,142,160,161,162,163,164,165,170,171,177,181,189,190,191,192,],[-114,122,-114,-114,-114,-76,-80,-83,-84,-102,-105,-58,-65,-66,-69,-71,-74,-81,-82,-59,-60,-61,-62,-63,-64,-77,-79,-103,-104,-67,-68,-72,-73,]),'LETRERO':([90,185,200,],[117,-43,117,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'primerCuad':([2,],[3,]),'vars':([4,47,52,60,],[5,52,58,58,]),'varsp':([4,25,47,52,60,],[6,32,6,6,6,]),'tipo':([4,25,36,47,52,55,60,],[7,7,42,7,7,42,7,]),'empty':([4,5,13,17,25,36,37,47,49,52,60,82,93,94,95,96,109,149,155,156,179,199,],[8,14,14,29,8,41,45,8,56,61,61,111,123,131,135,139,150,180,186,186,150,207,]),'programaF':([5,13,],[12,20,]),'function':([5,13,],[13,13,]),'varspp':([7,27,44,],[16,33,50,]),'main':([12,],[18,]),'tipoRetorno':([15,],[21,]),'varsppp':([17,],[26,]),'llenarCuad':([19,],[30,]),'functionParam':([36,],[39,]),'parametro':([36,55,],[40,84,]),'arreglo':([37,],[43,]),'bloque':([38,53,182,202,212,218,],[46,83,199,209,215,219,]),'cuerpo':([47,],[51,]),'functionAux':([48,],[53,]),'parametrop':([49,],[54,]),'estatutop':([52,60,],[59,85,]),'estatuto':([52,60,],[60,60,]),'asignacion':([52,60,],[62,62,]),'condicion':([52,60,],[63,63,]),'write':([52,60,],[64,64,]),'while':([52,60,],[65,65,]),'return':([52,60,],[66,66,]),'for':([52,60,],[67,67,]),'fact':([52,60,],[68,68,]),'fibonacci':([52,60,],[69,69,]),'cuadratica':([52,60,],[70,70,]),'raiz':([52,60,],[71,71,]),'id':([52,60,76,88,89,90,98,103,109,110,118,121,122,125,126,127,128,129,130,166,167,168,169,172,179,200,210,],[72,72,99,99,99,99,99,143,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'asignacionp':([72,],[87,]),'whileAux':([75,],[91,]),'superexpresion':([76,88,89,90,98,109,110,118,121,122,172,179,200,210,],[92,113,114,116,140,149,151,157,158,159,193,149,116,213,]),'megaexpresion':([76,88,89,90,98,109,110,118,121,122,172,179,200,210,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'exp':([76,88,89,90,98,109,110,118,121,122,125,126,127,128,129,130,166,167,172,179,200,210,],[94,94,94,94,94,94,94,94,94,94,160,161,162,163,164,165,189,190,94,94,94,94,]),'termino':([76,88,89,90,98,109,110,118,121,122,125,126,127,128,129,130,166,167,168,169,172,179,200,210,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,191,192,95,95,95,95,]),'factor':([76,88,89,90,98,109,110,118,121,122,125,126,127,128,129,130,166,167,168,169,172,179,200,210,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'constante':([76,88,89,90,98,109,110,118,121,122,125,126,127,128,129,130,166,167,168,169,172,179,200,210,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'lParen':([76,88,89,90,98,109,110,118,121,122,125,126,127,128,129,130,166,167,168,169,172,179,200,210,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'idp':([82,],[108,]),'functionAux2':([83,],[112,]),'writep':([90,200,],[115,208,]),'superexpresionp':([93,],[120,]),'megaexpresionp':([94,],[124,]),'expp':([95,],[132,]),'terminop':([96,],[136,]),'ctef':([100,],[141,]),'ctei':([101,],[142,]),'idpp':([109,179,],[148,198,]),'writepAux':([116,],[155,]),'writepAux2':([117,],[156,]),'pAppT':([133,134,],[166,167,]),'pAppF':([137,138,],[168,169,]),'rParen':([140,],[170,]),'idppp':([149,],[178,]),'condicionAux':([153,],[182,]),'writepp':([155,156,],[184,187,]),'writeppAux':([185,186,],[200,201,]),'whileAux2':([188,],[202,]),'forAux':([193,],[203,]),'condicionelse':([199,],[205,]),'condicionelseAux':([206,],[212,]),'forAux2':([213,],[216,]),'forAux3':([219,],[220,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ID primerCuad ; vars programaF main','programa',6,'p_programa','parser.py',35),
  ('primerCuad -> <empty>','primerCuad',0,'p_primerCuad','parser.py',38),
  ('main -> MAIN llenarCuad ( ) bloque','main',5,'p_main','parser.py',42),
  ('llenarCuad -> <empty>','llenarCuad',0,'p_llenarCuad','parser.py',45),
  ('programaF -> function programaF','programaF',2,'p_programaF','parser.py',49),
  ('programaF -> empty','programaF',1,'p_programaF','parser.py',50),
  ('function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2','function',9,'p_function','parser.py',53),
  ('function -> empty','function',1,'p_function','parser.py',54),
  ('functionAux -> <empty>','functionAux',0,'p_functionAux','parser.py',57),
  ('functionAux2 -> <empty>','functionAux2',0,'p_functionAux2','parser.py',72),
  ('tipoRetorno -> INT','tipoRetorno',1,'p_tipoRetorno','parser.py',92),
  ('tipoRetorno -> FLOAT','tipoRetorno',1,'p_tipoRetorno','parser.py',93),
  ('tipoRetorno -> VOID','tipoRetorno',1,'p_tipoRetorno','parser.py',94),
  ('bloque -> { cuerpo }','bloque',3,'p_bloque','parser.py',98),
  ('cuerpo -> vars estatutop','cuerpo',2,'p_cuerpo','parser.py',101),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_estatutop','parser.py',104),
  ('estatutop -> empty','estatutop',1,'p_estatutop','parser.py',105),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',108),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',109),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser.py',110),
  ('estatuto -> while','estatuto',1,'p_estatuto','parser.py',111),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser.py',112),
  ('estatuto -> for','estatuto',1,'p_estatuto','parser.py',113),
  ('estatuto -> fact','estatuto',1,'p_estatuto','parser.py',114),
  ('estatuto -> fibonacci','estatuto',1,'p_estatuto','parser.py',115),
  ('estatuto -> cuadratica','estatuto',1,'p_estatuto','parser.py',116),
  ('estatuto -> raiz','estatuto',1,'p_estatuto','parser.py',117),
  ('estatuto -> id ;','estatuto',2,'p_estatuto','parser.py',118),
  ('estatuto -> empty','estatuto',1,'p_estatuto','parser.py',119),
  ('return -> RETURN superexpresion ;','return',3,'p_return','parser.py',122),
  ('condicion -> IF ( superexpresion ) condicionAux bloque condicionelse','condicion',7,'p_condicion','parser.py',137),
  ('condicionAux -> <empty>','condicionAux',0,'p_condicionAux','parser.py',140),
  ('condicionelse -> ELSE condicionelseAux bloque','condicionelse',3,'p_condicionelse','parser.py',150),
  ('condicionelse -> empty','condicionelse',1,'p_condicionelse','parser.py',151),
  ('condicionelseAux -> <empty>','condicionelseAux',0,'p_condicionelseAux','parser.py',156),
  ('write -> WRITE ( writep ) ;','write',5,'p_write','parser.py',163),
  ('writep -> superexpresion writepAux writepp','writep',3,'p_writep','parser.py',166),
  ('writep -> LETRERO writepAux2 writepp','writep',3,'p_writep','parser.py',167),
  ('writepAux -> <empty>','writepAux',0,'p_writepAux','parser.py',170),
  ('writepAux2 -> <empty>','writepAux2',0,'p_writepAux2','parser.py',175),
  ('writepp -> , writeppAux writep','writepp',3,'p_writepp','parser.py',182),
  ('writepp -> empty writeppAux','writepp',2,'p_writepp','parser.py',183),
  ('writeppAux -> <empty>','writeppAux',0,'p_writeppAux','parser.py',186),
  ('for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3','for',12,'p_for','parser.py',194),
  ('forAux -> <empty>','forAux',0,'p_forAux','parser.py',197),
  ('forAux2 -> <empty>','forAux2',0,'p_forAux2','parser.py',203),
  ('forAux3 -> <empty>','forAux3',0,'p_forAux3','parser.py',209),
  ('while -> WHILE whileAux ( superexpresion ) whileAux2 bloque','while',7,'p_while','parser.py',215),
  ('whileAux -> <empty>','whileAux',0,'p_whileAux','parser.py',222),
  ('whileAux2 -> <empty>','whileAux2',0,'p_whileAux2','parser.py',226),
  ('asignacion -> vars','asignacion',1,'p_asignacion','parser.py',235),
  ('asignacion -> id asignacionp','asignacion',2,'p_asignacion','parser.py',236),
  ('asignacionp -> = superexpresion ;','asignacionp',3,'p_asignacionp','parser.py',239),
  ('superexpresion -> megaexpresion superexpresionp','superexpresion',2,'p_superexpresion','parser.py',245),
  ('superexpresionp -> AND superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',262),
  ('superexpresionp -> OR superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',263),
  ('superexpresionp -> empty','superexpresionp',1,'p_superexpresionp','parser.py',264),
  ('megaexpresion -> exp megaexpresionp','megaexpresion',2,'p_megaexpresion','parser.py',269),
  ('megaexpresionp -> < exp','megaexpresionp',2,'p_megaexpresionp','parser.py',285),
  ('megaexpresionp -> > exp','megaexpresionp',2,'p_megaexpresionp','parser.py',286),
  ('megaexpresionp -> EQUALS exp','megaexpresionp',2,'p_megaexpresionp','parser.py',287),
  ('megaexpresionp -> DIFF exp','megaexpresionp',2,'p_megaexpresionp','parser.py',288),
  ('megaexpresionp -> LTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',289),
  ('megaexpresionp -> GTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',290),
  ('megaexpresionp -> empty','megaexpresionp',1,'p_megaexpresionp','parser.py',291),
  ('exp -> termino expp','exp',2,'p_exp','parser.py',296),
  ('expp -> + pAppT exp','expp',3,'p_expp','parser.py',314),
  ('expp -> - pAppT exp','expp',3,'p_expp','parser.py',315),
  ('expp -> empty','expp',1,'p_expp','parser.py',316),
  ('pAppT -> <empty>','pAppT',0,'p_pAppT','parser.py',321),
  ('termino -> factor terminop','termino',2,'p_termino','parser.py',339),
  ('terminop -> * pAppF termino','terminop',3,'p_terminop','parser.py',357),
  ('terminop -> / pAppF termino','terminop',3,'p_terminop','parser.py',358),
  ('terminop -> empty','terminop',1,'p_terminop','parser.py',359),
  ('pAppF -> <empty>','pAppF',0,'p_pAppF','parser.py',364),
  ('factor -> constante','factor',1,'p_factor','parser.py',387),
  ('factor -> lParen superexpresion rParen','factor',3,'p_factor','parser.py',388),
  ('lParen -> (','lParen',1,'p_lParen','parser.py',391),
  ('rParen -> )','rParen',1,'p_rParen','parser.py',395),
  ('constante -> id','constante',1,'p_constante','parser.py',399),
  ('constante -> CTEF ctef','constante',2,'p_constante','parser.py',400),
  ('constante -> CTEI ctei','constante',2,'p_constante','parser.py',401),
  ('ctef -> <empty>','ctef',0,'p_ctef','parser.py',404),
  ('ctei -> <empty>','ctei',0,'p_ctei','parser.py',410),
  ('functionParam -> parametro','functionParam',1,'p_functionParam','parser.py',416),
  ('functionParam -> empty','functionParam',1,'p_functionParam','parser.py',417),
  ('parametro -> tipo ID parametrop','parametro',3,'p_parametro','parser.py',420),
  ('parametrop -> , parametro','parametrop',2,'p_parametrop','parser.py',426),
  ('parametrop -> empty','parametrop',1,'p_parametrop','parser.py',427),
  ('vars -> varsp','vars',1,'p_vars','parser.py',430),
  ('varsp -> tipo varspp ; varsp','varsp',4,'p_varsp','parser.py',435),
  ('varsp -> empty','varsp',1,'p_varsp','parser.py',436),
  ('varspp -> ID varsppp','varspp',2,'p_varspp','parser.py',439),
  ('varsppp -> , varspp','varsppp',2,'p_varsppp','parser.py',459),
  ('varsppp -> [ CTEI ] arreglo','varsppp',4,'p_varsppp','parser.py',460),
  ('varsppp -> empty','varsppp',1,'p_varsppp','parser.py',461),
  ('arreglo -> , varspp','arreglo',2,'p_arreglo','parser.py',464),
  ('arreglo -> empty','arreglo',1,'p_arreglo','parser.py',465),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',469),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',470),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',471),
  ('id -> ID idp','id',2,'p_id','parser.py',475),
  ('idp -> ( idpp )','idp',3,'p_idp','parser.py',478),
  ('idp -> [ superexpresion ]','idp',3,'p_idp','parser.py',479),
  ('idp -> empty','idp',1,'p_idp','parser.py',480),
  ('idpp -> superexpresion idppp','idpp',2,'p_idpp','parser.py',509),
  ('idpp -> empty','idpp',1,'p_idpp','parser.py',510),
  ('idppp -> , idpp','idppp',2,'p_idppp','parser.py',513),
  ('idppp -> empty','idppp',1,'p_idppp','parser.py',514),
  ('fact -> FACT ( CTEI ) ;','fact',5,'p_fact','parser.py',519),
  ('cuadratica -> CUADRATICA ( CTEI , CTEI , CTEI ) ;','cuadratica',9,'p_cuadratica','parser.py',523),
  ('fibonacci -> FIBONACCI ( CTEI ) ;','fibonacci',5,'p_fibonacci','parser.py',527),
  ('raiz -> RAIZ ( CTEI ) ;','raiz',5,'p_raiz','parser.py',531),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',535),
]
