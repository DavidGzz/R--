
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND CHAR CTEF CTEI DIFF ELSE EQUALS FLOAT FOR FUNCTION GTHANEQ ID IF INT LETRERO LTHANEQ MAIN OR RETURN VOID WHILE WRITEprograma : ID primerCuad ';' vars programaF mainprimerCuad : main : MAIN llenarCuad '(' ')' bloquellenarCuad : programaF : function programaF\n                    | emptyfunction : FUNCTION tipoRetorno ID '(' functionParam ')' functionAux bloque functionAux2\n                | emptyfunctionAux : functionAux2 : tipoRetorno : INT\n                    | FLOAT\n                    | VOIDbloque : '{' cuerpo '}' cuerpo : vars estatutopestatutop : estatuto estatutop\n                    | emptyestatuto : asignacion\n                    | condicion\n                    | write\n                    | while\n                    | return\n                    | for\n                    | id ';'\n                    | emptyreturn : RETURN superexpresion ';' condicion : IF '(' superexpresion ')' condicionAux bloque condicionelsecondicionAux : condicionelse : ELSE condicionelseAux bloque\n                        | emptycondicionelseAux : write : WRITE '(' writep ')' ';' writep : superexpresion writepAux writepp\n              | LETRERO writepAux2 writeppwritepAux : writepAux2 : writepp : ',' writeppAux writep\n                | empty writeppAuxwriteppAux : for : FOR '(' id '=' superexpresion forAux ';' superexpresion forAux2 ')' bloque forAux3forAux : forAux2 : forAux3 : while : WHILE whileAux '(' superexpresion ')' whileAux2 bloquewhileAux : whileAux2 : asignacion : vars\n                    | id asignacionpasignacionp : '=' superexpresion ';' superexpresion : megaexpresion superexpresionpsuperexpresionp : AND superexpresion\n                        | OR superexpresion\n                        | emptymegaexpresion : exp megaexpresionpmegaexpresionp : '<' exp\n                        | '>' exp\n                        | EQUALS exp\n                        | DIFF exp\n                        | LTHANEQ exp\n                        | GTHANEQ exp\n                        | emptyexp : termino exppexpp : '+' pAppT exp\n            | '-' pAppT exp\n            | emptypAppT : termino : factor terminopterminop : '*' pAppF termino\n                | '/' pAppF termino\n                | emptypAppF : factor : constante\n                | lParen superexpresion rParen lParen : '(' rParen : ')' constante : id\n                | CTEF ctef\n                | CTEI cteictef : ctei : functionParam : parametro\n                    | emptyparametro : tipo ID parametropparametrop : ',' parametro\n                | emptyvars : varspvarsp : tipo varspp ';' varsp\n                | emptyvarspp : ID varspppvarsppp : ',' varspp\n                | '[' CTEI ']' arreglo\n                | emptyarreglo : ',' varspp\n                | emptytipo : INT\n            | FLOAT\n            | CHARid : ID idpidp : '(' idpp ')'\n            | '[' superexpresion ']'\n            | emptyidpp : superexpresion idppp\n            | emptyidppp : ',' idpp\n            | emptyempty :"
    
_lr_action_items = {'ID':([0,6,7,8,9,10,11,21,22,23,24,25,27,32,42,44,47,52,57,58,60,61,62,63,64,65,66,67,72,78,79,80,81,82,90,94,95,97,98,106,107,109,110,113,114,115,116,117,118,121,122,125,126,136,150,151,152,153,156,159,163,165,175,176,180,182,184,185,188,191,192,],[2,-86,17,-88,-95,-96,-97,31,-11,-12,-13,-106,17,-87,49,17,-106,74,-14,-47,74,-25,-18,-19,-20,-21,-22,-23,74,-24,-48,74,74,74,74,-74,74,74,74,74,-26,74,74,74,74,74,74,74,74,-66,-66,-71,-71,-49,74,74,74,74,74,74,-32,-39,-106,74,-27,-30,-44,74,-29,-43,-40,]),'$end':([1,18,46,57,],[0,-1,-3,-14,]),';':([2,3,16,17,26,29,33,37,43,45,50,68,74,84,85,86,87,88,89,91,92,93,96,99,101,108,111,112,119,120,123,124,127,129,130,138,142,143,144,145,146,147,148,149,154,155,157,161,169,170,171,172,173,179,],[-2,4,25,-106,-89,-92,-90,-106,-91,-94,-93,78,-106,107,-106,-106,-106,-106,-72,-76,-79,-80,-98,-101,136,-50,-53,-54,-61,-62,-65,-67,-70,-77,-78,163,-51,-52,-55,-56,-57,-58,-59,-60,-73,-75,-99,-100,-63,-64,-68,-69,-41,185,]),'INT':([4,6,8,15,25,32,36,47,52,55,57,58,60,61,62,63,64,65,66,67,78,79,107,136,163,175,180,182,184,188,191,192,],[9,-86,-88,22,9,-87,9,9,9,9,-14,-47,9,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-106,-27,-30,-44,-29,-43,-40,]),'FLOAT':([4,6,8,15,25,32,36,47,52,55,57,58,60,61,62,63,64,65,66,67,78,79,107,136,163,175,180,182,184,188,191,192,],[10,-86,-88,23,10,-87,10,10,10,10,-14,-47,10,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-106,-27,-30,-44,-29,-43,-40,]),'CHAR':([4,6,8,25,32,36,47,52,55,57,58,60,61,62,63,64,65,66,67,78,79,107,136,163,175,180,182,184,188,191,192,],[11,-86,-88,11,-87,11,11,11,11,-14,-47,11,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-106,-27,-30,-44,-29,-43,-40,]),'FUNCTION':([4,5,6,8,13,14,25,32,57,75,100,],[-106,15,-86,-88,15,-8,-106,-87,-14,-10,-7,]),'MAIN':([4,5,6,8,12,13,14,20,25,32,57,75,100,],[-106,-106,-86,-88,19,-106,-6,-5,-106,-87,-14,-10,-7,]),'IF':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,78,79,107,136,163,175,180,182,184,188,191,192,],[-86,-88,-106,-87,-106,69,-14,-47,69,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-106,-27,-30,-44,-29,-43,-40,]),'WRITE':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,78,79,107,136,163,175,180,182,184,188,191,192,],[-86,-88,-106,-87,-106,70,-14,-47,70,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-106,-27,-30,-44,-29,-43,-40,]),'WHILE':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,78,79,107,136,163,175,180,182,184,188,191,192,],[-86,-88,-106,-87,-106,71,-14,-47,71,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-106,-27,-30,-44,-29,-43,-40,]),'RETURN':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,78,79,107,136,163,175,180,182,184,188,191,192,],[-86,-88,-106,-87,-106,72,-14,-47,72,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-106,-27,-30,-44,-29,-43,-40,]),'FOR':([6,8,25,32,47,52,57,58,60,61,62,63,64,65,66,67,78,79,107,136,163,175,180,182,184,188,191,192,],[-86,-88,-106,-87,-106,73,-14,-47,73,-25,-18,-19,-20,-21,-22,-23,-24,-48,-26,-49,-32,-106,-27,-30,-44,-29,-43,-40,]),'}':([6,8,25,32,47,51,52,57,58,59,60,61,62,63,64,65,66,67,77,78,79,107,136,163,175,180,182,184,188,191,192,],[-86,-88,-106,-87,-106,57,-106,-14,-47,-15,-106,-17,-18,-19,-20,-21,-22,-23,-16,-24,-48,-26,-49,-32,-106,-27,-30,-44,-29,-43,-40,]),'VOID':([15,],[24,]),',':([17,37,49,74,85,86,87,88,89,91,92,93,96,99,104,105,108,111,112,119,120,123,124,127,129,130,133,139,140,142,143,144,145,146,147,148,149,154,155,157,161,169,170,171,172,],[27,44,55,-106,-106,-106,-106,-106,-72,-76,-79,-80,-98,-101,-35,-36,-50,-53,-54,-61,-62,-65,-67,-70,-77,-78,159,165,165,-51,-52,-55,-56,-57,-58,-59,-60,-73,-75,-99,-100,-63,-64,-68,-69,]),'[':([17,74,],[28,98,]),'(':([19,30,31,69,70,71,72,73,74,80,81,82,83,90,94,97,98,106,109,110,113,114,115,116,117,118,121,122,125,126,150,151,152,153,156,159,165,176,185,],[-4,35,36,81,82,-45,94,95,97,94,94,94,106,94,-74,94,94,94,94,94,94,94,94,94,94,94,-66,-66,-71,-71,94,94,94,94,94,94,-39,94,94,]),'CTEI':([28,72,80,81,82,90,94,97,98,106,109,110,113,114,115,116,117,118,121,122,125,126,150,151,152,153,156,159,165,176,185,],[34,93,93,93,93,93,-74,93,93,93,93,93,93,93,93,93,93,93,-66,-66,-71,-71,93,93,93,93,93,93,-39,93,93,]),']':([34,74,85,86,87,88,89,91,92,93,96,99,108,111,112,119,120,123,124,127,129,130,135,142,143,144,145,146,147,148,149,154,155,157,161,169,170,171,172,],[37,-106,-106,-106,-106,-106,-72,-76,-79,-80,-98,-101,-50,-53,-54,-61,-62,-65,-67,-70,-77,-78,161,-51,-52,-55,-56,-57,-58,-59,-60,-73,-75,-99,-100,-63,-64,-68,-69,]),')':([35,36,39,40,41,49,54,56,74,76,85,86,87,88,89,91,92,93,96,97,99,102,103,104,105,108,111,112,119,120,123,124,127,128,129,130,132,133,134,139,140,141,142,143,144,145,146,147,148,149,154,155,157,158,159,160,161,164,166,167,169,170,171,172,174,177,183,187,189,],[38,-106,48,-81,-82,-106,-83,-85,-106,-84,-106,-106,-106,-106,-72,-76,-79,-80,-98,-106,-101,137,138,-35,-36,-50,-53,-54,-61,-62,-65,-67,-70,155,-77,-78,157,-106,-103,-106,-106,168,-51,-52,-55,-56,-57,-58,-59,-60,-73,-75,-99,-102,-106,-105,-100,-33,-39,-34,-63,-64,-68,-69,-104,-38,-37,-42,190,]),'{':([38,48,53,137,162,168,178,181,186,190,],[47,-9,47,-28,47,-46,47,-31,47,47,]),'ELSE':([57,175,],[-14,181,]),'=':([68,74,96,99,131,157,161,],[80,-106,-98,-101,156,-99,-100,]),'CTEF':([72,80,81,82,90,94,97,98,106,109,110,113,114,115,116,117,118,121,122,125,126,150,151,152,153,156,159,165,176,185,],[92,92,92,92,92,-74,92,92,92,92,92,92,92,92,92,92,92,-66,-66,-71,-71,92,92,92,92,92,92,-39,92,92,]),'*':([74,88,89,91,92,93,96,99,129,130,154,155,157,161,],[-106,125,-72,-76,-79,-80,-98,-101,-77,-78,-73,-75,-99,-100,]),'/':([74,88,89,91,92,93,96,99,129,130,154,155,157,161,],[-106,126,-72,-76,-79,-80,-98,-101,-77,-78,-73,-75,-99,-100,]),'+':([74,87,88,89,91,92,93,96,99,124,127,129,130,154,155,157,161,171,172,],[-106,121,-106,-72,-76,-79,-80,-98,-101,-67,-70,-77,-78,-73,-75,-99,-100,-68,-69,]),'-':([74,87,88,89,91,92,93,96,99,124,127,129,130,154,155,157,161,171,172,],[-106,122,-106,-72,-76,-79,-80,-98,-101,-67,-70,-77,-78,-73,-75,-99,-100,-68,-69,]),'<':([74,86,87,88,89,91,92,93,96,99,120,123,124,127,129,130,154,155,157,161,169,170,171,172,],[-106,113,-106,-106,-72,-76,-79,-80,-98,-101,-62,-65,-67,-70,-77,-78,-73,-75,-99,-100,-63,-64,-68,-69,]),'>':([74,86,87,88,89,91,92,93,96,99,120,123,124,127,129,130,154,155,157,161,169,170,171,172,],[-106,114,-106,-106,-72,-76,-79,-80,-98,-101,-62,-65,-67,-70,-77,-78,-73,-75,-99,-100,-63,-64,-68,-69,]),'EQUALS':([74,86,87,88,89,91,92,93,96,99,120,123,124,127,129,130,154,155,157,161,169,170,171,172,],[-106,115,-106,-106,-72,-76,-79,-80,-98,-101,-62,-65,-67,-70,-77,-78,-73,-75,-99,-100,-63,-64,-68,-69,]),'DIFF':([74,86,87,88,89,91,92,93,96,99,120,123,124,127,129,130,154,155,157,161,169,170,171,172,],[-106,116,-106,-106,-72,-76,-79,-80,-98,-101,-62,-65,-67,-70,-77,-78,-73,-75,-99,-100,-63,-64,-68,-69,]),'LTHANEQ':([74,86,87,88,89,91,92,93,96,99,120,123,124,127,129,130,154,155,157,161,169,170,171,172,],[-106,117,-106,-106,-72,-76,-79,-80,-98,-101,-62,-65,-67,-70,-77,-78,-73,-75,-99,-100,-63,-64,-68,-69,]),'GTHANEQ':([74,86,87,88,89,91,92,93,96,99,120,123,124,127,129,130,154,155,157,161,169,170,171,172,],[-106,118,-106,-106,-72,-76,-79,-80,-98,-101,-62,-65,-67,-70,-77,-78,-73,-75,-99,-100,-63,-64,-68,-69,]),'AND':([74,85,86,87,88,89,91,92,93,96,99,112,119,120,123,124,127,129,130,144,145,146,147,148,149,154,155,157,161,169,170,171,172,],[-106,109,-106,-106,-106,-72,-76,-79,-80,-98,-101,-54,-61,-62,-65,-67,-70,-77,-78,-55,-56,-57,-58,-59,-60,-73,-75,-99,-100,-63,-64,-68,-69,]),'OR':([74,85,86,87,88,89,91,92,93,96,99,112,119,120,123,124,127,129,130,144,145,146,147,148,149,154,155,157,161,169,170,171,172,],[-106,110,-106,-106,-106,-72,-76,-79,-80,-98,-101,-54,-61,-62,-65,-67,-70,-77,-78,-55,-56,-57,-58,-59,-60,-73,-75,-99,-100,-63,-64,-68,-69,]),'LETRERO':([82,165,176,],[105,-39,105,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'primerCuad':([2,],[3,]),'vars':([4,47,52,60,],[5,52,58,58,]),'varsp':([4,25,47,52,60,],[6,32,6,6,6,]),'tipo':([4,25,36,47,52,55,60,],[7,7,42,7,7,42,7,]),'empty':([4,5,13,17,25,36,37,47,49,52,60,74,85,86,87,88,97,133,139,140,159,175,],[8,14,14,29,8,41,45,8,56,61,61,99,111,119,123,127,134,160,166,166,134,182,]),'programaF':([5,13,],[12,20,]),'function':([5,13,],[13,13,]),'varspp':([7,27,44,],[16,33,50,]),'main':([12,],[18,]),'tipoRetorno':([15,],[21,]),'varsppp':([17,],[26,]),'llenarCuad':([19,],[30,]),'functionParam':([36,],[39,]),'parametro':([36,55,],[40,76,]),'arreglo':([37,],[43,]),'bloque':([38,53,162,178,186,190,],[46,75,175,184,188,191,]),'cuerpo':([47,],[51,]),'functionAux':([48,],[53,]),'parametrop':([49,],[54,]),'estatutop':([52,60,],[59,77,]),'estatuto':([52,60,],[60,60,]),'asignacion':([52,60,],[62,62,]),'condicion':([52,60,],[63,63,]),'write':([52,60,],[64,64,]),'while':([52,60,],[65,65,]),'return':([52,60,],[66,66,]),'for':([52,60,],[67,67,]),'id':([52,60,72,80,81,82,90,95,97,98,106,109,110,113,114,115,116,117,118,150,151,152,153,156,159,176,185,],[68,68,91,91,91,91,91,131,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'asignacionp':([68,],[79,]),'whileAux':([71,],[83,]),'superexpresion':([72,80,81,82,90,97,98,106,109,110,156,159,176,185,],[84,101,102,104,128,133,135,141,142,143,173,133,104,187,]),'megaexpresion':([72,80,81,82,90,97,98,106,109,110,156,159,176,185,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'exp':([72,80,81,82,90,97,98,106,109,110,113,114,115,116,117,118,150,151,156,159,176,185,],[86,86,86,86,86,86,86,86,86,86,144,145,146,147,148,149,169,170,86,86,86,86,]),'termino':([72,80,81,82,90,97,98,106,109,110,113,114,115,116,117,118,150,151,152,153,156,159,176,185,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,171,172,87,87,87,87,]),'factor':([72,80,81,82,90,97,98,106,109,110,113,114,115,116,117,118,150,151,152,153,156,159,176,185,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'constante':([72,80,81,82,90,97,98,106,109,110,113,114,115,116,117,118,150,151,152,153,156,159,176,185,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'lParen':([72,80,81,82,90,97,98,106,109,110,113,114,115,116,117,118,150,151,152,153,156,159,176,185,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'idp':([74,],[96,]),'functionAux2':([75,],[100,]),'writep':([82,176,],[103,183,]),'superexpresionp':([85,],[108,]),'megaexpresionp':([86,],[112,]),'expp':([87,],[120,]),'terminop':([88,],[124,]),'ctef':([92,],[129,]),'ctei':([93,],[130,]),'idpp':([97,159,],[132,174,]),'writepAux':([104,],[139,]),'writepAux2':([105,],[140,]),'pAppT':([121,122,],[150,151,]),'pAppF':([125,126,],[152,153,]),'rParen':([128,],[154,]),'idppp':([133,],[158,]),'condicionAux':([137,],[162,]),'writepp':([139,140,],[164,167,]),'writeppAux':([165,166,],[176,177,]),'whileAux2':([168,],[178,]),'forAux':([173,],[179,]),'condicionelse':([175,],[180,]),'condicionelseAux':([181,],[186,]),'forAux2':([187,],[189,]),'forAux3':([191,],[192,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ID primerCuad ; vars programaF main','programa',6,'p_programa','parser.py',35),
  ('primerCuad -> <empty>','primerCuad',0,'p_primerCuad','parser.py',38),
  ('main -> MAIN llenarCuad ( ) bloque','main',5,'p_main','parser.py',42),
  ('llenarCuad -> <empty>','llenarCuad',0,'p_llenarCuad','parser.py',45),
  ('programaF -> function programaF','programaF',2,'p_programaF','parser.py',49),
  ('programaF -> empty','programaF',1,'p_programaF','parser.py',50),
  ('function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2','function',9,'p_function','parser.py',53),
  ('function -> empty','function',1,'p_function','parser.py',54),
  ('functionAux -> <empty>','functionAux',0,'p_functionAux','parser.py',57),
  ('functionAux2 -> <empty>','functionAux2',0,'p_functionAux2','parser.py',72),
  ('tipoRetorno -> INT','tipoRetorno',1,'p_tipoRetorno','parser.py',92),
  ('tipoRetorno -> FLOAT','tipoRetorno',1,'p_tipoRetorno','parser.py',93),
  ('tipoRetorno -> VOID','tipoRetorno',1,'p_tipoRetorno','parser.py',94),
  ('bloque -> { cuerpo }','bloque',3,'p_bloque','parser.py',98),
  ('cuerpo -> vars estatutop','cuerpo',2,'p_cuerpo','parser.py',101),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_estatutop','parser.py',104),
  ('estatutop -> empty','estatutop',1,'p_estatutop','parser.py',105),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',108),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',109),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser.py',110),
  ('estatuto -> while','estatuto',1,'p_estatuto','parser.py',111),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser.py',112),
  ('estatuto -> for','estatuto',1,'p_estatuto','parser.py',113),
  ('estatuto -> id ;','estatuto',2,'p_estatuto','parser.py',114),
  ('estatuto -> empty','estatuto',1,'p_estatuto','parser.py',115),
  ('return -> RETURN superexpresion ;','return',3,'p_return','parser.py',118),
  ('condicion -> IF ( superexpresion ) condicionAux bloque condicionelse','condicion',7,'p_condicion','parser.py',133),
  ('condicionAux -> <empty>','condicionAux',0,'p_condicionAux','parser.py',136),
  ('condicionelse -> ELSE condicionelseAux bloque','condicionelse',3,'p_condicionelse','parser.py',146),
  ('condicionelse -> empty','condicionelse',1,'p_condicionelse','parser.py',147),
  ('condicionelseAux -> <empty>','condicionelseAux',0,'p_condicionelseAux','parser.py',152),
  ('write -> WRITE ( writep ) ;','write',5,'p_write','parser.py',159),
  ('writep -> superexpresion writepAux writepp','writep',3,'p_writep','parser.py',162),
  ('writep -> LETRERO writepAux2 writepp','writep',3,'p_writep','parser.py',163),
  ('writepAux -> <empty>','writepAux',0,'p_writepAux','parser.py',166),
  ('writepAux2 -> <empty>','writepAux2',0,'p_writepAux2','parser.py',171),
  ('writepp -> , writeppAux writep','writepp',3,'p_writepp','parser.py',178),
  ('writepp -> empty writeppAux','writepp',2,'p_writepp','parser.py',179),
  ('writeppAux -> <empty>','writeppAux',0,'p_writeppAux','parser.py',182),
  ('for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3','for',12,'p_for','parser.py',190),
  ('forAux -> <empty>','forAux',0,'p_forAux','parser.py',193),
  ('forAux2 -> <empty>','forAux2',0,'p_forAux2','parser.py',199),
  ('forAux3 -> <empty>','forAux3',0,'p_forAux3','parser.py',205),
  ('while -> WHILE whileAux ( superexpresion ) whileAux2 bloque','while',7,'p_while','parser.py',211),
  ('whileAux -> <empty>','whileAux',0,'p_whileAux','parser.py',218),
  ('whileAux2 -> <empty>','whileAux2',0,'p_whileAux2','parser.py',222),
  ('asignacion -> vars','asignacion',1,'p_asignacion','parser.py',231),
  ('asignacion -> id asignacionp','asignacion',2,'p_asignacion','parser.py',232),
  ('asignacionp -> = superexpresion ;','asignacionp',3,'p_asignacionp','parser.py',235),
  ('superexpresion -> megaexpresion superexpresionp','superexpresion',2,'p_superexpresion','parser.py',241),
  ('superexpresionp -> AND superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',258),
  ('superexpresionp -> OR superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',259),
  ('superexpresionp -> empty','superexpresionp',1,'p_superexpresionp','parser.py',260),
  ('megaexpresion -> exp megaexpresionp','megaexpresion',2,'p_megaexpresion','parser.py',265),
  ('megaexpresionp -> < exp','megaexpresionp',2,'p_megaexpresionp','parser.py',281),
  ('megaexpresionp -> > exp','megaexpresionp',2,'p_megaexpresionp','parser.py',282),
  ('megaexpresionp -> EQUALS exp','megaexpresionp',2,'p_megaexpresionp','parser.py',283),
  ('megaexpresionp -> DIFF exp','megaexpresionp',2,'p_megaexpresionp','parser.py',284),
  ('megaexpresionp -> LTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',285),
  ('megaexpresionp -> GTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',286),
  ('megaexpresionp -> empty','megaexpresionp',1,'p_megaexpresionp','parser.py',287),
  ('exp -> termino expp','exp',2,'p_exp','parser.py',292),
  ('expp -> + pAppT exp','expp',3,'p_expp','parser.py',310),
  ('expp -> - pAppT exp','expp',3,'p_expp','parser.py',311),
  ('expp -> empty','expp',1,'p_expp','parser.py',312),
  ('pAppT -> <empty>','pAppT',0,'p_pAppT','parser.py',317),
  ('termino -> factor terminop','termino',2,'p_termino','parser.py',335),
  ('terminop -> * pAppF termino','terminop',3,'p_terminop','parser.py',353),
  ('terminop -> / pAppF termino','terminop',3,'p_terminop','parser.py',354),
  ('terminop -> empty','terminop',1,'p_terminop','parser.py',355),
  ('pAppF -> <empty>','pAppF',0,'p_pAppF','parser.py',360),
  ('factor -> constante','factor',1,'p_factor','parser.py',383),
  ('factor -> lParen superexpresion rParen','factor',3,'p_factor','parser.py',384),
  ('lParen -> (','lParen',1,'p_lParen','parser.py',387),
  ('rParen -> )','rParen',1,'p_rParen','parser.py',392),
  ('constante -> id','constante',1,'p_constante','parser.py',397),
  ('constante -> CTEF ctef','constante',2,'p_constante','parser.py',398),
  ('constante -> CTEI ctei','constante',2,'p_constante','parser.py',399),
  ('ctef -> <empty>','ctef',0,'p_ctef','parser.py',402),
  ('ctei -> <empty>','ctei',0,'p_ctei','parser.py',408),
  ('functionParam -> parametro','functionParam',1,'p_functionParam','parser.py',414),
  ('functionParam -> empty','functionParam',1,'p_functionParam','parser.py',415),
  ('parametro -> tipo ID parametrop','parametro',3,'p_parametro','parser.py',418),
  ('parametrop -> , parametro','parametrop',2,'p_parametrop','parser.py',424),
  ('parametrop -> empty','parametrop',1,'p_parametrop','parser.py',425),
  ('vars -> varsp','vars',1,'p_vars','parser.py',428),
  ('varsp -> tipo varspp ; varsp','varsp',4,'p_varsp','parser.py',433),
  ('varsp -> empty','varsp',1,'p_varsp','parser.py',434),
  ('varspp -> ID varsppp','varspp',2,'p_varspp','parser.py',437),
  ('varsppp -> , varspp','varsppp',2,'p_varsppp','parser.py',458),
  ('varsppp -> [ CTEI ] arreglo','varsppp',4,'p_varsppp','parser.py',459),
  ('varsppp -> empty','varsppp',1,'p_varsppp','parser.py',460),
  ('arreglo -> , varspp','arreglo',2,'p_arreglo','parser.py',463),
  ('arreglo -> empty','arreglo',1,'p_arreglo','parser.py',464),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',467),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',468),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',469),
  ('id -> ID idp','id',2,'p_id','parser.py',473),
  ('idp -> ( idpp )','idp',3,'p_idp','parser.py',476),
  ('idp -> [ superexpresion ]','idp',3,'p_idp','parser.py',477),
  ('idp -> empty','idp',1,'p_idp','parser.py',478),
  ('idpp -> superexpresion idppp','idpp',2,'p_idpp','parser.py',507),
  ('idpp -> empty','idpp',1,'p_idpp','parser.py',508),
  ('idppp -> , idpp','idppp',2,'p_idppp','parser.py',511),
  ('idppp -> empty','idppp',1,'p_idppp','parser.py',512),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',517),
]
