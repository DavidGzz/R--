
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND CHAR CTEF CTEI DIFF ELSE EQUALS FLOAT FOR FUNCTION GTHANEQ ID IF INT LTHANEQ MAIN OR PROGRAMA RETURN VOID WHILE WRITEprograma : ID ';' vars programaF mainmain : MAIN '(' ')' bloqueprogramaF : function programaF\n                    | emptyfunction : FUNCTION tipoRetorno ID '(' functionParam ')' bloque\n                | emptytipoRetorno : INT\n                    | FLOAT\n                    | VOIDbloque : '{' cuerpo '}' cuerpo : vars estatutopestatutop : estatuto estatutop\n                    | emptyestatuto : asignacion\n                    | condicion\n                    | write\n                    | while\n                    | return\n                    | emptyreturn : RETURN superexpresion ';' condicion : IF '(' superexpresion ')' bloque condicionelsecondicionelse : ELSE bloque\n                        | emptywrite : WRITE '(' superexpresion ')' ';' oper : '<'\n            | '>'\n            | EQUALS\n            | DIFF\n            | LTHANEQ\n            | GTHANEQwhile : WHILE '(' superexpresion ')' bloqueasignacion : vars\n                    | id asignacionpasignacionp : '=' superexpresion ';'\n                    | '[' superexpresion ']' ';' superexpresion : megaexpresion superexpresionpsuperexpresionp : AND superexpresion\n                        | OR superexpresion\n                        | emptymegaexpresion : exp megaexpresionpmegaexpresionp : '<' exp\n                        | '>' exp\n                        | EQUALS exp\n                        | DIFF exp\n                        | LTHANEQ exp\n                        | GTHANEQ exp\n                        | emptyexp : termino exppexpp : '+' exp\n            | '-' exp\n            | emptytermino : factor terminopterminop : '*' exp\n                | '/' exp\n                | emptyfactor : constante\n                | '(' superexpresion ')' constante : id\n                | CTEF\n                | CTEIfunctionParam : param\n                    | emptyparam : tipo ID parampparamp : ',' param\n                | emptyvars : varspvarsp : tipo varspp ';' varsp\n                | emptytipo : INT\n            | FLOAT\n            | CHARvarspp : ID varspppvarsppp : ',' varspp\n                | emptyid : ID idpidp : '[' superexpresion ']'\n            | emptyempty :"
    
_lr_action_items = {'ID':([0,5,6,7,8,9,10,20,21,22,23,24,26,30,35,39,41,44,45,47,48,49,50,51,52,53,58,65,66,67,68,69,70,77,82,90,92,93,96,97,98,99,100,101,104,105,108,109,113,132,133,134,135,136,138,139,],[2,-66,16,-68,-69,-70,-71,29,-7,-8,-9,-78,16,-67,-78,43,59,-10,-32,59,-19,-14,-15,-16,-17,-18,59,-33,59,59,59,59,59,59,59,-20,59,59,59,59,59,59,59,59,59,59,59,59,-34,-35,-78,-24,-31,-21,-23,-22,]),'$end':([1,17,34,44,],[0,-1,-2,-10,]),';':([2,15,16,25,27,31,59,71,72,73,74,75,76,78,79,80,81,83,85,91,94,95,102,103,106,107,110,114,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,],[3,24,-78,-72,-74,-73,-78,90,-78,-78,-78,-78,-56,-58,-59,-60,-75,-77,113,-36,-39,-40,-47,-48,-51,-52,-55,132,134,-37,-38,-41,-42,-43,-44,-45,-46,-49,-50,-53,-54,-57,-76,]),'INT':([3,5,7,14,24,30,33,35,41,44,45,47,48,49,50,51,52,53,62,65,90,113,132,133,134,135,136,138,139,],[8,-66,-68,21,8,-67,8,8,8,-10,-32,8,-19,-14,-15,-16,-17,-18,8,-33,-20,-34,-35,-78,-24,-31,-21,-23,-22,]),'FLOAT':([3,5,7,14,24,30,33,35,41,44,45,47,48,49,50,51,52,53,62,65,90,113,132,133,134,135,136,138,139,],[9,-66,-68,22,9,-67,9,9,9,-10,-32,9,-19,-14,-15,-16,-17,-18,9,-33,-20,-34,-35,-78,-24,-31,-21,-23,-22,]),'CHAR':([3,5,7,24,30,33,35,41,44,45,47,48,49,50,51,52,53,62,65,90,113,132,133,134,135,136,138,139,],[10,-66,-68,10,-67,10,10,10,-10,-32,10,-19,-14,-15,-16,-17,-18,10,-33,-20,-34,-35,-78,-24,-31,-21,-23,-22,]),'FUNCTION':([3,4,5,7,12,13,24,30,44,60,],[-78,14,-66,-68,14,-6,-78,-67,-10,-5,]),'MAIN':([3,4,5,7,11,12,13,19,24,30,44,60,],[-78,-78,-66,-68,18,-78,-4,-3,-78,-67,-10,-5,]),'IF':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,90,113,132,133,134,135,136,138,139,],[-66,-68,-78,-67,-78,55,-10,-32,55,-19,-14,-15,-16,-17,-18,-33,-20,-34,-35,-78,-24,-31,-21,-23,-22,]),'WRITE':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,90,113,132,133,134,135,136,138,139,],[-66,-68,-78,-67,-78,56,-10,-32,56,-19,-14,-15,-16,-17,-18,-33,-20,-34,-35,-78,-24,-31,-21,-23,-22,]),'WHILE':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,90,113,132,133,134,135,136,138,139,],[-66,-68,-78,-67,-78,57,-10,-32,57,-19,-14,-15,-16,-17,-18,-33,-20,-34,-35,-78,-24,-31,-21,-23,-22,]),'RETURN':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,90,113,132,133,134,135,136,138,139,],[-66,-68,-78,-67,-78,58,-10,-32,58,-19,-14,-15,-16,-17,-18,-33,-20,-34,-35,-78,-24,-31,-21,-23,-22,]),'}':([5,7,24,30,35,40,41,44,45,46,47,48,49,50,51,52,53,64,65,90,113,132,133,134,135,136,138,139,],[-66,-68,-78,-67,-78,44,-78,-10,-32,-11,-78,-13,-14,-15,-16,-17,-18,-12,-33,-20,-34,-35,-78,-24,-31,-21,-23,-22,]),'VOID':([14,],[23,]),',':([16,43,],[26,62,]),'(':([18,29,55,56,57,58,66,67,68,69,70,77,82,92,93,96,97,98,99,100,101,104,105,108,109,],[28,33,68,69,70,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),')':([28,33,36,37,38,43,59,61,63,72,73,74,75,76,78,79,80,81,83,84,87,88,89,91,94,95,102,103,106,107,110,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,],[32,-78,42,-61,-62,-78,-78,-63,-65,-78,-78,-78,-78,-56,-58,-59,-60,-75,-77,-64,115,116,117,-36,-39,-40,-47,-48,-51,-52,-55,130,-37,-38,-41,-42,-43,-44,-45,-46,-49,-50,-53,-54,-57,-76,]),'{':([32,42,115,117,137,],[35,35,35,35,35,]),'ELSE':([44,133,],[-10,137,]),'=':([54,59,81,83,131,],[66,-78,-75,-77,-76,]),'[':([54,59,81,83,131,],[67,82,-75,-77,-76,]),'CTEF':([58,66,67,68,69,70,77,82,92,93,96,97,98,99,100,101,104,105,108,109,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'CTEI':([58,66,67,68,69,70,77,82,92,93,96,97,98,99,100,101,104,105,108,109,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'*':([59,75,76,78,79,80,81,83,130,131,],[-78,108,-56,-58,-59,-60,-75,-77,-57,-76,]),'/':([59,75,76,78,79,80,81,83,130,131,],[-78,109,-56,-58,-59,-60,-75,-77,-57,-76,]),'+':([59,74,75,76,78,79,80,81,83,103,106,107,110,126,127,128,129,130,131,],[-78,104,-78,-56,-58,-59,-60,-75,-77,-48,-51,-52,-55,-49,-50,-53,-54,-57,-76,]),'-':([59,74,75,76,78,79,80,81,83,103,106,107,110,126,127,128,129,130,131,],[-78,105,-78,-56,-58,-59,-60,-75,-77,-48,-51,-52,-55,-49,-50,-53,-54,-57,-76,]),'<':([59,73,74,75,76,78,79,80,81,83,103,106,107,110,126,127,128,129,130,131,],[-78,96,-78,-78,-56,-58,-59,-60,-75,-77,-48,-51,-52,-55,-49,-50,-53,-54,-57,-76,]),'>':([59,73,74,75,76,78,79,80,81,83,103,106,107,110,126,127,128,129,130,131,],[-78,97,-78,-78,-56,-58,-59,-60,-75,-77,-48,-51,-52,-55,-49,-50,-53,-54,-57,-76,]),'EQUALS':([59,73,74,75,76,78,79,80,81,83,103,106,107,110,126,127,128,129,130,131,],[-78,98,-78,-78,-56,-58,-59,-60,-75,-77,-48,-51,-52,-55,-49,-50,-53,-54,-57,-76,]),'DIFF':([59,73,74,75,76,78,79,80,81,83,103,106,107,110,126,127,128,129,130,131,],[-78,99,-78,-78,-56,-58,-59,-60,-75,-77,-48,-51,-52,-55,-49,-50,-53,-54,-57,-76,]),'LTHANEQ':([59,73,74,75,76,78,79,80,81,83,103,106,107,110,126,127,128,129,130,131,],[-78,100,-78,-78,-56,-58,-59,-60,-75,-77,-48,-51,-52,-55,-49,-50,-53,-54,-57,-76,]),'GTHANEQ':([59,73,74,75,76,78,79,80,81,83,103,106,107,110,126,127,128,129,130,131,],[-78,101,-78,-78,-56,-58,-59,-60,-75,-77,-48,-51,-52,-55,-49,-50,-53,-54,-57,-76,]),'AND':([59,72,73,74,75,76,78,79,80,81,83,95,102,103,106,107,110,120,121,122,123,124,125,126,127,128,129,130,131,],[-78,92,-78,-78,-78,-56,-58,-59,-60,-75,-77,-40,-47,-48,-51,-52,-55,-41,-42,-43,-44,-45,-46,-49,-50,-53,-54,-57,-76,]),'OR':([59,72,73,74,75,76,78,79,80,81,83,95,102,103,106,107,110,120,121,122,123,124,125,126,127,128,129,130,131,],[-78,93,-78,-78,-78,-56,-58,-59,-60,-75,-77,-40,-47,-48,-51,-52,-55,-41,-42,-43,-44,-45,-46,-49,-50,-53,-54,-57,-76,]),']':([59,72,73,74,75,76,78,79,80,81,83,86,91,94,95,102,103,106,107,110,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,],[-78,-78,-78,-78,-78,-56,-58,-59,-60,-75,-77,114,-36,-39,-40,-47,-48,-51,-52,-55,131,-37,-38,-41,-42,-43,-44,-45,-46,-49,-50,-53,-54,-57,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([3,35,41,47,],[4,41,45,45,]),'varsp':([3,24,35,41,47,],[5,30,5,5,5,]),'tipo':([3,24,33,35,41,47,62,],[6,6,39,6,6,6,39,]),'empty':([3,4,12,16,24,33,35,41,43,47,59,72,73,74,75,133,],[7,13,13,27,7,38,7,48,63,48,83,94,102,106,110,138,]),'programaF':([4,12,],[11,19,]),'function':([4,12,],[12,12,]),'varspp':([6,26,],[15,31,]),'main':([11,],[17,]),'tipoRetorno':([14,],[20,]),'varsppp':([16,],[25,]),'bloque':([32,42,115,117,137,],[34,60,133,135,139,]),'functionParam':([33,],[36,]),'param':([33,62,],[37,84,]),'cuerpo':([35,],[40,]),'estatutop':([41,47,],[46,64,]),'estatuto':([41,47,],[47,47,]),'asignacion':([41,47,],[49,49,]),'condicion':([41,47,],[50,50,]),'write':([41,47,],[51,51,]),'while':([41,47,],[52,52,]),'return':([41,47,],[53,53,]),'id':([41,47,58,66,67,68,69,70,77,82,92,93,96,97,98,99,100,101,104,105,108,109,],[54,54,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'paramp':([43,],[61,]),'asignacionp':([54,],[65,]),'superexpresion':([58,66,67,68,69,70,77,82,92,93,],[71,85,86,87,88,89,111,112,118,119,]),'megaexpresion':([58,66,67,68,69,70,77,82,92,93,],[72,72,72,72,72,72,72,72,72,72,]),'exp':([58,66,67,68,69,70,77,82,92,93,96,97,98,99,100,101,104,105,108,109,],[73,73,73,73,73,73,73,73,73,73,120,121,122,123,124,125,126,127,128,129,]),'termino':([58,66,67,68,69,70,77,82,92,93,96,97,98,99,100,101,104,105,108,109,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'factor':([58,66,67,68,69,70,77,82,92,93,96,97,98,99,100,101,104,105,108,109,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'constante':([58,66,67,68,69,70,77,82,92,93,96,97,98,99,100,101,104,105,108,109,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'idp':([59,],[81,]),'superexpresionp':([72,],[91,]),'megaexpresionp':([73,],[95,]),'expp':([74,],[103,]),'terminop':([75,],[107,]),'condicionelse':([133,],[136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ID ; vars programaF main','programa',5,'p_programa','parser.py',5),
  ('main -> MAIN ( ) bloque','main',4,'p_main','parser.py',8),
  ('programaF -> function programaF','programaF',2,'p_programaF','parser.py',11),
  ('programaF -> empty','programaF',1,'p_programaF','parser.py',12),
  ('function -> FUNCTION tipoRetorno ID ( functionParam ) bloque','function',7,'p_function','parser.py',15),
  ('function -> empty','function',1,'p_function','parser.py',16),
  ('tipoRetorno -> INT','tipoRetorno',1,'p_tipoRetorno','parser.py',19),
  ('tipoRetorno -> FLOAT','tipoRetorno',1,'p_tipoRetorno','parser.py',20),
  ('tipoRetorno -> VOID','tipoRetorno',1,'p_tipoRetorno','parser.py',21),
  ('bloque -> { cuerpo }','bloque',3,'p_bloque','parser.py',24),
  ('cuerpo -> vars estatutop','cuerpo',2,'p_cuerpo','parser.py',27),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_estatutop','parser.py',30),
  ('estatutop -> empty','estatutop',1,'p_estatutop','parser.py',31),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',34),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',35),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser.py',36),
  ('estatuto -> while','estatuto',1,'p_estatuto','parser.py',37),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser.py',38),
  ('estatuto -> empty','estatuto',1,'p_estatuto','parser.py',39),
  ('return -> RETURN superexpresion ;','return',3,'p_return','parser.py',43),
  ('condicion -> IF ( superexpresion ) bloque condicionelse','condicion',6,'p_condicion','parser.py',46),
  ('condicionelse -> ELSE bloque','condicionelse',2,'p_condicionelse','parser.py',49),
  ('condicionelse -> empty','condicionelse',1,'p_condicionelse','parser.py',50),
  ('write -> WRITE ( superexpresion ) ;','write',5,'p_write','parser.py',53),
  ('oper -> <','oper',1,'p_oper','parser.py',59),
  ('oper -> >','oper',1,'p_oper','parser.py',60),
  ('oper -> EQUALS','oper',1,'p_oper','parser.py',61),
  ('oper -> DIFF','oper',1,'p_oper','parser.py',62),
  ('oper -> LTHANEQ','oper',1,'p_oper','parser.py',63),
  ('oper -> GTHANEQ','oper',1,'p_oper','parser.py',64),
  ('while -> WHILE ( superexpresion ) bloque','while',5,'p_while','parser.py',67),
  ('asignacion -> vars','asignacion',1,'p_asignacion','parser.py',70),
  ('asignacion -> id asignacionp','asignacion',2,'p_asignacion','parser.py',71),
  ('asignacionp -> = superexpresion ;','asignacionp',3,'p_asignacionp','parser.py',74),
  ('asignacionp -> [ superexpresion ] ;','asignacionp',4,'p_asignacionp','parser.py',75),
  ('superexpresion -> megaexpresion superexpresionp','superexpresion',2,'p_superexpresion','parser.py',78),
  ('superexpresionp -> AND superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',81),
  ('superexpresionp -> OR superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',82),
  ('superexpresionp -> empty','superexpresionp',1,'p_superexpresionp','parser.py',83),
  ('megaexpresion -> exp megaexpresionp','megaexpresion',2,'p_megaexpresion','parser.py',86),
  ('megaexpresionp -> < exp','megaexpresionp',2,'p_megaexpresionp','parser.py',89),
  ('megaexpresionp -> > exp','megaexpresionp',2,'p_megaexpresionp','parser.py',90),
  ('megaexpresionp -> EQUALS exp','megaexpresionp',2,'p_megaexpresionp','parser.py',91),
  ('megaexpresionp -> DIFF exp','megaexpresionp',2,'p_megaexpresionp','parser.py',92),
  ('megaexpresionp -> LTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',93),
  ('megaexpresionp -> GTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',94),
  ('megaexpresionp -> empty','megaexpresionp',1,'p_megaexpresionp','parser.py',95),
  ('exp -> termino expp','exp',2,'p_exp','parser.py',98),
  ('expp -> + exp','expp',2,'p_expp','parser.py',101),
  ('expp -> - exp','expp',2,'p_expp','parser.py',102),
  ('expp -> empty','expp',1,'p_expp','parser.py',103),
  ('termino -> factor terminop','termino',2,'p_termino','parser.py',106),
  ('terminop -> * exp','terminop',2,'p_terminop','parser.py',109),
  ('terminop -> / exp','terminop',2,'p_terminop','parser.py',110),
  ('terminop -> empty','terminop',1,'p_terminop','parser.py',111),
  ('factor -> constante','factor',1,'p_factor','parser.py',114),
  ('factor -> ( superexpresion )','factor',3,'p_factor','parser.py',115),
  ('constante -> id','constante',1,'p_constante','parser.py',118),
  ('constante -> CTEF','constante',1,'p_constante','parser.py',119),
  ('constante -> CTEI','constante',1,'p_constante','parser.py',120),
  ('functionParam -> param','functionParam',1,'p_functionParam','parser.py',123),
  ('functionParam -> empty','functionParam',1,'p_functionParam','parser.py',124),
  ('param -> tipo ID paramp','param',3,'p_param','parser.py',127),
  ('paramp -> , param','paramp',2,'p_paramp','parser.py',130),
  ('paramp -> empty','paramp',1,'p_paramp','parser.py',131),
  ('vars -> varsp','vars',1,'p_vars','parser.py',134),
  ('varsp -> tipo varspp ; varsp','varsp',4,'p_varsp','parser.py',137),
  ('varsp -> empty','varsp',1,'p_varsp','parser.py',138),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',141),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',142),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',143),
  ('varspp -> ID varsppp','varspp',2,'p_varspp','parser.py',146),
  ('varsppp -> , varspp','varsppp',2,'p_varsppp','parser.py',149),
  ('varsppp -> empty','varsppp',1,'p_varsppp','parser.py',150),
  ('id -> ID idp','id',2,'p_id','parser.py',153),
  ('idp -> [ superexpresion ]','idp',3,'p_idp','parser.py',156),
  ('idp -> empty','idp',1,'p_idp','parser.py',157),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',160),
]
