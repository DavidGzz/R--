
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND CHAR CTEF CTEI DIFF ELSE EQUALS FLOAT FOR FUNCTION GTHANEQ ID IF INT LTHANEQ MAIN OR PROGRAMA RETURN VOID WHILE WRITEprograma : ID ';' vars programaF mainmain : MAIN '(' ')' bloqueprogramaF : function programaF\n                    | emptyfunction : FUNCTION tipoRetorno ID '(' functionParam ')' functionAux bloque\n                | emptyfunctionAux : tipoRetorno : INT\n                    | FLOAT\n                    | VOIDbloque : '{' cuerpo '}' cuerpo : vars estatutopestatutop : estatuto estatutop\n                    | emptyestatuto : asignacion\n                    | condicion\n                    | write\n                    | while\n                    | return\n                    | emptyreturn : RETURN superexpresion ';' condicion : IF '(' superexpresion ')' bloque condicionelsecondicionelse : ELSE bloque\n                        | emptywrite : WRITE '(' superexpresion ')' ';' while : WHILE '(' superexpresion ')' bloqueasignacion : vars\n                    | id asignacionpasignacionp : '=' superexpresion ';'\n                    | '[' superexpresion ']' ';' superexpresion : megaexpresion superexpresionpsuperexpresionp : AND superexpresion\n                        | OR superexpresion\n                        | emptymegaexpresion : exp megaexpresionpmegaexpresionp : '<' exp\n                        | '>' exp\n                        | EQUALS exp\n                        | DIFF exp\n                        | LTHANEQ exp\n                        | GTHANEQ exp\n                        | emptyexp : termino exppexpp : '+' exp\n            | '-' exp\n            | emptytermino : factor terminopterminop : '*' termino\n                | '/' termino\n                | emptyfactor : constante\n                | '(' superexpresion ')' constante : id\n                | CTEF ctef\n                | CTEI cteictef : ctei : functionParam : parametro\n                    | emptyparametro : tipo ID parametropparametrop : ',' parametro\n                | emptyvars : varspvarsp : tipo varspp ';' varsp\n                | emptyvarspp : ID varspppvarsppp : ',' varspp\n                | emptytipo : INT\n            | FLOAT\n            | CHARid : ID idpidp : '(' idpp ')'\n            | '[' superexpresion ']'\n            | emptyidpp : superexpresion idppp\n            | emptyidppp : ',' idpp\n            | emptyempty :"
    
_lr_action_items = {'ID':([0,5,6,7,8,9,10,20,21,22,23,24,26,30,35,39,41,44,45,47,48,49,50,51,52,53,58,65,66,67,68,69,70,77,82,83,92,94,95,98,99,100,101,102,103,106,107,110,111,120,140,143,144,145,146,148,150,151,],[2,-63,16,-65,-69,-70,-71,29,-8,-9,-10,-80,16,-64,-80,43,59,-11,-27,59,-20,-15,-16,-17,-18,-19,59,-28,59,59,59,59,59,59,59,59,-21,59,59,59,59,59,59,59,59,59,59,59,59,-29,59,-30,-80,-25,-26,-22,-24,-23,]),'$end':([1,17,34,44,],[0,-1,-2,-11,]),';':([2,15,16,25,27,31,59,71,72,73,74,75,76,78,79,80,81,84,87,93,96,97,104,105,108,109,112,114,115,121,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,],[3,24,-80,-66,-68,-67,-80,92,-80,-80,-80,-80,-51,-53,-56,-57,-72,-75,120,-31,-34,-35,-42,-43,-46,-47,-50,-54,-55,143,145,-32,-33,-36,-37,-38,-39,-40,-41,-44,-45,-48,-49,-52,-73,-74,]),'INT':([3,5,7,14,24,30,33,35,41,44,45,47,48,49,50,51,52,53,62,65,92,120,143,144,145,146,148,150,151,],[8,-63,-65,21,8,-64,8,8,8,-11,-27,8,-20,-15,-16,-17,-18,-19,8,-28,-21,-29,-30,-80,-25,-26,-22,-24,-23,]),'FLOAT':([3,5,7,14,24,30,33,35,41,44,45,47,48,49,50,51,52,53,62,65,92,120,143,144,145,146,148,150,151,],[9,-63,-65,22,9,-64,9,9,9,-11,-27,9,-20,-15,-16,-17,-18,-19,9,-28,-21,-29,-30,-80,-25,-26,-22,-24,-23,]),'CHAR':([3,5,7,24,30,33,35,41,44,45,47,48,49,50,51,52,53,62,65,92,120,143,144,145,146,148,150,151,],[10,-63,-65,10,-64,10,10,10,-11,-27,10,-20,-15,-16,-17,-18,-19,10,-28,-21,-29,-30,-80,-25,-26,-22,-24,-23,]),'FUNCTION':([3,4,5,7,12,13,24,30,44,85,],[-80,14,-63,-65,14,-6,-80,-64,-11,-5,]),'MAIN':([3,4,5,7,11,12,13,19,24,30,44,85,],[-80,-80,-63,-65,18,-80,-4,-3,-80,-64,-11,-5,]),'IF':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,92,120,143,144,145,146,148,150,151,],[-63,-65,-80,-64,-80,55,-11,-27,55,-20,-15,-16,-17,-18,-19,-28,-21,-29,-30,-80,-25,-26,-22,-24,-23,]),'WRITE':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,92,120,143,144,145,146,148,150,151,],[-63,-65,-80,-64,-80,56,-11,-27,56,-20,-15,-16,-17,-18,-19,-28,-21,-29,-30,-80,-25,-26,-22,-24,-23,]),'WHILE':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,92,120,143,144,145,146,148,150,151,],[-63,-65,-80,-64,-80,57,-11,-27,57,-20,-15,-16,-17,-18,-19,-28,-21,-29,-30,-80,-25,-26,-22,-24,-23,]),'RETURN':([5,7,24,30,35,41,44,45,47,48,49,50,51,52,53,65,92,120,143,144,145,146,148,150,151,],[-63,-65,-80,-64,-80,58,-11,-27,58,-20,-15,-16,-17,-18,-19,-28,-21,-29,-30,-80,-25,-26,-22,-24,-23,]),'}':([5,7,24,30,35,40,41,44,45,46,47,48,49,50,51,52,53,64,65,92,120,143,144,145,146,148,150,151,],[-63,-65,-80,-64,-80,44,-80,-11,-27,-12,-80,-14,-15,-16,-17,-18,-19,-13,-28,-21,-29,-30,-80,-25,-26,-22,-24,-23,]),'VOID':([14,],[23,]),',':([16,43,59,72,73,74,75,76,78,79,80,81,84,93,96,97,104,105,108,109,112,114,115,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,],[26,62,-80,-80,-80,-80,-80,-51,-53,-56,-57,-72,-75,-31,-34,-35,-42,-43,-46,-47,-50,-54,-55,140,-32,-33,-36,-37,-38,-39,-40,-41,-44,-45,-48,-49,-52,-73,-74,]),'(':([18,29,55,56,57,58,59,66,67,68,69,70,77,82,83,94,95,98,99,100,101,102,103,106,107,110,111,140,],[28,33,68,69,70,77,82,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),')':([28,33,36,37,38,43,59,61,63,72,73,74,75,76,78,79,80,81,82,84,86,89,90,91,93,96,97,104,105,108,109,112,113,114,115,116,117,118,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,147,],[32,-80,42,-58,-59,-80,-80,-60,-62,-80,-80,-80,-80,-51,-53,-56,-57,-72,-80,-75,-61,122,123,124,-31,-34,-35,-42,-43,-46,-47,-50,137,-54,-55,138,-80,-77,-32,-33,-36,-37,-38,-39,-40,-41,-44,-45,-48,-49,-52,-73,-76,-80,-79,-74,-78,]),'{':([32,42,60,122,124,149,],[35,-7,35,35,35,35,]),'ELSE':([44,144,],[-11,149,]),'=':([54,59,81,84,138,142,],[66,-80,-72,-75,-73,-74,]),'[':([54,59,81,84,138,142,],[67,83,-72,-75,-73,-74,]),'CTEF':([58,66,67,68,69,70,77,82,83,94,95,98,99,100,101,102,103,106,107,110,111,140,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'CTEI':([58,66,67,68,69,70,77,82,83,94,95,98,99,100,101,102,103,106,107,110,111,140,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'*':([59,75,76,78,79,80,81,84,114,115,137,138,142,],[-80,110,-51,-53,-56,-57,-72,-75,-54,-55,-52,-73,-74,]),'/':([59,75,76,78,79,80,81,84,114,115,137,138,142,],[-80,111,-51,-53,-56,-57,-72,-75,-54,-55,-52,-73,-74,]),'+':([59,74,75,76,78,79,80,81,84,109,112,114,115,135,136,137,138,142,],[-80,106,-80,-51,-53,-56,-57,-72,-75,-47,-50,-54,-55,-48,-49,-52,-73,-74,]),'-':([59,74,75,76,78,79,80,81,84,109,112,114,115,135,136,137,138,142,],[-80,107,-80,-51,-53,-56,-57,-72,-75,-47,-50,-54,-55,-48,-49,-52,-73,-74,]),'<':([59,73,74,75,76,78,79,80,81,84,105,108,109,112,114,115,133,134,135,136,137,138,142,],[-80,98,-80,-80,-51,-53,-56,-57,-72,-75,-43,-46,-47,-50,-54,-55,-44,-45,-48,-49,-52,-73,-74,]),'>':([59,73,74,75,76,78,79,80,81,84,105,108,109,112,114,115,133,134,135,136,137,138,142,],[-80,99,-80,-80,-51,-53,-56,-57,-72,-75,-43,-46,-47,-50,-54,-55,-44,-45,-48,-49,-52,-73,-74,]),'EQUALS':([59,73,74,75,76,78,79,80,81,84,105,108,109,112,114,115,133,134,135,136,137,138,142,],[-80,100,-80,-80,-51,-53,-56,-57,-72,-75,-43,-46,-47,-50,-54,-55,-44,-45,-48,-49,-52,-73,-74,]),'DIFF':([59,73,74,75,76,78,79,80,81,84,105,108,109,112,114,115,133,134,135,136,137,138,142,],[-80,101,-80,-80,-51,-53,-56,-57,-72,-75,-43,-46,-47,-50,-54,-55,-44,-45,-48,-49,-52,-73,-74,]),'LTHANEQ':([59,73,74,75,76,78,79,80,81,84,105,108,109,112,114,115,133,134,135,136,137,138,142,],[-80,102,-80,-80,-51,-53,-56,-57,-72,-75,-43,-46,-47,-50,-54,-55,-44,-45,-48,-49,-52,-73,-74,]),'GTHANEQ':([59,73,74,75,76,78,79,80,81,84,105,108,109,112,114,115,133,134,135,136,137,138,142,],[-80,103,-80,-80,-51,-53,-56,-57,-72,-75,-43,-46,-47,-50,-54,-55,-44,-45,-48,-49,-52,-73,-74,]),'AND':([59,72,73,74,75,76,78,79,80,81,84,97,104,105,108,109,112,114,115,127,128,129,130,131,132,133,134,135,136,137,138,142,],[-80,94,-80,-80,-80,-51,-53,-56,-57,-72,-75,-35,-42,-43,-46,-47,-50,-54,-55,-36,-37,-38,-39,-40,-41,-44,-45,-48,-49,-52,-73,-74,]),'OR':([59,72,73,74,75,76,78,79,80,81,84,97,104,105,108,109,112,114,115,127,128,129,130,131,132,133,134,135,136,137,138,142,],[-80,95,-80,-80,-80,-51,-53,-56,-57,-72,-75,-35,-42,-43,-46,-47,-50,-54,-55,-36,-37,-38,-39,-40,-41,-44,-45,-48,-49,-52,-73,-74,]),']':([59,72,73,74,75,76,78,79,80,81,84,88,93,96,97,104,105,108,109,112,114,115,119,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,],[-80,-80,-80,-80,-80,-51,-53,-56,-57,-72,-75,121,-31,-34,-35,-42,-43,-46,-47,-50,-54,-55,142,-32,-33,-36,-37,-38,-39,-40,-41,-44,-45,-48,-49,-52,-73,-74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([3,35,41,47,],[4,41,45,45,]),'varsp':([3,24,35,41,47,],[5,30,5,5,5,]),'tipo':([3,24,33,35,41,47,62,],[6,6,39,6,6,6,39,]),'empty':([3,4,12,16,24,33,35,41,43,47,59,72,73,74,75,82,117,140,144,],[7,13,13,27,7,38,7,48,63,48,84,96,104,108,112,118,141,118,150,]),'programaF':([4,12,],[11,19,]),'function':([4,12,],[12,12,]),'varspp':([6,26,],[15,31,]),'main':([11,],[17,]),'tipoRetorno':([14,],[20,]),'varsppp':([16,],[25,]),'bloque':([32,60,122,124,149,],[34,85,144,146,151,]),'functionParam':([33,],[36,]),'parametro':([33,62,],[37,86,]),'cuerpo':([35,],[40,]),'estatutop':([41,47,],[46,64,]),'estatuto':([41,47,],[47,47,]),'asignacion':([41,47,],[49,49,]),'condicion':([41,47,],[50,50,]),'write':([41,47,],[51,51,]),'while':([41,47,],[52,52,]),'return':([41,47,],[53,53,]),'id':([41,47,58,66,67,68,69,70,77,82,83,94,95,98,99,100,101,102,103,106,107,110,111,140,],[54,54,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'functionAux':([42,],[60,]),'parametrop':([43,],[61,]),'asignacionp':([54,],[65,]),'superexpresion':([58,66,67,68,69,70,77,82,83,94,95,140,],[71,87,88,89,90,91,113,117,119,125,126,117,]),'megaexpresion':([58,66,67,68,69,70,77,82,83,94,95,140,],[72,72,72,72,72,72,72,72,72,72,72,72,]),'exp':([58,66,67,68,69,70,77,82,83,94,95,98,99,100,101,102,103,106,107,140,],[73,73,73,73,73,73,73,73,73,73,73,127,128,129,130,131,132,133,134,73,]),'termino':([58,66,67,68,69,70,77,82,83,94,95,98,99,100,101,102,103,106,107,110,111,140,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,135,136,74,]),'factor':([58,66,67,68,69,70,77,82,83,94,95,98,99,100,101,102,103,106,107,110,111,140,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'constante':([58,66,67,68,69,70,77,82,83,94,95,98,99,100,101,102,103,106,107,110,111,140,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'idp':([59,],[81,]),'superexpresionp':([72,],[93,]),'megaexpresionp':([73,],[97,]),'expp':([74,],[105,]),'terminop':([75,],[109,]),'ctef':([79,],[114,]),'ctei':([80,],[115,]),'idpp':([82,140,],[116,147,]),'idppp':([117,],[139,]),'condicionelse':([144,],[148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ID ; vars programaF main','programa',5,'p_programa','parser.py',19),
  ('main -> MAIN ( ) bloque','main',4,'p_main','parser.py',22),
  ('programaF -> function programaF','programaF',2,'p_programaF','parser.py',25),
  ('programaF -> empty','programaF',1,'p_programaF','parser.py',26),
  ('function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque','function',8,'p_function','parser.py',29),
  ('function -> empty','function',1,'p_function','parser.py',30),
  ('functionAux -> <empty>','functionAux',0,'p_functionAux','parser.py',33),
  ('tipoRetorno -> INT','tipoRetorno',1,'p_tipoRetorno','parser.py',47),
  ('tipoRetorno -> FLOAT','tipoRetorno',1,'p_tipoRetorno','parser.py',48),
  ('tipoRetorno -> VOID','tipoRetorno',1,'p_tipoRetorno','parser.py',49),
  ('bloque -> { cuerpo }','bloque',3,'p_bloque','parser.py',54),
  ('cuerpo -> vars estatutop','cuerpo',2,'p_cuerpo','parser.py',57),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_estatutop','parser.py',60),
  ('estatutop -> empty','estatutop',1,'p_estatutop','parser.py',61),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',64),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',65),
  ('estatuto -> write','estatuto',1,'p_estatuto','parser.py',66),
  ('estatuto -> while','estatuto',1,'p_estatuto','parser.py',67),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser.py',68),
  ('estatuto -> empty','estatuto',1,'p_estatuto','parser.py',69),
  ('return -> RETURN superexpresion ;','return',3,'p_return','parser.py',73),
  ('condicion -> IF ( superexpresion ) bloque condicionelse','condicion',6,'p_condicion','parser.py',76),
  ('condicionelse -> ELSE bloque','condicionelse',2,'p_condicionelse','parser.py',79),
  ('condicionelse -> empty','condicionelse',1,'p_condicionelse','parser.py',80),
  ('write -> WRITE ( superexpresion ) ;','write',5,'p_write','parser.py',83),
  ('while -> WHILE ( superexpresion ) bloque','while',5,'p_while','parser.py',97),
  ('asignacion -> vars','asignacion',1,'p_asignacion','parser.py',100),
  ('asignacion -> id asignacionp','asignacion',2,'p_asignacion','parser.py',101),
  ('asignacionp -> = superexpresion ;','asignacionp',3,'p_asignacionp','parser.py',104),
  ('asignacionp -> [ superexpresion ] ;','asignacionp',4,'p_asignacionp','parser.py',105),
  ('superexpresion -> megaexpresion superexpresionp','superexpresion',2,'p_superexpresion','parser.py',108),
  ('superexpresionp -> AND superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',124),
  ('superexpresionp -> OR superexpresion','superexpresionp',2,'p_superexpresionp','parser.py',125),
  ('superexpresionp -> empty','superexpresionp',1,'p_superexpresionp','parser.py',126),
  ('megaexpresion -> exp megaexpresionp','megaexpresion',2,'p_megaexpresion','parser.py',131),
  ('megaexpresionp -> < exp','megaexpresionp',2,'p_megaexpresionp','parser.py',146),
  ('megaexpresionp -> > exp','megaexpresionp',2,'p_megaexpresionp','parser.py',147),
  ('megaexpresionp -> EQUALS exp','megaexpresionp',2,'p_megaexpresionp','parser.py',148),
  ('megaexpresionp -> DIFF exp','megaexpresionp',2,'p_megaexpresionp','parser.py',149),
  ('megaexpresionp -> LTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',150),
  ('megaexpresionp -> GTHANEQ exp','megaexpresionp',2,'p_megaexpresionp','parser.py',151),
  ('megaexpresionp -> empty','megaexpresionp',1,'p_megaexpresionp','parser.py',152),
  ('exp -> termino expp','exp',2,'p_exp','parser.py',157),
  ('expp -> + exp','expp',2,'p_expp','parser.py',172),
  ('expp -> - exp','expp',2,'p_expp','parser.py',173),
  ('expp -> empty','expp',1,'p_expp','parser.py',174),
  ('termino -> factor terminop','termino',2,'p_termino','parser.py',179),
  ('terminop -> * termino','terminop',2,'p_terminop','parser.py',195),
  ('terminop -> / termino','terminop',2,'p_terminop','parser.py',196),
  ('terminop -> empty','terminop',1,'p_terminop','parser.py',197),
  ('factor -> constante','factor',1,'p_factor','parser.py',202),
  ('factor -> ( superexpresion )','factor',3,'p_factor','parser.py',203),
  ('constante -> id','constante',1,'p_constante','parser.py',206),
  ('constante -> CTEF ctef','constante',2,'p_constante','parser.py',207),
  ('constante -> CTEI ctei','constante',2,'p_constante','parser.py',208),
  ('ctef -> <empty>','ctef',0,'p_ctef','parser.py',211),
  ('ctei -> <empty>','ctei',0,'p_ctei','parser.py',218),
  ('functionParam -> parametro','functionParam',1,'p_functionParam','parser.py',225),
  ('functionParam -> empty','functionParam',1,'p_functionParam','parser.py',226),
  ('parametro -> tipo ID parametrop','parametro',3,'p_parametro','parser.py',229),
  ('parametrop -> , parametro','parametrop',2,'p_parametrop','parser.py',236),
  ('parametrop -> empty','parametrop',1,'p_parametrop','parser.py',237),
  ('vars -> varsp','vars',1,'p_vars','parser.py',240),
  ('varsp -> tipo varspp ; varsp','varsp',4,'p_varsp','parser.py',245),
  ('varsp -> empty','varsp',1,'p_varsp','parser.py',246),
  ('varspp -> ID varsppp','varspp',2,'p_varspp','parser.py',249),
  ('varsppp -> , varspp','varsppp',2,'p_varsppp','parser.py',267),
  ('varsppp -> empty','varsppp',1,'p_varsppp','parser.py',268),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',271),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',272),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',273),
  ('id -> ID idp','id',2,'p_id','parser.py',278),
  ('idp -> ( idpp )','idp',3,'p_idp','parser.py',281),
  ('idp -> [ superexpresion ]','idp',3,'p_idp','parser.py',282),
  ('idp -> empty','idp',1,'p_idp','parser.py',283),
  ('idpp -> superexpresion idppp','idpp',2,'p_idpp','parser.py',290),
  ('idpp -> empty','idpp',1,'p_idpp','parser.py',291),
  ('idppp -> , idpp','idppp',2,'p_idppp','parser.py',294),
  ('idppp -> empty','idppp',1,'p_idppp','parser.py',295),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',298),
]
