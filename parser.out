Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PROGRAMA

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ID ; vars programaF main
Rule 2     main -> MAIN primerCuad ( ) bloque
Rule 3     primerCuad -> <empty>
Rule 4     programaF -> function programaF
Rule 5     programaF -> empty
Rule 6     function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
Rule 7     function -> empty
Rule 8     functionAux -> <empty>
Rule 9     functionAux2 -> <empty>
Rule 10    tipoRetorno -> INT
Rule 11    tipoRetorno -> FLOAT
Rule 12    tipoRetorno -> VOID
Rule 13    bloque -> { cuerpo }
Rule 14    cuerpo -> vars estatutop
Rule 15    estatutop -> estatuto estatutop
Rule 16    estatutop -> empty
Rule 17    estatuto -> asignacion
Rule 18    estatuto -> condicion
Rule 19    estatuto -> write
Rule 20    estatuto -> while
Rule 21    estatuto -> return
Rule 22    estatuto -> for
Rule 23    estatuto -> empty
Rule 24    return -> RETURN superexpresion ;
Rule 25    condicion -> IF ( superexpresion ) condicionAux bloque condicionelse
Rule 26    condicionAux -> <empty>
Rule 27    condicionelse -> ELSE condicionelseAux bloque
Rule 28    condicionelse -> empty
Rule 29    condicionelseAux -> <empty>
Rule 30    write -> WRITE ( writep ) ;
Rule 31    writep -> superexpresion writepAux writepp
Rule 32    writep -> LETRERO writepAux2 writepp
Rule 33    writepAux -> <empty>
Rule 34    writepAux2 -> <empty>
Rule 35    writepp -> , writeppAux writep
Rule 36    writepp -> empty writeppAux
Rule 37    writeppAux -> <empty>
Rule 38    for -> FOR ( id = superexpresion ; superexpresion ) bloque
Rule 39    while -> WHILE whileAux ( superexpresion ) whileAux2 bloque
Rule 40    whileAux -> <empty>
Rule 41    whileAux2 -> <empty>
Rule 42    asignacion -> vars
Rule 43    asignacion -> id asignacionp
Rule 44    asignacionp -> = superexpresion ;
Rule 45    asignacionp -> [ superexpresion ] = superexpresion ;
Rule 46    superexpresion -> megaexpresion superexpresionp
Rule 47    superexpresionp -> AND superexpresion
Rule 48    superexpresionp -> OR superexpresion
Rule 49    superexpresionp -> empty
Rule 50    megaexpresion -> exp megaexpresionp
Rule 51    megaexpresionp -> < exp
Rule 52    megaexpresionp -> > exp
Rule 53    megaexpresionp -> EQUALS exp
Rule 54    megaexpresionp -> DIFF exp
Rule 55    megaexpresionp -> LTHANEQ exp
Rule 56    megaexpresionp -> GTHANEQ exp
Rule 57    megaexpresionp -> empty
Rule 58    exp -> termino expp
Rule 59    expp -> + exp
Rule 60    expp -> - exp
Rule 61    expp -> empty
Rule 62    termino -> factor terminop
Rule 63    terminop -> * termino
Rule 64    terminop -> / termino
Rule 65    terminop -> empty
Rule 66    factor -> constante
Rule 67    factor -> lParen superexpresion rParen
Rule 68    lParen -> (
Rule 69    rParen -> )
Rule 70    constante -> id
Rule 71    constante -> CTEF ctef
Rule 72    constante -> CTEI ctei
Rule 73    ctef -> <empty>
Rule 74    ctei -> <empty>
Rule 75    functionParam -> parametro
Rule 76    functionParam -> empty
Rule 77    parametro -> tipo ID parametrop
Rule 78    parametrop -> , parametro
Rule 79    parametrop -> empty
Rule 80    vars -> varsp
Rule 81    varsp -> tipo varspp ; varsp
Rule 82    varsp -> empty
Rule 83    varspp -> ID varsppp
Rule 84    varsppp -> , varspp
Rule 85    varsppp -> empty
Rule 86    tipo -> INT
Rule 87    tipo -> FLOAT
Rule 88    tipo -> CHAR
Rule 89    id -> ID idp
Rule 90    idp -> ( idpp )
Rule 91    idp -> [ superexpresion ]
Rule 92    idp -> empty
Rule 93    idpp -> superexpresion idppp
Rule 94    idpp -> empty
Rule 95    idppp -> , idpp
Rule 96    idppp -> empty
Rule 97    empty -> <empty>

Terminals, with rules where they appear

(                    : 2 6 25 30 38 39 68 90
)                    : 2 6 25 30 38 39 69 90
*                    : 63
+                    : 59
,                    : 35 78 84 95
-                    : 60
/                    : 64
;                    : 1 24 30 38 44 45 81
<                    : 51
=                    : 38 44 45
>                    : 52
AND                  : 47
CHAR                 : 88
CTEF                 : 71
CTEI                 : 72
DIFF                 : 54
ELSE                 : 27
EQUALS               : 53
FLOAT                : 11 87
FOR                  : 38
FUNCTION             : 6
GTHANEQ              : 56
ID                   : 1 6 77 83 89
IF                   : 25
INT                  : 10 86
LETRERO              : 32
LTHANEQ              : 55
MAIN                 : 2
OR                   : 48
PROGRAMA             : 
RETURN               : 24
VOID                 : 12
WHILE                : 39
WRITE                : 30
[                    : 45 91
]                    : 45 91
error                : 
{                    : 13
}                    : 13

Nonterminals, with rules where they appear

asignacion           : 17
asignacionp          : 43
bloque               : 2 6 25 27 38 39
condicion            : 18
condicionAux         : 25
condicionelse        : 25
condicionelseAux     : 27
constante            : 66
ctef                 : 71
ctei                 : 72
cuerpo               : 13
empty                : 5 7 16 23 28 36 49 57 61 65 76 79 82 85 92 94 96
estatuto             : 15
estatutop            : 14 15
exp                  : 50 51 52 53 54 55 56 59 60
expp                 : 58
factor               : 62
for                  : 22
function             : 4
functionAux          : 6
functionAux2         : 6
functionParam        : 6
id                   : 38 43 70
idp                  : 89
idpp                 : 90 95
idppp                : 93
lParen               : 67
main                 : 1
megaexpresion        : 46
megaexpresionp       : 50
parametro            : 75 78
parametrop           : 77
primerCuad           : 2
programa             : 0
programaF            : 1 4
rParen               : 67
return               : 21
superexpresion       : 24 25 31 38 38 39 44 45 45 47 48 67 91 93
superexpresionp      : 46
termino              : 58 63 64
terminop             : 62
tipo                 : 77 81
tipoRetorno          : 6
vars                 : 1 14 42
varsp                : 80 81
varspp               : 81 84
varsppp              : 83
while                : 20
whileAux             : 39
whileAux2            : 39
write                : 19
writep               : 30 35
writepAux            : 31
writepAux2           : 32
writepp              : 31 32
writeppAux           : 35 36

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ID ; vars programaF main

    ID              shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> ID . ; vars programaF main

    ;               shift and go to state 3


state 3

    (1) programa -> ID ; . vars programaF main
    (80) vars -> . varsp
    (81) varsp -> . tipo varspp ; varsp
    (82) varsp -> . empty
    (86) tipo -> . INT
    (87) tipo -> . FLOAT
    (88) tipo -> . CHAR
    (97) empty -> .

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    FUNCTION        reduce using rule 97 (empty -> .)
    MAIN            reduce using rule 97 (empty -> .)

    vars                           shift and go to state 4
    varsp                          shift and go to state 5
    tipo                           shift and go to state 6
    empty                          shift and go to state 7

state 4

    (1) programa -> ID ; vars . programaF main
    (4) programaF -> . function programaF
    (5) programaF -> . empty
    (6) function -> . FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
    (7) function -> . empty
    (97) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 97 (empty -> .)

  ! FUNCTION        [ reduce using rule 97 (empty -> .) ]

    programaF                      shift and go to state 11
    function                       shift and go to state 12
    empty                          shift and go to state 13

state 5

    (80) vars -> varsp .

    FUNCTION        reduce using rule 80 (vars -> varsp .)
    MAIN            reduce using rule 80 (vars -> varsp .)
    IF              reduce using rule 80 (vars -> varsp .)
    WRITE           reduce using rule 80 (vars -> varsp .)
    WHILE           reduce using rule 80 (vars -> varsp .)
    RETURN          reduce using rule 80 (vars -> varsp .)
    FOR             reduce using rule 80 (vars -> varsp .)
    ID              reduce using rule 80 (vars -> varsp .)
    INT             reduce using rule 80 (vars -> varsp .)
    FLOAT           reduce using rule 80 (vars -> varsp .)
    CHAR            reduce using rule 80 (vars -> varsp .)
    }               reduce using rule 80 (vars -> varsp .)


state 6

    (81) varsp -> tipo . varspp ; varsp
    (83) varspp -> . ID varsppp

    ID              shift and go to state 16

    varspp                         shift and go to state 15

state 7

    (82) varsp -> empty .

    FUNCTION        reduce using rule 82 (varsp -> empty .)
    MAIN            reduce using rule 82 (varsp -> empty .)
    IF              reduce using rule 82 (varsp -> empty .)
    WRITE           reduce using rule 82 (varsp -> empty .)
    WHILE           reduce using rule 82 (varsp -> empty .)
    RETURN          reduce using rule 82 (varsp -> empty .)
    FOR             reduce using rule 82 (varsp -> empty .)
    ID              reduce using rule 82 (varsp -> empty .)
    INT             reduce using rule 82 (varsp -> empty .)
    FLOAT           reduce using rule 82 (varsp -> empty .)
    CHAR            reduce using rule 82 (varsp -> empty .)
    }               reduce using rule 82 (varsp -> empty .)


state 8

    (86) tipo -> INT .

    ID              reduce using rule 86 (tipo -> INT .)


state 9

    (87) tipo -> FLOAT .

    ID              reduce using rule 87 (tipo -> FLOAT .)


state 10

    (88) tipo -> CHAR .

    ID              reduce using rule 88 (tipo -> CHAR .)


state 11

    (1) programa -> ID ; vars programaF . main
    (2) main -> . MAIN primerCuad ( ) bloque

    MAIN            shift and go to state 18

    main                           shift and go to state 17

state 12

    (4) programaF -> function . programaF
    (4) programaF -> . function programaF
    (5) programaF -> . empty
    (6) function -> . FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
    (7) function -> . empty
    (97) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 97 (empty -> .)

  ! FUNCTION        [ reduce using rule 97 (empty -> .) ]

    function                       shift and go to state 12
    programaF                      shift and go to state 19
    empty                          shift and go to state 13

state 13

    (5) programaF -> empty .
    (7) function -> empty .

  ! reduce/reduce conflict for MAIN resolved using rule 5 (programaF -> empty .)
    MAIN            reduce using rule 5 (programaF -> empty .)
    FUNCTION        reduce using rule 7 (function -> empty .)

  ! MAIN            [ reduce using rule 7 (function -> empty .) ]


state 14

    (6) function -> FUNCTION . tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
    (10) tipoRetorno -> . INT
    (11) tipoRetorno -> . FLOAT
    (12) tipoRetorno -> . VOID

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    VOID            shift and go to state 23

    tipoRetorno                    shift and go to state 20

state 15

    (81) varsp -> tipo varspp . ; varsp

    ;               shift and go to state 24


state 16

    (83) varspp -> ID . varsppp
    (84) varsppp -> . , varspp
    (85) varsppp -> . empty
    (97) empty -> .

    ,               shift and go to state 26
    ;               reduce using rule 97 (empty -> .)

    varsppp                        shift and go to state 25
    empty                          shift and go to state 27

state 17

    (1) programa -> ID ; vars programaF main .

    $end            reduce using rule 1 (programa -> ID ; vars programaF main .)


state 18

    (2) main -> MAIN . primerCuad ( ) bloque
    (3) primerCuad -> .

    (               reduce using rule 3 (primerCuad -> .)

    primerCuad                     shift and go to state 28

state 19

    (4) programaF -> function programaF .

    MAIN            reduce using rule 4 (programaF -> function programaF .)


state 20

    (6) function -> FUNCTION tipoRetorno . ID ( functionParam ) functionAux bloque functionAux2

    ID              shift and go to state 29


state 21

    (10) tipoRetorno -> INT .

    ID              reduce using rule 10 (tipoRetorno -> INT .)


state 22

    (11) tipoRetorno -> FLOAT .

    ID              reduce using rule 11 (tipoRetorno -> FLOAT .)


state 23

    (12) tipoRetorno -> VOID .

    ID              reduce using rule 12 (tipoRetorno -> VOID .)


state 24

    (81) varsp -> tipo varspp ; . varsp
    (81) varsp -> . tipo varspp ; varsp
    (82) varsp -> . empty
    (86) tipo -> . INT
    (87) tipo -> . FLOAT
    (88) tipo -> . CHAR
    (97) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    FUNCTION        reduce using rule 97 (empty -> .)
    MAIN            reduce using rule 97 (empty -> .)
    IF              reduce using rule 97 (empty -> .)
    WRITE           reduce using rule 97 (empty -> .)
    WHILE           reduce using rule 97 (empty -> .)
    RETURN          reduce using rule 97 (empty -> .)
    FOR             reduce using rule 97 (empty -> .)
    ID              reduce using rule 97 (empty -> .)
    }               reduce using rule 97 (empty -> .)

  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! CHAR            [ reduce using rule 97 (empty -> .) ]

    tipo                           shift and go to state 6
    varsp                          shift and go to state 30
    empty                          shift and go to state 7

state 25

    (83) varspp -> ID varsppp .

    ;               reduce using rule 83 (varspp -> ID varsppp .)


state 26

    (84) varsppp -> , . varspp
    (83) varspp -> . ID varsppp

    ID              shift and go to state 16

    varspp                         shift and go to state 31

state 27

    (85) varsppp -> empty .

    ;               reduce using rule 85 (varsppp -> empty .)


state 28

    (2) main -> MAIN primerCuad . ( ) bloque

    (               shift and go to state 32


state 29

    (6) function -> FUNCTION tipoRetorno ID . ( functionParam ) functionAux bloque functionAux2

    (               shift and go to state 33


state 30

    (81) varsp -> tipo varspp ; varsp .

    FUNCTION        reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    MAIN            reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    IF              reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    WRITE           reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    WHILE           reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    RETURN          reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    FOR             reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    ID              reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    INT             reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    FLOAT           reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    CHAR            reduce using rule 81 (varsp -> tipo varspp ; varsp .)
    }               reduce using rule 81 (varsp -> tipo varspp ; varsp .)


state 31

    (84) varsppp -> , varspp .

    ;               reduce using rule 84 (varsppp -> , varspp .)


state 32

    (2) main -> MAIN primerCuad ( . ) bloque

    )               shift and go to state 34


state 33

    (6) function -> FUNCTION tipoRetorno ID ( . functionParam ) functionAux bloque functionAux2
    (75) functionParam -> . parametro
    (76) functionParam -> . empty
    (77) parametro -> . tipo ID parametrop
    (97) empty -> .
    (86) tipo -> . INT
    (87) tipo -> . FLOAT
    (88) tipo -> . CHAR

    )               reduce using rule 97 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

    functionParam                  shift and go to state 35
    parametro                      shift and go to state 36
    empty                          shift and go to state 37
    tipo                           shift and go to state 38

state 34

    (2) main -> MAIN primerCuad ( ) . bloque
    (13) bloque -> . { cuerpo }

    {               shift and go to state 40

    bloque                         shift and go to state 39

state 35

    (6) function -> FUNCTION tipoRetorno ID ( functionParam . ) functionAux bloque functionAux2

    )               shift and go to state 41


state 36

    (75) functionParam -> parametro .

    )               reduce using rule 75 (functionParam -> parametro .)


state 37

    (76) functionParam -> empty .

    )               reduce using rule 76 (functionParam -> empty .)


state 38

    (77) parametro -> tipo . ID parametrop

    ID              shift and go to state 42


state 39

    (2) main -> MAIN primerCuad ( ) bloque .

    $end            reduce using rule 2 (main -> MAIN primerCuad ( ) bloque .)


state 40

    (13) bloque -> { . cuerpo }
    (14) cuerpo -> . vars estatutop
    (80) vars -> . varsp
    (81) varsp -> . tipo varspp ; varsp
    (82) varsp -> . empty
    (86) tipo -> . INT
    (87) tipo -> . FLOAT
    (88) tipo -> . CHAR
    (97) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    IF              reduce using rule 97 (empty -> .)
    WRITE           reduce using rule 97 (empty -> .)
    WHILE           reduce using rule 97 (empty -> .)
    RETURN          reduce using rule 97 (empty -> .)
    FOR             reduce using rule 97 (empty -> .)
    ID              reduce using rule 97 (empty -> .)
    }               reduce using rule 97 (empty -> .)

  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! CHAR            [ reduce using rule 97 (empty -> .) ]

    cuerpo                         shift and go to state 43
    vars                           shift and go to state 44
    varsp                          shift and go to state 5
    tipo                           shift and go to state 6
    empty                          shift and go to state 7

state 41

    (6) function -> FUNCTION tipoRetorno ID ( functionParam ) . functionAux bloque functionAux2
    (8) functionAux -> .

    {               reduce using rule 8 (functionAux -> .)

    functionAux                    shift and go to state 45

state 42

    (77) parametro -> tipo ID . parametrop
    (78) parametrop -> . , parametro
    (79) parametrop -> . empty
    (97) empty -> .

    ,               shift and go to state 47
    )               reduce using rule 97 (empty -> .)

    parametrop                     shift and go to state 46
    empty                          shift and go to state 48

state 43

    (13) bloque -> { cuerpo . }

    }               shift and go to state 49


state 44

    (14) cuerpo -> vars . estatutop
    (15) estatutop -> . estatuto estatutop
    (16) estatutop -> . empty
    (17) estatuto -> . asignacion
    (18) estatuto -> . condicion
    (19) estatuto -> . write
    (20) estatuto -> . while
    (21) estatuto -> . return
    (22) estatuto -> . for
    (23) estatuto -> . empty
    (97) empty -> .
    (42) asignacion -> . vars
    (43) asignacion -> . id asignacionp
    (25) condicion -> . IF ( superexpresion ) condicionAux bloque condicionelse
    (30) write -> . WRITE ( writep ) ;
    (39) while -> . WHILE whileAux ( superexpresion ) whileAux2 bloque
    (24) return -> . RETURN superexpresion ;
    (38) for -> . FOR ( id = superexpresion ; superexpresion ) bloque
    (80) vars -> . varsp
    (89) id -> . ID idp
    (81) varsp -> . tipo varspp ; varsp
    (82) varsp -> . empty
    (86) tipo -> . INT
    (87) tipo -> . FLOAT
    (88) tipo -> . CHAR

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    }               reduce using rule 97 (empty -> .)
    IF              shift and go to state 61
    WRITE           shift and go to state 62
    WHILE           shift and go to state 63
    RETURN          shift and go to state 64
    FOR             shift and go to state 65
    ID              shift and go to state 66
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

  ! IF              [ reduce using rule 97 (empty -> .) ]
  ! WRITE           [ reduce using rule 97 (empty -> .) ]
  ! WHILE           [ reduce using rule 97 (empty -> .) ]
  ! RETURN          [ reduce using rule 97 (empty -> .) ]
  ! FOR             [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! CHAR            [ reduce using rule 97 (empty -> .) ]

    vars                           shift and go to state 50
    estatutop                      shift and go to state 51
    estatuto                       shift and go to state 52
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    write                          shift and go to state 56
    while                          shift and go to state 57
    return                         shift and go to state 58
    for                            shift and go to state 59
    id                             shift and go to state 60
    varsp                          shift and go to state 5
    tipo                           shift and go to state 6

state 45

    (6) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux . bloque functionAux2
    (13) bloque -> . { cuerpo }

    {               shift and go to state 40

    bloque                         shift and go to state 67

state 46

    (77) parametro -> tipo ID parametrop .

    )               reduce using rule 77 (parametro -> tipo ID parametrop .)


state 47

    (78) parametrop -> , . parametro
    (77) parametro -> . tipo ID parametrop
    (86) tipo -> . INT
    (87) tipo -> . FLOAT
    (88) tipo -> . CHAR

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

    parametro                      shift and go to state 68
    tipo                           shift and go to state 38

state 48

    (79) parametrop -> empty .

    )               reduce using rule 79 (parametrop -> empty .)


state 49

    (13) bloque -> { cuerpo } .

    $end            reduce using rule 13 (bloque -> { cuerpo } .)
    FUNCTION        reduce using rule 13 (bloque -> { cuerpo } .)
    MAIN            reduce using rule 13 (bloque -> { cuerpo } .)
    ELSE            reduce using rule 13 (bloque -> { cuerpo } .)
    IF              reduce using rule 13 (bloque -> { cuerpo } .)
    WRITE           reduce using rule 13 (bloque -> { cuerpo } .)
    WHILE           reduce using rule 13 (bloque -> { cuerpo } .)
    RETURN          reduce using rule 13 (bloque -> { cuerpo } .)
    FOR             reduce using rule 13 (bloque -> { cuerpo } .)
    ID              reduce using rule 13 (bloque -> { cuerpo } .)
    INT             reduce using rule 13 (bloque -> { cuerpo } .)
    FLOAT           reduce using rule 13 (bloque -> { cuerpo } .)
    CHAR            reduce using rule 13 (bloque -> { cuerpo } .)
    }               reduce using rule 13 (bloque -> { cuerpo } .)


state 50

    (42) asignacion -> vars .

    IF              reduce using rule 42 (asignacion -> vars .)
    WRITE           reduce using rule 42 (asignacion -> vars .)
    WHILE           reduce using rule 42 (asignacion -> vars .)
    RETURN          reduce using rule 42 (asignacion -> vars .)
    FOR             reduce using rule 42 (asignacion -> vars .)
    ID              reduce using rule 42 (asignacion -> vars .)
    INT             reduce using rule 42 (asignacion -> vars .)
    FLOAT           reduce using rule 42 (asignacion -> vars .)
    CHAR            reduce using rule 42 (asignacion -> vars .)
    }               reduce using rule 42 (asignacion -> vars .)


state 51

    (14) cuerpo -> vars estatutop .

    }               reduce using rule 14 (cuerpo -> vars estatutop .)


state 52

    (15) estatutop -> estatuto . estatutop
    (15) estatutop -> . estatuto estatutop
    (16) estatutop -> . empty
    (17) estatuto -> . asignacion
    (18) estatuto -> . condicion
    (19) estatuto -> . write
    (20) estatuto -> . while
    (21) estatuto -> . return
    (22) estatuto -> . for
    (23) estatuto -> . empty
    (97) empty -> .
    (42) asignacion -> . vars
    (43) asignacion -> . id asignacionp
    (25) condicion -> . IF ( superexpresion ) condicionAux bloque condicionelse
    (30) write -> . WRITE ( writep ) ;
    (39) while -> . WHILE whileAux ( superexpresion ) whileAux2 bloque
    (24) return -> . RETURN superexpresion ;
    (38) for -> . FOR ( id = superexpresion ; superexpresion ) bloque
    (80) vars -> . varsp
    (89) id -> . ID idp
    (81) varsp -> . tipo varspp ; varsp
    (82) varsp -> . empty
    (86) tipo -> . INT
    (87) tipo -> . FLOAT
    (88) tipo -> . CHAR

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    }               reduce using rule 97 (empty -> .)
    IF              shift and go to state 61
    WRITE           shift and go to state 62
    WHILE           shift and go to state 63
    RETURN          shift and go to state 64
    FOR             shift and go to state 65
    ID              shift and go to state 66
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

  ! IF              [ reduce using rule 97 (empty -> .) ]
  ! WRITE           [ reduce using rule 97 (empty -> .) ]
  ! WHILE           [ reduce using rule 97 (empty -> .) ]
  ! RETURN          [ reduce using rule 97 (empty -> .) ]
  ! FOR             [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! CHAR            [ reduce using rule 97 (empty -> .) ]

    estatuto                       shift and go to state 52
    estatutop                      shift and go to state 69
    empty                          shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    write                          shift and go to state 56
    while                          shift and go to state 57
    return                         shift and go to state 58
    for                            shift and go to state 59
    vars                           shift and go to state 50
    id                             shift and go to state 60
    varsp                          shift and go to state 5
    tipo                           shift and go to state 6

state 53

    (16) estatutop -> empty .
    (23) estatuto -> empty .
    (82) varsp -> empty .

  ! reduce/reduce conflict for } resolved using rule 16 (estatutop -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 23 (estatuto -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 23 (estatuto -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (estatuto -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (estatuto -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 23 (estatuto -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 23 (estatuto -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 23 (estatuto -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (estatuto -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 23 (estatuto -> empty .)
  ! reduce/reduce conflict for } resolved using rule 16 (estatutop -> empty .)
    }               reduce using rule 16 (estatutop -> empty .)
    IF              reduce using rule 23 (estatuto -> empty .)
    WRITE           reduce using rule 23 (estatuto -> empty .)
    WHILE           reduce using rule 23 (estatuto -> empty .)
    RETURN          reduce using rule 23 (estatuto -> empty .)
    FOR             reduce using rule 23 (estatuto -> empty .)
    ID              reduce using rule 23 (estatuto -> empty .)
    INT             reduce using rule 23 (estatuto -> empty .)
    FLOAT           reduce using rule 23 (estatuto -> empty .)
    CHAR            reduce using rule 23 (estatuto -> empty .)

  ! }               [ reduce using rule 23 (estatuto -> empty .) ]
  ! IF              [ reduce using rule 82 (varsp -> empty .) ]
  ! WRITE           [ reduce using rule 82 (varsp -> empty .) ]
  ! WHILE           [ reduce using rule 82 (varsp -> empty .) ]
  ! RETURN          [ reduce using rule 82 (varsp -> empty .) ]
  ! FOR             [ reduce using rule 82 (varsp -> empty .) ]
  ! ID              [ reduce using rule 82 (varsp -> empty .) ]
  ! INT             [ reduce using rule 82 (varsp -> empty .) ]
  ! FLOAT           [ reduce using rule 82 (varsp -> empty .) ]
  ! CHAR            [ reduce using rule 82 (varsp -> empty .) ]
  ! }               [ reduce using rule 82 (varsp -> empty .) ]


state 54

    (17) estatuto -> asignacion .

    IF              reduce using rule 17 (estatuto -> asignacion .)
    WRITE           reduce using rule 17 (estatuto -> asignacion .)
    WHILE           reduce using rule 17 (estatuto -> asignacion .)
    RETURN          reduce using rule 17 (estatuto -> asignacion .)
    FOR             reduce using rule 17 (estatuto -> asignacion .)
    ID              reduce using rule 17 (estatuto -> asignacion .)
    INT             reduce using rule 17 (estatuto -> asignacion .)
    FLOAT           reduce using rule 17 (estatuto -> asignacion .)
    CHAR            reduce using rule 17 (estatuto -> asignacion .)
    }               reduce using rule 17 (estatuto -> asignacion .)


state 55

    (18) estatuto -> condicion .

    IF              reduce using rule 18 (estatuto -> condicion .)
    WRITE           reduce using rule 18 (estatuto -> condicion .)
    WHILE           reduce using rule 18 (estatuto -> condicion .)
    RETURN          reduce using rule 18 (estatuto -> condicion .)
    FOR             reduce using rule 18 (estatuto -> condicion .)
    ID              reduce using rule 18 (estatuto -> condicion .)
    INT             reduce using rule 18 (estatuto -> condicion .)
    FLOAT           reduce using rule 18 (estatuto -> condicion .)
    CHAR            reduce using rule 18 (estatuto -> condicion .)
    }               reduce using rule 18 (estatuto -> condicion .)


state 56

    (19) estatuto -> write .

    IF              reduce using rule 19 (estatuto -> write .)
    WRITE           reduce using rule 19 (estatuto -> write .)
    WHILE           reduce using rule 19 (estatuto -> write .)
    RETURN          reduce using rule 19 (estatuto -> write .)
    FOR             reduce using rule 19 (estatuto -> write .)
    ID              reduce using rule 19 (estatuto -> write .)
    INT             reduce using rule 19 (estatuto -> write .)
    FLOAT           reduce using rule 19 (estatuto -> write .)
    CHAR            reduce using rule 19 (estatuto -> write .)
    }               reduce using rule 19 (estatuto -> write .)


state 57

    (20) estatuto -> while .

    IF              reduce using rule 20 (estatuto -> while .)
    WRITE           reduce using rule 20 (estatuto -> while .)
    WHILE           reduce using rule 20 (estatuto -> while .)
    RETURN          reduce using rule 20 (estatuto -> while .)
    FOR             reduce using rule 20 (estatuto -> while .)
    ID              reduce using rule 20 (estatuto -> while .)
    INT             reduce using rule 20 (estatuto -> while .)
    FLOAT           reduce using rule 20 (estatuto -> while .)
    CHAR            reduce using rule 20 (estatuto -> while .)
    }               reduce using rule 20 (estatuto -> while .)


state 58

    (21) estatuto -> return .

    IF              reduce using rule 21 (estatuto -> return .)
    WRITE           reduce using rule 21 (estatuto -> return .)
    WHILE           reduce using rule 21 (estatuto -> return .)
    RETURN          reduce using rule 21 (estatuto -> return .)
    FOR             reduce using rule 21 (estatuto -> return .)
    ID              reduce using rule 21 (estatuto -> return .)
    INT             reduce using rule 21 (estatuto -> return .)
    FLOAT           reduce using rule 21 (estatuto -> return .)
    CHAR            reduce using rule 21 (estatuto -> return .)
    }               reduce using rule 21 (estatuto -> return .)


state 59

    (22) estatuto -> for .

    IF              reduce using rule 22 (estatuto -> for .)
    WRITE           reduce using rule 22 (estatuto -> for .)
    WHILE           reduce using rule 22 (estatuto -> for .)
    RETURN          reduce using rule 22 (estatuto -> for .)
    FOR             reduce using rule 22 (estatuto -> for .)
    ID              reduce using rule 22 (estatuto -> for .)
    INT             reduce using rule 22 (estatuto -> for .)
    FLOAT           reduce using rule 22 (estatuto -> for .)
    CHAR            reduce using rule 22 (estatuto -> for .)
    }               reduce using rule 22 (estatuto -> for .)


state 60

    (43) asignacion -> id . asignacionp
    (44) asignacionp -> . = superexpresion ;
    (45) asignacionp -> . [ superexpresion ] = superexpresion ;

    =               shift and go to state 71
    [               shift and go to state 72

    asignacionp                    shift and go to state 70

state 61

    (25) condicion -> IF . ( superexpresion ) condicionAux bloque condicionelse

    (               shift and go to state 73


state 62

    (30) write -> WRITE . ( writep ) ;

    (               shift and go to state 74


state 63

    (39) while -> WHILE . whileAux ( superexpresion ) whileAux2 bloque
    (40) whileAux -> .

    (               reduce using rule 40 (whileAux -> .)

    whileAux                       shift and go to state 75

state 64

    (24) return -> RETURN . superexpresion ;
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    superexpresion                 shift and go to state 76
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 65

    (38) for -> FOR . ( id = superexpresion ; superexpresion ) bloque

    (               shift and go to state 87


state 66

    (89) id -> ID . idp
    (90) idp -> . ( idpp )
    (91) idp -> . [ superexpresion ]
    (92) idp -> . empty
    (97) empty -> .

  ! shift/reduce conflict for [ resolved as shift
    (               shift and go to state 89
    [               shift and go to state 90
    =               reduce using rule 97 (empty -> .)
    *               reduce using rule 97 (empty -> .)
    /               reduce using rule 97 (empty -> .)
    +               reduce using rule 97 (empty -> .)
    -               reduce using rule 97 (empty -> .)
    <               reduce using rule 97 (empty -> .)
    >               reduce using rule 97 (empty -> .)
    EQUALS          reduce using rule 97 (empty -> .)
    DIFF            reduce using rule 97 (empty -> .)
    LTHANEQ         reduce using rule 97 (empty -> .)
    GTHANEQ         reduce using rule 97 (empty -> .)
    AND             reduce using rule 97 (empty -> .)
    OR              reduce using rule 97 (empty -> .)
    ;               reduce using rule 97 (empty -> .)
    ]               reduce using rule 97 (empty -> .)
    )               reduce using rule 97 (empty -> .)
    ,               reduce using rule 97 (empty -> .)

  ! [               [ reduce using rule 97 (empty -> .) ]

    idp                            shift and go to state 88
    empty                          shift and go to state 91

state 67

    (6) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque . functionAux2
    (9) functionAux2 -> .

    FUNCTION        reduce using rule 9 (functionAux2 -> .)
    MAIN            reduce using rule 9 (functionAux2 -> .)

    functionAux2                   shift and go to state 92

state 68

    (78) parametrop -> , parametro .

    )               reduce using rule 78 (parametrop -> , parametro .)


state 69

    (15) estatutop -> estatuto estatutop .

    }               reduce using rule 15 (estatutop -> estatuto estatutop .)


state 70

    (43) asignacion -> id asignacionp .

    IF              reduce using rule 43 (asignacion -> id asignacionp .)
    WRITE           reduce using rule 43 (asignacion -> id asignacionp .)
    WHILE           reduce using rule 43 (asignacion -> id asignacionp .)
    RETURN          reduce using rule 43 (asignacion -> id asignacionp .)
    FOR             reduce using rule 43 (asignacion -> id asignacionp .)
    ID              reduce using rule 43 (asignacion -> id asignacionp .)
    INT             reduce using rule 43 (asignacion -> id asignacionp .)
    FLOAT           reduce using rule 43 (asignacion -> id asignacionp .)
    CHAR            reduce using rule 43 (asignacion -> id asignacionp .)
    }               reduce using rule 43 (asignacion -> id asignacionp .)


state 71

    (44) asignacionp -> = . superexpresion ;
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    superexpresion                 shift and go to state 93
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 72

    (45) asignacionp -> [ . superexpresion ] = superexpresion ;
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    superexpresion                 shift and go to state 94
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 73

    (25) condicion -> IF ( . superexpresion ) condicionAux bloque condicionelse
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    superexpresion                 shift and go to state 95
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 74

    (30) write -> WRITE ( . writep ) ;
    (31) writep -> . superexpresion writepAux writepp
    (32) writep -> . LETRERO writepAux2 writepp
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    LETRERO         shift and go to state 98
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    writep                         shift and go to state 96
    superexpresion                 shift and go to state 97
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 75

    (39) while -> WHILE whileAux . ( superexpresion ) whileAux2 bloque

    (               shift and go to state 99


state 76

    (24) return -> RETURN superexpresion . ;

    ;               shift and go to state 100


state 77

    (46) superexpresion -> megaexpresion . superexpresionp
    (47) superexpresionp -> . AND superexpresion
    (48) superexpresionp -> . OR superexpresion
    (49) superexpresionp -> . empty
    (97) empty -> .

    AND             shift and go to state 102
    OR              shift and go to state 103
    ;               reduce using rule 97 (empty -> .)
    ]               reduce using rule 97 (empty -> .)
    )               reduce using rule 97 (empty -> .)
    ,               reduce using rule 97 (empty -> .)

    superexpresionp                shift and go to state 101
    empty                          shift and go to state 104

state 78

    (50) megaexpresion -> exp . megaexpresionp
    (51) megaexpresionp -> . < exp
    (52) megaexpresionp -> . > exp
    (53) megaexpresionp -> . EQUALS exp
    (54) megaexpresionp -> . DIFF exp
    (55) megaexpresionp -> . LTHANEQ exp
    (56) megaexpresionp -> . GTHANEQ exp
    (57) megaexpresionp -> . empty
    (97) empty -> .

    <               shift and go to state 106
    >               shift and go to state 107
    EQUALS          shift and go to state 108
    DIFF            shift and go to state 109
    LTHANEQ         shift and go to state 110
    GTHANEQ         shift and go to state 111
    AND             reduce using rule 97 (empty -> .)
    OR              reduce using rule 97 (empty -> .)
    ;               reduce using rule 97 (empty -> .)
    ]               reduce using rule 97 (empty -> .)
    )               reduce using rule 97 (empty -> .)
    ,               reduce using rule 97 (empty -> .)

    megaexpresionp                 shift and go to state 105
    empty                          shift and go to state 112

state 79

    (58) exp -> termino . expp
    (59) expp -> . + exp
    (60) expp -> . - exp
    (61) expp -> . empty
    (97) empty -> .

    +               shift and go to state 114
    -               shift and go to state 115
    <               reduce using rule 97 (empty -> .)
    >               reduce using rule 97 (empty -> .)
    EQUALS          reduce using rule 97 (empty -> .)
    DIFF            reduce using rule 97 (empty -> .)
    LTHANEQ         reduce using rule 97 (empty -> .)
    GTHANEQ         reduce using rule 97 (empty -> .)
    AND             reduce using rule 97 (empty -> .)
    OR              reduce using rule 97 (empty -> .)
    ;               reduce using rule 97 (empty -> .)
    ]               reduce using rule 97 (empty -> .)
    )               reduce using rule 97 (empty -> .)
    ,               reduce using rule 97 (empty -> .)

    expp                           shift and go to state 113
    empty                          shift and go to state 116

state 80

    (62) termino -> factor . terminop
    (63) terminop -> . * termino
    (64) terminop -> . / termino
    (65) terminop -> . empty
    (97) empty -> .

    *               shift and go to state 118
    /               shift and go to state 119
    +               reduce using rule 97 (empty -> .)
    -               reduce using rule 97 (empty -> .)
    <               reduce using rule 97 (empty -> .)
    >               reduce using rule 97 (empty -> .)
    EQUALS          reduce using rule 97 (empty -> .)
    DIFF            reduce using rule 97 (empty -> .)
    LTHANEQ         reduce using rule 97 (empty -> .)
    GTHANEQ         reduce using rule 97 (empty -> .)
    AND             reduce using rule 97 (empty -> .)
    OR              reduce using rule 97 (empty -> .)
    ;               reduce using rule 97 (empty -> .)
    ]               reduce using rule 97 (empty -> .)
    )               reduce using rule 97 (empty -> .)
    ,               reduce using rule 97 (empty -> .)

    terminop                       shift and go to state 117
    empty                          shift and go to state 120

state 81

    (66) factor -> constante .

    *               reduce using rule 66 (factor -> constante .)
    /               reduce using rule 66 (factor -> constante .)
    +               reduce using rule 66 (factor -> constante .)
    -               reduce using rule 66 (factor -> constante .)
    <               reduce using rule 66 (factor -> constante .)
    >               reduce using rule 66 (factor -> constante .)
    EQUALS          reduce using rule 66 (factor -> constante .)
    DIFF            reduce using rule 66 (factor -> constante .)
    LTHANEQ         reduce using rule 66 (factor -> constante .)
    GTHANEQ         reduce using rule 66 (factor -> constante .)
    AND             reduce using rule 66 (factor -> constante .)
    OR              reduce using rule 66 (factor -> constante .)
    ;               reduce using rule 66 (factor -> constante .)
    ]               reduce using rule 66 (factor -> constante .)
    )               reduce using rule 66 (factor -> constante .)
    ,               reduce using rule 66 (factor -> constante .)


state 82

    (67) factor -> lParen . superexpresion rParen
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    lParen                         shift and go to state 82
    superexpresion                 shift and go to state 121
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    id                             shift and go to state 83

state 83

    (70) constante -> id .

    *               reduce using rule 70 (constante -> id .)
    /               reduce using rule 70 (constante -> id .)
    +               reduce using rule 70 (constante -> id .)
    -               reduce using rule 70 (constante -> id .)
    <               reduce using rule 70 (constante -> id .)
    >               reduce using rule 70 (constante -> id .)
    EQUALS          reduce using rule 70 (constante -> id .)
    DIFF            reduce using rule 70 (constante -> id .)
    LTHANEQ         reduce using rule 70 (constante -> id .)
    GTHANEQ         reduce using rule 70 (constante -> id .)
    AND             reduce using rule 70 (constante -> id .)
    OR              reduce using rule 70 (constante -> id .)
    ;               reduce using rule 70 (constante -> id .)
    ]               reduce using rule 70 (constante -> id .)
    )               reduce using rule 70 (constante -> id .)
    ,               reduce using rule 70 (constante -> id .)


state 84

    (71) constante -> CTEF . ctef
    (73) ctef -> .

    *               reduce using rule 73 (ctef -> .)
    /               reduce using rule 73 (ctef -> .)
    +               reduce using rule 73 (ctef -> .)
    -               reduce using rule 73 (ctef -> .)
    <               reduce using rule 73 (ctef -> .)
    >               reduce using rule 73 (ctef -> .)
    EQUALS          reduce using rule 73 (ctef -> .)
    DIFF            reduce using rule 73 (ctef -> .)
    LTHANEQ         reduce using rule 73 (ctef -> .)
    GTHANEQ         reduce using rule 73 (ctef -> .)
    AND             reduce using rule 73 (ctef -> .)
    OR              reduce using rule 73 (ctef -> .)
    ;               reduce using rule 73 (ctef -> .)
    ]               reduce using rule 73 (ctef -> .)
    )               reduce using rule 73 (ctef -> .)
    ,               reduce using rule 73 (ctef -> .)

    ctef                           shift and go to state 122

state 85

    (72) constante -> CTEI . ctei
    (74) ctei -> .

    *               reduce using rule 74 (ctei -> .)
    /               reduce using rule 74 (ctei -> .)
    +               reduce using rule 74 (ctei -> .)
    -               reduce using rule 74 (ctei -> .)
    <               reduce using rule 74 (ctei -> .)
    >               reduce using rule 74 (ctei -> .)
    EQUALS          reduce using rule 74 (ctei -> .)
    DIFF            reduce using rule 74 (ctei -> .)
    LTHANEQ         reduce using rule 74 (ctei -> .)
    GTHANEQ         reduce using rule 74 (ctei -> .)
    AND             reduce using rule 74 (ctei -> .)
    OR              reduce using rule 74 (ctei -> .)
    ;               reduce using rule 74 (ctei -> .)
    ]               reduce using rule 74 (ctei -> .)
    )               reduce using rule 74 (ctei -> .)
    ,               reduce using rule 74 (ctei -> .)

    ctei                           shift and go to state 123

state 86

    (68) lParen -> ( .

    CTEF            reduce using rule 68 (lParen -> ( .)
    CTEI            reduce using rule 68 (lParen -> ( .)
    (               reduce using rule 68 (lParen -> ( .)
    ID              reduce using rule 68 (lParen -> ( .)


state 87

    (38) for -> FOR ( . id = superexpresion ; superexpresion ) bloque
    (89) id -> . ID idp

    ID              shift and go to state 66

    id                             shift and go to state 124

state 88

    (89) id -> ID idp .

    =               reduce using rule 89 (id -> ID idp .)
    [               reduce using rule 89 (id -> ID idp .)
    *               reduce using rule 89 (id -> ID idp .)
    /               reduce using rule 89 (id -> ID idp .)
    +               reduce using rule 89 (id -> ID idp .)
    -               reduce using rule 89 (id -> ID idp .)
    <               reduce using rule 89 (id -> ID idp .)
    >               reduce using rule 89 (id -> ID idp .)
    EQUALS          reduce using rule 89 (id -> ID idp .)
    DIFF            reduce using rule 89 (id -> ID idp .)
    LTHANEQ         reduce using rule 89 (id -> ID idp .)
    GTHANEQ         reduce using rule 89 (id -> ID idp .)
    AND             reduce using rule 89 (id -> ID idp .)
    OR              reduce using rule 89 (id -> ID idp .)
    ;               reduce using rule 89 (id -> ID idp .)
    ]               reduce using rule 89 (id -> ID idp .)
    )               reduce using rule 89 (id -> ID idp .)
    ,               reduce using rule 89 (id -> ID idp .)


state 89

    (90) idp -> ( . idpp )
    (93) idpp -> . superexpresion idppp
    (94) idpp -> . empty
    (46) superexpresion -> . megaexpresion superexpresionp
    (97) empty -> .
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    )               reduce using rule 97 (empty -> .)
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    idpp                           shift and go to state 125
    superexpresion                 shift and go to state 126
    empty                          shift and go to state 127
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 90

    (91) idp -> [ . superexpresion ]
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    superexpresion                 shift and go to state 128
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 91

    (92) idp -> empty .

    =               reduce using rule 92 (idp -> empty .)
    [               reduce using rule 92 (idp -> empty .)
    *               reduce using rule 92 (idp -> empty .)
    /               reduce using rule 92 (idp -> empty .)
    +               reduce using rule 92 (idp -> empty .)
    -               reduce using rule 92 (idp -> empty .)
    <               reduce using rule 92 (idp -> empty .)
    >               reduce using rule 92 (idp -> empty .)
    EQUALS          reduce using rule 92 (idp -> empty .)
    DIFF            reduce using rule 92 (idp -> empty .)
    LTHANEQ         reduce using rule 92 (idp -> empty .)
    GTHANEQ         reduce using rule 92 (idp -> empty .)
    AND             reduce using rule 92 (idp -> empty .)
    OR              reduce using rule 92 (idp -> empty .)
    ;               reduce using rule 92 (idp -> empty .)
    ]               reduce using rule 92 (idp -> empty .)
    )               reduce using rule 92 (idp -> empty .)
    ,               reduce using rule 92 (idp -> empty .)


state 92

    (6) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2 .

    FUNCTION        reduce using rule 6 (function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2 .)
    MAIN            reduce using rule 6 (function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2 .)


state 93

    (44) asignacionp -> = superexpresion . ;

    ;               shift and go to state 129


state 94

    (45) asignacionp -> [ superexpresion . ] = superexpresion ;

    ]               shift and go to state 130


state 95

    (25) condicion -> IF ( superexpresion . ) condicionAux bloque condicionelse

    )               shift and go to state 131


state 96

    (30) write -> WRITE ( writep . ) ;

    )               shift and go to state 132


state 97

    (31) writep -> superexpresion . writepAux writepp
    (33) writepAux -> .

    ,               reduce using rule 33 (writepAux -> .)
    )               reduce using rule 33 (writepAux -> .)

    writepAux                      shift and go to state 133

state 98

    (32) writep -> LETRERO . writepAux2 writepp
    (34) writepAux2 -> .

    ,               reduce using rule 34 (writepAux2 -> .)
    )               reduce using rule 34 (writepAux2 -> .)

    writepAux2                     shift and go to state 134

state 99

    (39) while -> WHILE whileAux ( . superexpresion ) whileAux2 bloque
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    superexpresion                 shift and go to state 135
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 100

    (24) return -> RETURN superexpresion ; .

    IF              reduce using rule 24 (return -> RETURN superexpresion ; .)
    WRITE           reduce using rule 24 (return -> RETURN superexpresion ; .)
    WHILE           reduce using rule 24 (return -> RETURN superexpresion ; .)
    RETURN          reduce using rule 24 (return -> RETURN superexpresion ; .)
    FOR             reduce using rule 24 (return -> RETURN superexpresion ; .)
    ID              reduce using rule 24 (return -> RETURN superexpresion ; .)
    INT             reduce using rule 24 (return -> RETURN superexpresion ; .)
    FLOAT           reduce using rule 24 (return -> RETURN superexpresion ; .)
    CHAR            reduce using rule 24 (return -> RETURN superexpresion ; .)
    }               reduce using rule 24 (return -> RETURN superexpresion ; .)


state 101

    (46) superexpresion -> megaexpresion superexpresionp .

    ;               reduce using rule 46 (superexpresion -> megaexpresion superexpresionp .)
    ]               reduce using rule 46 (superexpresion -> megaexpresion superexpresionp .)
    )               reduce using rule 46 (superexpresion -> megaexpresion superexpresionp .)
    ,               reduce using rule 46 (superexpresion -> megaexpresion superexpresionp .)


state 102

    (47) superexpresionp -> AND . superexpresion
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    superexpresion                 shift and go to state 136
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 103

    (48) superexpresionp -> OR . superexpresion
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    superexpresion                 shift and go to state 137
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 104

    (49) superexpresionp -> empty .

    ;               reduce using rule 49 (superexpresionp -> empty .)
    ]               reduce using rule 49 (superexpresionp -> empty .)
    )               reduce using rule 49 (superexpresionp -> empty .)
    ,               reduce using rule 49 (superexpresionp -> empty .)


state 105

    (50) megaexpresion -> exp megaexpresionp .

    AND             reduce using rule 50 (megaexpresion -> exp megaexpresionp .)
    OR              reduce using rule 50 (megaexpresion -> exp megaexpresionp .)
    ;               reduce using rule 50 (megaexpresion -> exp megaexpresionp .)
    ]               reduce using rule 50 (megaexpresion -> exp megaexpresionp .)
    )               reduce using rule 50 (megaexpresion -> exp megaexpresionp .)
    ,               reduce using rule 50 (megaexpresion -> exp megaexpresionp .)


state 106

    (51) megaexpresionp -> < . exp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    exp                            shift and go to state 138
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 107

    (52) megaexpresionp -> > . exp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    exp                            shift and go to state 139
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 108

    (53) megaexpresionp -> EQUALS . exp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    exp                            shift and go to state 140
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 109

    (54) megaexpresionp -> DIFF . exp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    exp                            shift and go to state 141
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 110

    (55) megaexpresionp -> LTHANEQ . exp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    exp                            shift and go to state 142
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 111

    (56) megaexpresionp -> GTHANEQ . exp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    exp                            shift and go to state 143
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 112

    (57) megaexpresionp -> empty .

    AND             reduce using rule 57 (megaexpresionp -> empty .)
    OR              reduce using rule 57 (megaexpresionp -> empty .)
    ;               reduce using rule 57 (megaexpresionp -> empty .)
    ]               reduce using rule 57 (megaexpresionp -> empty .)
    )               reduce using rule 57 (megaexpresionp -> empty .)
    ,               reduce using rule 57 (megaexpresionp -> empty .)


state 113

    (58) exp -> termino expp .

    <               reduce using rule 58 (exp -> termino expp .)
    >               reduce using rule 58 (exp -> termino expp .)
    EQUALS          reduce using rule 58 (exp -> termino expp .)
    DIFF            reduce using rule 58 (exp -> termino expp .)
    LTHANEQ         reduce using rule 58 (exp -> termino expp .)
    GTHANEQ         reduce using rule 58 (exp -> termino expp .)
    AND             reduce using rule 58 (exp -> termino expp .)
    OR              reduce using rule 58 (exp -> termino expp .)
    ;               reduce using rule 58 (exp -> termino expp .)
    ]               reduce using rule 58 (exp -> termino expp .)
    )               reduce using rule 58 (exp -> termino expp .)
    ,               reduce using rule 58 (exp -> termino expp .)


state 114

    (59) expp -> + . exp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    exp                            shift and go to state 144
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 115

    (60) expp -> - . exp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    exp                            shift and go to state 145
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 116

    (61) expp -> empty .

    <               reduce using rule 61 (expp -> empty .)
    >               reduce using rule 61 (expp -> empty .)
    EQUALS          reduce using rule 61 (expp -> empty .)
    DIFF            reduce using rule 61 (expp -> empty .)
    LTHANEQ         reduce using rule 61 (expp -> empty .)
    GTHANEQ         reduce using rule 61 (expp -> empty .)
    AND             reduce using rule 61 (expp -> empty .)
    OR              reduce using rule 61 (expp -> empty .)
    ;               reduce using rule 61 (expp -> empty .)
    ]               reduce using rule 61 (expp -> empty .)
    )               reduce using rule 61 (expp -> empty .)
    ,               reduce using rule 61 (expp -> empty .)


state 117

    (62) termino -> factor terminop .

    +               reduce using rule 62 (termino -> factor terminop .)
    -               reduce using rule 62 (termino -> factor terminop .)
    <               reduce using rule 62 (termino -> factor terminop .)
    >               reduce using rule 62 (termino -> factor terminop .)
    EQUALS          reduce using rule 62 (termino -> factor terminop .)
    DIFF            reduce using rule 62 (termino -> factor terminop .)
    LTHANEQ         reduce using rule 62 (termino -> factor terminop .)
    GTHANEQ         reduce using rule 62 (termino -> factor terminop .)
    AND             reduce using rule 62 (termino -> factor terminop .)
    OR              reduce using rule 62 (termino -> factor terminop .)
    ;               reduce using rule 62 (termino -> factor terminop .)
    ]               reduce using rule 62 (termino -> factor terminop .)
    )               reduce using rule 62 (termino -> factor terminop .)
    ,               reduce using rule 62 (termino -> factor terminop .)


state 118

    (63) terminop -> * . termino
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    termino                        shift and go to state 146
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 119

    (64) terminop -> / . termino
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    termino                        shift and go to state 147
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 120

    (65) terminop -> empty .

    +               reduce using rule 65 (terminop -> empty .)
    -               reduce using rule 65 (terminop -> empty .)
    <               reduce using rule 65 (terminop -> empty .)
    >               reduce using rule 65 (terminop -> empty .)
    EQUALS          reduce using rule 65 (terminop -> empty .)
    DIFF            reduce using rule 65 (terminop -> empty .)
    LTHANEQ         reduce using rule 65 (terminop -> empty .)
    GTHANEQ         reduce using rule 65 (terminop -> empty .)
    AND             reduce using rule 65 (terminop -> empty .)
    OR              reduce using rule 65 (terminop -> empty .)
    ;               reduce using rule 65 (terminop -> empty .)
    ]               reduce using rule 65 (terminop -> empty .)
    )               reduce using rule 65 (terminop -> empty .)
    ,               reduce using rule 65 (terminop -> empty .)


state 121

    (67) factor -> lParen superexpresion . rParen
    (69) rParen -> . )

    )               shift and go to state 149

    rParen                         shift and go to state 148

state 122

    (71) constante -> CTEF ctef .

    *               reduce using rule 71 (constante -> CTEF ctef .)
    /               reduce using rule 71 (constante -> CTEF ctef .)
    +               reduce using rule 71 (constante -> CTEF ctef .)
    -               reduce using rule 71 (constante -> CTEF ctef .)
    <               reduce using rule 71 (constante -> CTEF ctef .)
    >               reduce using rule 71 (constante -> CTEF ctef .)
    EQUALS          reduce using rule 71 (constante -> CTEF ctef .)
    DIFF            reduce using rule 71 (constante -> CTEF ctef .)
    LTHANEQ         reduce using rule 71 (constante -> CTEF ctef .)
    GTHANEQ         reduce using rule 71 (constante -> CTEF ctef .)
    AND             reduce using rule 71 (constante -> CTEF ctef .)
    OR              reduce using rule 71 (constante -> CTEF ctef .)
    ;               reduce using rule 71 (constante -> CTEF ctef .)
    ]               reduce using rule 71 (constante -> CTEF ctef .)
    )               reduce using rule 71 (constante -> CTEF ctef .)
    ,               reduce using rule 71 (constante -> CTEF ctef .)


state 123

    (72) constante -> CTEI ctei .

    *               reduce using rule 72 (constante -> CTEI ctei .)
    /               reduce using rule 72 (constante -> CTEI ctei .)
    +               reduce using rule 72 (constante -> CTEI ctei .)
    -               reduce using rule 72 (constante -> CTEI ctei .)
    <               reduce using rule 72 (constante -> CTEI ctei .)
    >               reduce using rule 72 (constante -> CTEI ctei .)
    EQUALS          reduce using rule 72 (constante -> CTEI ctei .)
    DIFF            reduce using rule 72 (constante -> CTEI ctei .)
    LTHANEQ         reduce using rule 72 (constante -> CTEI ctei .)
    GTHANEQ         reduce using rule 72 (constante -> CTEI ctei .)
    AND             reduce using rule 72 (constante -> CTEI ctei .)
    OR              reduce using rule 72 (constante -> CTEI ctei .)
    ;               reduce using rule 72 (constante -> CTEI ctei .)
    ]               reduce using rule 72 (constante -> CTEI ctei .)
    )               reduce using rule 72 (constante -> CTEI ctei .)
    ,               reduce using rule 72 (constante -> CTEI ctei .)


state 124

    (38) for -> FOR ( id . = superexpresion ; superexpresion ) bloque

    =               shift and go to state 150


state 125

    (90) idp -> ( idpp . )

    )               shift and go to state 151


state 126

    (93) idpp -> superexpresion . idppp
    (95) idppp -> . , idpp
    (96) idppp -> . empty
    (97) empty -> .

    ,               shift and go to state 153
    )               reduce using rule 97 (empty -> .)

    idppp                          shift and go to state 152
    empty                          shift and go to state 154

state 127

    (94) idpp -> empty .

    )               reduce using rule 94 (idpp -> empty .)


state 128

    (91) idp -> [ superexpresion . ]

    ]               shift and go to state 155


state 129

    (44) asignacionp -> = superexpresion ; .

    IF              reduce using rule 44 (asignacionp -> = superexpresion ; .)
    WRITE           reduce using rule 44 (asignacionp -> = superexpresion ; .)
    WHILE           reduce using rule 44 (asignacionp -> = superexpresion ; .)
    RETURN          reduce using rule 44 (asignacionp -> = superexpresion ; .)
    FOR             reduce using rule 44 (asignacionp -> = superexpresion ; .)
    ID              reduce using rule 44 (asignacionp -> = superexpresion ; .)
    INT             reduce using rule 44 (asignacionp -> = superexpresion ; .)
    FLOAT           reduce using rule 44 (asignacionp -> = superexpresion ; .)
    CHAR            reduce using rule 44 (asignacionp -> = superexpresion ; .)
    }               reduce using rule 44 (asignacionp -> = superexpresion ; .)


state 130

    (45) asignacionp -> [ superexpresion ] . = superexpresion ;

    =               shift and go to state 156


state 131

    (25) condicion -> IF ( superexpresion ) . condicionAux bloque condicionelse
    (26) condicionAux -> .

    {               reduce using rule 26 (condicionAux -> .)

    condicionAux                   shift and go to state 157

state 132

    (30) write -> WRITE ( writep ) . ;

    ;               shift and go to state 158


state 133

    (31) writep -> superexpresion writepAux . writepp
    (35) writepp -> . , writeppAux writep
    (36) writepp -> . empty writeppAux
    (97) empty -> .

    ,               shift and go to state 160
    )               reduce using rule 97 (empty -> .)

    writepp                        shift and go to state 159
    empty                          shift and go to state 161

state 134

    (32) writep -> LETRERO writepAux2 . writepp
    (35) writepp -> . , writeppAux writep
    (36) writepp -> . empty writeppAux
    (97) empty -> .

    ,               shift and go to state 160
    )               reduce using rule 97 (empty -> .)

    writepp                        shift and go to state 162
    empty                          shift and go to state 161

state 135

    (39) while -> WHILE whileAux ( superexpresion . ) whileAux2 bloque

    )               shift and go to state 163


state 136

    (47) superexpresionp -> AND superexpresion .

    ;               reduce using rule 47 (superexpresionp -> AND superexpresion .)
    ]               reduce using rule 47 (superexpresionp -> AND superexpresion .)
    )               reduce using rule 47 (superexpresionp -> AND superexpresion .)
    ,               reduce using rule 47 (superexpresionp -> AND superexpresion .)


state 137

    (48) superexpresionp -> OR superexpresion .

    ;               reduce using rule 48 (superexpresionp -> OR superexpresion .)
    ]               reduce using rule 48 (superexpresionp -> OR superexpresion .)
    )               reduce using rule 48 (superexpresionp -> OR superexpresion .)
    ,               reduce using rule 48 (superexpresionp -> OR superexpresion .)


state 138

    (51) megaexpresionp -> < exp .

    AND             reduce using rule 51 (megaexpresionp -> < exp .)
    OR              reduce using rule 51 (megaexpresionp -> < exp .)
    ;               reduce using rule 51 (megaexpresionp -> < exp .)
    ]               reduce using rule 51 (megaexpresionp -> < exp .)
    )               reduce using rule 51 (megaexpresionp -> < exp .)
    ,               reduce using rule 51 (megaexpresionp -> < exp .)


state 139

    (52) megaexpresionp -> > exp .

    AND             reduce using rule 52 (megaexpresionp -> > exp .)
    OR              reduce using rule 52 (megaexpresionp -> > exp .)
    ;               reduce using rule 52 (megaexpresionp -> > exp .)
    ]               reduce using rule 52 (megaexpresionp -> > exp .)
    )               reduce using rule 52 (megaexpresionp -> > exp .)
    ,               reduce using rule 52 (megaexpresionp -> > exp .)


state 140

    (53) megaexpresionp -> EQUALS exp .

    AND             reduce using rule 53 (megaexpresionp -> EQUALS exp .)
    OR              reduce using rule 53 (megaexpresionp -> EQUALS exp .)
    ;               reduce using rule 53 (megaexpresionp -> EQUALS exp .)
    ]               reduce using rule 53 (megaexpresionp -> EQUALS exp .)
    )               reduce using rule 53 (megaexpresionp -> EQUALS exp .)
    ,               reduce using rule 53 (megaexpresionp -> EQUALS exp .)


state 141

    (54) megaexpresionp -> DIFF exp .

    AND             reduce using rule 54 (megaexpresionp -> DIFF exp .)
    OR              reduce using rule 54 (megaexpresionp -> DIFF exp .)
    ;               reduce using rule 54 (megaexpresionp -> DIFF exp .)
    ]               reduce using rule 54 (megaexpresionp -> DIFF exp .)
    )               reduce using rule 54 (megaexpresionp -> DIFF exp .)
    ,               reduce using rule 54 (megaexpresionp -> DIFF exp .)


state 142

    (55) megaexpresionp -> LTHANEQ exp .

    AND             reduce using rule 55 (megaexpresionp -> LTHANEQ exp .)
    OR              reduce using rule 55 (megaexpresionp -> LTHANEQ exp .)
    ;               reduce using rule 55 (megaexpresionp -> LTHANEQ exp .)
    ]               reduce using rule 55 (megaexpresionp -> LTHANEQ exp .)
    )               reduce using rule 55 (megaexpresionp -> LTHANEQ exp .)
    ,               reduce using rule 55 (megaexpresionp -> LTHANEQ exp .)


state 143

    (56) megaexpresionp -> GTHANEQ exp .

    AND             reduce using rule 56 (megaexpresionp -> GTHANEQ exp .)
    OR              reduce using rule 56 (megaexpresionp -> GTHANEQ exp .)
    ;               reduce using rule 56 (megaexpresionp -> GTHANEQ exp .)
    ]               reduce using rule 56 (megaexpresionp -> GTHANEQ exp .)
    )               reduce using rule 56 (megaexpresionp -> GTHANEQ exp .)
    ,               reduce using rule 56 (megaexpresionp -> GTHANEQ exp .)


state 144

    (59) expp -> + exp .

    <               reduce using rule 59 (expp -> + exp .)
    >               reduce using rule 59 (expp -> + exp .)
    EQUALS          reduce using rule 59 (expp -> + exp .)
    DIFF            reduce using rule 59 (expp -> + exp .)
    LTHANEQ         reduce using rule 59 (expp -> + exp .)
    GTHANEQ         reduce using rule 59 (expp -> + exp .)
    AND             reduce using rule 59 (expp -> + exp .)
    OR              reduce using rule 59 (expp -> + exp .)
    ;               reduce using rule 59 (expp -> + exp .)
    ]               reduce using rule 59 (expp -> + exp .)
    )               reduce using rule 59 (expp -> + exp .)
    ,               reduce using rule 59 (expp -> + exp .)


state 145

    (60) expp -> - exp .

    <               reduce using rule 60 (expp -> - exp .)
    >               reduce using rule 60 (expp -> - exp .)
    EQUALS          reduce using rule 60 (expp -> - exp .)
    DIFF            reduce using rule 60 (expp -> - exp .)
    LTHANEQ         reduce using rule 60 (expp -> - exp .)
    GTHANEQ         reduce using rule 60 (expp -> - exp .)
    AND             reduce using rule 60 (expp -> - exp .)
    OR              reduce using rule 60 (expp -> - exp .)
    ;               reduce using rule 60 (expp -> - exp .)
    ]               reduce using rule 60 (expp -> - exp .)
    )               reduce using rule 60 (expp -> - exp .)
    ,               reduce using rule 60 (expp -> - exp .)


state 146

    (63) terminop -> * termino .

    +               reduce using rule 63 (terminop -> * termino .)
    -               reduce using rule 63 (terminop -> * termino .)
    <               reduce using rule 63 (terminop -> * termino .)
    >               reduce using rule 63 (terminop -> * termino .)
    EQUALS          reduce using rule 63 (terminop -> * termino .)
    DIFF            reduce using rule 63 (terminop -> * termino .)
    LTHANEQ         reduce using rule 63 (terminop -> * termino .)
    GTHANEQ         reduce using rule 63 (terminop -> * termino .)
    AND             reduce using rule 63 (terminop -> * termino .)
    OR              reduce using rule 63 (terminop -> * termino .)
    ;               reduce using rule 63 (terminop -> * termino .)
    ]               reduce using rule 63 (terminop -> * termino .)
    )               reduce using rule 63 (terminop -> * termino .)
    ,               reduce using rule 63 (terminop -> * termino .)


state 147

    (64) terminop -> / termino .

    +               reduce using rule 64 (terminop -> / termino .)
    -               reduce using rule 64 (terminop -> / termino .)
    <               reduce using rule 64 (terminop -> / termino .)
    >               reduce using rule 64 (terminop -> / termino .)
    EQUALS          reduce using rule 64 (terminop -> / termino .)
    DIFF            reduce using rule 64 (terminop -> / termino .)
    LTHANEQ         reduce using rule 64 (terminop -> / termino .)
    GTHANEQ         reduce using rule 64 (terminop -> / termino .)
    AND             reduce using rule 64 (terminop -> / termino .)
    OR              reduce using rule 64 (terminop -> / termino .)
    ;               reduce using rule 64 (terminop -> / termino .)
    ]               reduce using rule 64 (terminop -> / termino .)
    )               reduce using rule 64 (terminop -> / termino .)
    ,               reduce using rule 64 (terminop -> / termino .)


state 148

    (67) factor -> lParen superexpresion rParen .

    *               reduce using rule 67 (factor -> lParen superexpresion rParen .)
    /               reduce using rule 67 (factor -> lParen superexpresion rParen .)
    +               reduce using rule 67 (factor -> lParen superexpresion rParen .)
    -               reduce using rule 67 (factor -> lParen superexpresion rParen .)
    <               reduce using rule 67 (factor -> lParen superexpresion rParen .)
    >               reduce using rule 67 (factor -> lParen superexpresion rParen .)
    EQUALS          reduce using rule 67 (factor -> lParen superexpresion rParen .)
    DIFF            reduce using rule 67 (factor -> lParen superexpresion rParen .)
    LTHANEQ         reduce using rule 67 (factor -> lParen superexpresion rParen .)
    GTHANEQ         reduce using rule 67 (factor -> lParen superexpresion rParen .)
    AND             reduce using rule 67 (factor -> lParen superexpresion rParen .)
    OR              reduce using rule 67 (factor -> lParen superexpresion rParen .)
    ;               reduce using rule 67 (factor -> lParen superexpresion rParen .)
    ]               reduce using rule 67 (factor -> lParen superexpresion rParen .)
    )               reduce using rule 67 (factor -> lParen superexpresion rParen .)
    ,               reduce using rule 67 (factor -> lParen superexpresion rParen .)


state 149

    (69) rParen -> ) .

    *               reduce using rule 69 (rParen -> ) .)
    /               reduce using rule 69 (rParen -> ) .)
    +               reduce using rule 69 (rParen -> ) .)
    -               reduce using rule 69 (rParen -> ) .)
    <               reduce using rule 69 (rParen -> ) .)
    >               reduce using rule 69 (rParen -> ) .)
    EQUALS          reduce using rule 69 (rParen -> ) .)
    DIFF            reduce using rule 69 (rParen -> ) .)
    LTHANEQ         reduce using rule 69 (rParen -> ) .)
    GTHANEQ         reduce using rule 69 (rParen -> ) .)
    AND             reduce using rule 69 (rParen -> ) .)
    OR              reduce using rule 69 (rParen -> ) .)
    ;               reduce using rule 69 (rParen -> ) .)
    ]               reduce using rule 69 (rParen -> ) .)
    )               reduce using rule 69 (rParen -> ) .)
    ,               reduce using rule 69 (rParen -> ) .)


state 150

    (38) for -> FOR ( id = . superexpresion ; superexpresion ) bloque
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    id                             shift and go to state 83
    superexpresion                 shift and go to state 164
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82

state 151

    (90) idp -> ( idpp ) .

    =               reduce using rule 90 (idp -> ( idpp ) .)
    [               reduce using rule 90 (idp -> ( idpp ) .)
    *               reduce using rule 90 (idp -> ( idpp ) .)
    /               reduce using rule 90 (idp -> ( idpp ) .)
    +               reduce using rule 90 (idp -> ( idpp ) .)
    -               reduce using rule 90 (idp -> ( idpp ) .)
    <               reduce using rule 90 (idp -> ( idpp ) .)
    >               reduce using rule 90 (idp -> ( idpp ) .)
    EQUALS          reduce using rule 90 (idp -> ( idpp ) .)
    DIFF            reduce using rule 90 (idp -> ( idpp ) .)
    LTHANEQ         reduce using rule 90 (idp -> ( idpp ) .)
    GTHANEQ         reduce using rule 90 (idp -> ( idpp ) .)
    AND             reduce using rule 90 (idp -> ( idpp ) .)
    OR              reduce using rule 90 (idp -> ( idpp ) .)
    ;               reduce using rule 90 (idp -> ( idpp ) .)
    ]               reduce using rule 90 (idp -> ( idpp ) .)
    )               reduce using rule 90 (idp -> ( idpp ) .)
    ,               reduce using rule 90 (idp -> ( idpp ) .)


state 152

    (93) idpp -> superexpresion idppp .

    )               reduce using rule 93 (idpp -> superexpresion idppp .)


state 153

    (95) idppp -> , . idpp
    (93) idpp -> . superexpresion idppp
    (94) idpp -> . empty
    (46) superexpresion -> . megaexpresion superexpresionp
    (97) empty -> .
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    )               reduce using rule 97 (empty -> .)
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    idpp                           shift and go to state 165
    superexpresion                 shift and go to state 126
    empty                          shift and go to state 127
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 154

    (96) idppp -> empty .

    )               reduce using rule 96 (idppp -> empty .)


state 155

    (91) idp -> [ superexpresion ] .

    =               reduce using rule 91 (idp -> [ superexpresion ] .)
    [               reduce using rule 91 (idp -> [ superexpresion ] .)
    *               reduce using rule 91 (idp -> [ superexpresion ] .)
    /               reduce using rule 91 (idp -> [ superexpresion ] .)
    +               reduce using rule 91 (idp -> [ superexpresion ] .)
    -               reduce using rule 91 (idp -> [ superexpresion ] .)
    <               reduce using rule 91 (idp -> [ superexpresion ] .)
    >               reduce using rule 91 (idp -> [ superexpresion ] .)
    EQUALS          reduce using rule 91 (idp -> [ superexpresion ] .)
    DIFF            reduce using rule 91 (idp -> [ superexpresion ] .)
    LTHANEQ         reduce using rule 91 (idp -> [ superexpresion ] .)
    GTHANEQ         reduce using rule 91 (idp -> [ superexpresion ] .)
    AND             reduce using rule 91 (idp -> [ superexpresion ] .)
    OR              reduce using rule 91 (idp -> [ superexpresion ] .)
    ;               reduce using rule 91 (idp -> [ superexpresion ] .)
    ]               reduce using rule 91 (idp -> [ superexpresion ] .)
    )               reduce using rule 91 (idp -> [ superexpresion ] .)
    ,               reduce using rule 91 (idp -> [ superexpresion ] .)


state 156

    (45) asignacionp -> [ superexpresion ] = . superexpresion ;
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    superexpresion                 shift and go to state 166
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 157

    (25) condicion -> IF ( superexpresion ) condicionAux . bloque condicionelse
    (13) bloque -> . { cuerpo }

    {               shift and go to state 40

    bloque                         shift and go to state 167

state 158

    (30) write -> WRITE ( writep ) ; .

    IF              reduce using rule 30 (write -> WRITE ( writep ) ; .)
    WRITE           reduce using rule 30 (write -> WRITE ( writep ) ; .)
    WHILE           reduce using rule 30 (write -> WRITE ( writep ) ; .)
    RETURN          reduce using rule 30 (write -> WRITE ( writep ) ; .)
    FOR             reduce using rule 30 (write -> WRITE ( writep ) ; .)
    ID              reduce using rule 30 (write -> WRITE ( writep ) ; .)
    INT             reduce using rule 30 (write -> WRITE ( writep ) ; .)
    FLOAT           reduce using rule 30 (write -> WRITE ( writep ) ; .)
    CHAR            reduce using rule 30 (write -> WRITE ( writep ) ; .)
    }               reduce using rule 30 (write -> WRITE ( writep ) ; .)


state 159

    (31) writep -> superexpresion writepAux writepp .

    )               reduce using rule 31 (writep -> superexpresion writepAux writepp .)


state 160

    (35) writepp -> , . writeppAux writep
    (37) writeppAux -> .

    LETRERO         reduce using rule 37 (writeppAux -> .)
    CTEF            reduce using rule 37 (writeppAux -> .)
    CTEI            reduce using rule 37 (writeppAux -> .)
    (               reduce using rule 37 (writeppAux -> .)
    ID              reduce using rule 37 (writeppAux -> .)

    writeppAux                     shift and go to state 168

state 161

    (36) writepp -> empty . writeppAux
    (37) writeppAux -> .

    )               reduce using rule 37 (writeppAux -> .)

    writeppAux                     shift and go to state 169

state 162

    (32) writep -> LETRERO writepAux2 writepp .

    )               reduce using rule 32 (writep -> LETRERO writepAux2 writepp .)


state 163

    (39) while -> WHILE whileAux ( superexpresion ) . whileAux2 bloque
    (41) whileAux2 -> .

    {               reduce using rule 41 (whileAux2 -> .)

    whileAux2                      shift and go to state 170

state 164

    (38) for -> FOR ( id = superexpresion . ; superexpresion ) bloque

    ;               shift and go to state 171


state 165

    (95) idppp -> , idpp .

    )               reduce using rule 95 (idppp -> , idpp .)


state 166

    (45) asignacionp -> [ superexpresion ] = superexpresion . ;

    ;               shift and go to state 172


state 167

    (25) condicion -> IF ( superexpresion ) condicionAux bloque . condicionelse
    (27) condicionelse -> . ELSE condicionelseAux bloque
    (28) condicionelse -> . empty
    (97) empty -> .

    ELSE            shift and go to state 174
    IF              reduce using rule 97 (empty -> .)
    WRITE           reduce using rule 97 (empty -> .)
    WHILE           reduce using rule 97 (empty -> .)
    RETURN          reduce using rule 97 (empty -> .)
    FOR             reduce using rule 97 (empty -> .)
    ID              reduce using rule 97 (empty -> .)
    INT             reduce using rule 97 (empty -> .)
    FLOAT           reduce using rule 97 (empty -> .)
    CHAR            reduce using rule 97 (empty -> .)
    }               reduce using rule 97 (empty -> .)

    condicionelse                  shift and go to state 173
    empty                          shift and go to state 175

state 168

    (35) writepp -> , writeppAux . writep
    (31) writep -> . superexpresion writepAux writepp
    (32) writep -> . LETRERO writepAux2 writepp
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    LETRERO         shift and go to state 98
    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    writep                         shift and go to state 176
    superexpresion                 shift and go to state 97
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82
    id                             shift and go to state 83

state 169

    (36) writepp -> empty writeppAux .

    )               reduce using rule 36 (writepp -> empty writeppAux .)


state 170

    (39) while -> WHILE whileAux ( superexpresion ) whileAux2 . bloque
    (13) bloque -> . { cuerpo }

    {               shift and go to state 40

    bloque                         shift and go to state 177

state 171

    (38) for -> FOR ( id = superexpresion ; . superexpresion ) bloque
    (46) superexpresion -> . megaexpresion superexpresionp
    (50) megaexpresion -> . exp megaexpresionp
    (58) exp -> . termino expp
    (62) termino -> . factor terminop
    (66) factor -> . constante
    (67) factor -> . lParen superexpresion rParen
    (70) constante -> . id
    (71) constante -> . CTEF ctef
    (72) constante -> . CTEI ctei
    (68) lParen -> . (
    (89) id -> . ID idp

    CTEF            shift and go to state 84
    CTEI            shift and go to state 85
    (               shift and go to state 86
    ID              shift and go to state 66

    id                             shift and go to state 83
    superexpresion                 shift and go to state 178
    megaexpresion                  shift and go to state 77
    exp                            shift and go to state 78
    termino                        shift and go to state 79
    factor                         shift and go to state 80
    constante                      shift and go to state 81
    lParen                         shift and go to state 82

state 172

    (45) asignacionp -> [ superexpresion ] = superexpresion ; .

    IF              reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    WRITE           reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    WHILE           reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    RETURN          reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    FOR             reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    ID              reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    INT             reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    FLOAT           reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    CHAR            reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    }               reduce using rule 45 (asignacionp -> [ superexpresion ] = superexpresion ; .)


state 173

    (25) condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .

    IF              reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    WRITE           reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    WHILE           reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    RETURN          reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    FOR             reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    ID              reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    INT             reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    FLOAT           reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    CHAR            reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    }               reduce using rule 25 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)


state 174

    (27) condicionelse -> ELSE . condicionelseAux bloque
    (29) condicionelseAux -> .

    {               reduce using rule 29 (condicionelseAux -> .)

    condicionelseAux               shift and go to state 179

state 175

    (28) condicionelse -> empty .

    IF              reduce using rule 28 (condicionelse -> empty .)
    WRITE           reduce using rule 28 (condicionelse -> empty .)
    WHILE           reduce using rule 28 (condicionelse -> empty .)
    RETURN          reduce using rule 28 (condicionelse -> empty .)
    FOR             reduce using rule 28 (condicionelse -> empty .)
    ID              reduce using rule 28 (condicionelse -> empty .)
    INT             reduce using rule 28 (condicionelse -> empty .)
    FLOAT           reduce using rule 28 (condicionelse -> empty .)
    CHAR            reduce using rule 28 (condicionelse -> empty .)
    }               reduce using rule 28 (condicionelse -> empty .)


state 176

    (35) writepp -> , writeppAux writep .

    )               reduce using rule 35 (writepp -> , writeppAux writep .)


state 177

    (39) while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .

    IF              reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    WRITE           reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    WHILE           reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    RETURN          reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    FOR             reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    ID              reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    INT             reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    FLOAT           reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    CHAR            reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    }               reduce using rule 39 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)


state 178

    (38) for -> FOR ( id = superexpresion ; superexpresion . ) bloque

    )               shift and go to state 180


state 179

    (27) condicionelse -> ELSE condicionelseAux . bloque
    (13) bloque -> . { cuerpo }

    {               shift and go to state 40

    bloque                         shift and go to state 181

state 180

    (38) for -> FOR ( id = superexpresion ; superexpresion ) . bloque
    (13) bloque -> . { cuerpo }

    {               shift and go to state 40

    bloque                         shift and go to state 182

state 181

    (27) condicionelse -> ELSE condicionelseAux bloque .

    IF              reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)
    WRITE           reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)
    WHILE           reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)
    RETURN          reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)
    FOR             reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)
    ID              reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)
    INT             reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)
    FLOAT           reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)
    CHAR            reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)
    }               reduce using rule 27 (condicionelse -> ELSE condicionelseAux bloque .)


state 182

    (38) for -> FOR ( id = superexpresion ; superexpresion ) bloque .

    IF              reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    WRITE           reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    WHILE           reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    RETURN          reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    FOR             reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    ID              reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    INT             reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    FLOAT           reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    CHAR            reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    }               reduce using rule 38 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 12 resolved as shift
WARNING: shift/reduce conflict for INT in state 24 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 24 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 24 resolved as shift
WARNING: shift/reduce conflict for INT in state 40 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 40 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 40 resolved as shift
WARNING: shift/reduce conflict for IF in state 44 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 44 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 44 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 44 resolved as shift
WARNING: shift/reduce conflict for FOR in state 44 resolved as shift
WARNING: shift/reduce conflict for ID in state 44 resolved as shift
WARNING: shift/reduce conflict for INT in state 44 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 44 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 44 resolved as shift
WARNING: shift/reduce conflict for IF in state 52 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 52 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 52 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 52 resolved as shift
WARNING: shift/reduce conflict for FOR in state 52 resolved as shift
WARNING: shift/reduce conflict for ID in state 52 resolved as shift
WARNING: shift/reduce conflict for INT in state 52 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 52 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 52 resolved as shift
WARNING: shift/reduce conflict for [ in state 66 resolved as shift
WARNING: reduce/reduce conflict in state 13 resolved using rule (programaF -> empty)
WARNING: rejected rule (function -> empty) in state 13
WARNING: reduce/reduce conflict in state 53 resolved using rule (estatutop -> empty)
WARNING: rejected rule (estatuto -> empty) in state 53
WARNING: reduce/reduce conflict in state 53 resolved using rule (estatuto -> empty)
WARNING: rejected rule (varsp -> empty) in state 53
WARNING: reduce/reduce conflict in state 53 resolved using rule (estatutop -> empty)
WARNING: rejected rule (varsp -> empty) in state 53
