Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PROGRAMA

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ID primerCuad ; vars programaF main
Rule 2     primerCuad -> <empty>
Rule 3     main -> MAIN llenarCuad ( ) bloque
Rule 4     llenarCuad -> <empty>
Rule 5     programaF -> function programaF
Rule 6     programaF -> empty
Rule 7     function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
Rule 8     function -> empty
Rule 9     functionAux -> <empty>
Rule 10    functionAux2 -> <empty>
Rule 11    tipoRetorno -> INT
Rule 12    tipoRetorno -> FLOAT
Rule 13    tipoRetorno -> VOID
Rule 14    bloque -> { cuerpo }
Rule 15    cuerpo -> vars estatutop
Rule 16    estatutop -> estatuto estatutop
Rule 17    estatutop -> empty
Rule 18    estatuto -> asignacion
Rule 19    estatuto -> condicion
Rule 20    estatuto -> write
Rule 21    estatuto -> while
Rule 22    estatuto -> return
Rule 23    estatuto -> for
Rule 24    estatuto -> empty
Rule 25    return -> RETURN superexpresion ;
Rule 26    condicion -> IF ( superexpresion ) condicionAux bloque condicionelse
Rule 27    condicionAux -> <empty>
Rule 28    condicionelse -> ELSE condicionelseAux bloque
Rule 29    condicionelse -> empty
Rule 30    condicionelseAux -> <empty>
Rule 31    write -> WRITE ( writep ) ;
Rule 32    writep -> superexpresion writepAux writepp
Rule 33    writep -> LETRERO writepAux2 writepp
Rule 34    writepAux -> <empty>
Rule 35    writepAux2 -> <empty>
Rule 36    writepp -> , writeppAux writep
Rule 37    writepp -> empty writeppAux
Rule 38    writeppAux -> <empty>
Rule 39    for -> FOR ( id = superexpresion ; superexpresion ) bloque
Rule 40    while -> WHILE whileAux ( superexpresion ) whileAux2 bloque
Rule 41    whileAux -> <empty>
Rule 42    whileAux2 -> <empty>
Rule 43    asignacion -> vars
Rule 44    asignacion -> id asignacionp
Rule 45    asignacionp -> = superexpresion ;
Rule 46    asignacionp -> [ superexpresion ] = superexpresion ;
Rule 47    superexpresion -> megaexpresion superexpresionp
Rule 48    superexpresionp -> AND superexpresion
Rule 49    superexpresionp -> OR superexpresion
Rule 50    superexpresionp -> empty
Rule 51    megaexpresion -> exp megaexpresionp
Rule 52    megaexpresionp -> < exp
Rule 53    megaexpresionp -> > exp
Rule 54    megaexpresionp -> EQUALS exp
Rule 55    megaexpresionp -> DIFF exp
Rule 56    megaexpresionp -> LTHANEQ exp
Rule 57    megaexpresionp -> GTHANEQ exp
Rule 58    megaexpresionp -> empty
Rule 59    exp -> termino expp
Rule 60    expp -> + pAppT exp
Rule 61    expp -> - pAppT exp
Rule 62    expp -> empty
Rule 63    pAppT -> <empty>
Rule 64    termino -> factor terminop
Rule 65    terminop -> * pAppF termino
Rule 66    terminop -> / pAppF termino
Rule 67    terminop -> empty
Rule 68    pAppF -> <empty>
Rule 69    factor -> constante
Rule 70    factor -> lParen superexpresion rParen
Rule 71    lParen -> (
Rule 72    rParen -> )
Rule 73    constante -> id
Rule 74    constante -> CTEF ctef
Rule 75    constante -> CTEI ctei
Rule 76    ctef -> <empty>
Rule 77    ctei -> <empty>
Rule 78    functionParam -> parametro
Rule 79    functionParam -> empty
Rule 80    parametro -> tipo ID parametrop
Rule 81    parametrop -> , parametro
Rule 82    parametrop -> empty
Rule 83    vars -> varsp
Rule 84    varsp -> tipo varspp ; varsp
Rule 85    varsp -> empty
Rule 86    varspp -> ID varsppp
Rule 87    varsppp -> , varspp
Rule 88    varsppp -> empty
Rule 89    tipo -> INT
Rule 90    tipo -> FLOAT
Rule 91    tipo -> CHAR
Rule 92    id -> ID idp
Rule 93    idp -> ( idpp )
Rule 94    idp -> [ superexpresion ]
Rule 95    idp -> empty
Rule 96    idpp -> superexpresion idppp
Rule 97    idpp -> empty
Rule 98    idppp -> , idpp
Rule 99    idppp -> empty
Rule 100   empty -> <empty>

Terminals, with rules where they appear

(                    : 3 7 26 31 39 40 71 93
)                    : 3 7 26 31 39 40 72 93
*                    : 65
+                    : 60
,                    : 36 81 87 98
-                    : 61
/                    : 66
;                    : 1 25 31 39 45 46 84
<                    : 52
=                    : 39 45 46
>                    : 53
AND                  : 48
CHAR                 : 91
CTEF                 : 74
CTEI                 : 75
DIFF                 : 55
ELSE                 : 28
EQUALS               : 54
FLOAT                : 12 90
FOR                  : 39
FUNCTION             : 7
GTHANEQ              : 57
ID                   : 1 7 80 86 92
IF                   : 26
INT                  : 11 89
LETRERO              : 33
LTHANEQ              : 56
MAIN                 : 3
OR                   : 49
PROGRAMA             : 
RETURN               : 25
VOID                 : 13
WHILE                : 40
WRITE                : 31
[                    : 46 94
]                    : 46 94
error                : 
{                    : 14
}                    : 14

Nonterminals, with rules where they appear

asignacion           : 18
asignacionp          : 44
bloque               : 3 7 26 28 39 40
condicion            : 19
condicionAux         : 26
condicionelse        : 26
condicionelseAux     : 28
constante            : 69
ctef                 : 74
ctei                 : 75
cuerpo               : 14
empty                : 6 8 17 24 29 37 50 58 62 67 79 82 85 88 95 97 99
estatuto             : 16
estatutop            : 15 16
exp                  : 51 52 53 54 55 56 57 60 61
expp                 : 59
factor               : 64
for                  : 23
function             : 5
functionAux          : 7
functionAux2         : 7
functionParam        : 7
id                   : 39 44 73
idp                  : 92
idpp                 : 93 98
idppp                : 96
lParen               : 70
llenarCuad           : 3
main                 : 1
megaexpresion        : 47
megaexpresionp       : 51
pAppF                : 65 66
pAppT                : 60 61
parametro            : 78 81
parametrop           : 80
primerCuad           : 1
programa             : 0
programaF            : 1 5
rParen               : 70
return               : 22
superexpresion       : 25 26 32 39 39 40 45 46 46 48 49 70 94 96
superexpresionp      : 47
termino              : 59 65 66
terminop             : 64
tipo                 : 80 84
tipoRetorno          : 7
vars                 : 1 15 43
varsp                : 83 84
varspp               : 84 87
varsppp              : 86
while                : 21
whileAux             : 40
whileAux2            : 40
write                : 20
writep               : 31 36
writepAux            : 32
writepAux2           : 33
writepp              : 32 33
writeppAux           : 36 37

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ID primerCuad ; vars programaF main

    ID              shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> ID . primerCuad ; vars programaF main
    (2) primerCuad -> .

    ;               reduce using rule 2 (primerCuad -> .)

    primerCuad                     shift and go to state 3

state 3

    (1) programa -> ID primerCuad . ; vars programaF main

    ;               shift and go to state 4


state 4

    (1) programa -> ID primerCuad ; . vars programaF main
    (83) vars -> . varsp
    (84) varsp -> . tipo varspp ; varsp
    (85) varsp -> . empty
    (89) tipo -> . INT
    (90) tipo -> . FLOAT
    (91) tipo -> . CHAR
    (100) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    FUNCTION        reduce using rule 100 (empty -> .)
    MAIN            reduce using rule 100 (empty -> .)

    vars                           shift and go to state 5
    varsp                          shift and go to state 6
    tipo                           shift and go to state 7
    empty                          shift and go to state 8

state 5

    (1) programa -> ID primerCuad ; vars . programaF main
    (5) programaF -> . function programaF
    (6) programaF -> . empty
    (7) function -> . FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
    (8) function -> . empty
    (100) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 100 (empty -> .)

  ! FUNCTION        [ reduce using rule 100 (empty -> .) ]

    programaF                      shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 6

    (83) vars -> varsp .

    FUNCTION        reduce using rule 83 (vars -> varsp .)
    MAIN            reduce using rule 83 (vars -> varsp .)
    IF              reduce using rule 83 (vars -> varsp .)
    WRITE           reduce using rule 83 (vars -> varsp .)
    WHILE           reduce using rule 83 (vars -> varsp .)
    RETURN          reduce using rule 83 (vars -> varsp .)
    FOR             reduce using rule 83 (vars -> varsp .)
    ID              reduce using rule 83 (vars -> varsp .)
    INT             reduce using rule 83 (vars -> varsp .)
    FLOAT           reduce using rule 83 (vars -> varsp .)
    CHAR            reduce using rule 83 (vars -> varsp .)
    }               reduce using rule 83 (vars -> varsp .)


state 7

    (84) varsp -> tipo . varspp ; varsp
    (86) varspp -> . ID varsppp

    ID              shift and go to state 17

    varspp                         shift and go to state 16

state 8

    (85) varsp -> empty .

    FUNCTION        reduce using rule 85 (varsp -> empty .)
    MAIN            reduce using rule 85 (varsp -> empty .)
    IF              reduce using rule 85 (varsp -> empty .)
    WRITE           reduce using rule 85 (varsp -> empty .)
    WHILE           reduce using rule 85 (varsp -> empty .)
    RETURN          reduce using rule 85 (varsp -> empty .)
    FOR             reduce using rule 85 (varsp -> empty .)
    ID              reduce using rule 85 (varsp -> empty .)
    INT             reduce using rule 85 (varsp -> empty .)
    FLOAT           reduce using rule 85 (varsp -> empty .)
    CHAR            reduce using rule 85 (varsp -> empty .)
    }               reduce using rule 85 (varsp -> empty .)


state 9

    (89) tipo -> INT .

    ID              reduce using rule 89 (tipo -> INT .)


state 10

    (90) tipo -> FLOAT .

    ID              reduce using rule 90 (tipo -> FLOAT .)


state 11

    (91) tipo -> CHAR .

    ID              reduce using rule 91 (tipo -> CHAR .)


state 12

    (1) programa -> ID primerCuad ; vars programaF . main
    (3) main -> . MAIN llenarCuad ( ) bloque

    MAIN            shift and go to state 19

    main                           shift and go to state 18

state 13

    (5) programaF -> function . programaF
    (5) programaF -> . function programaF
    (6) programaF -> . empty
    (7) function -> . FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
    (8) function -> . empty
    (100) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 100 (empty -> .)

  ! FUNCTION        [ reduce using rule 100 (empty -> .) ]

    function                       shift and go to state 13
    programaF                      shift and go to state 20
    empty                          shift and go to state 14

state 14

    (6) programaF -> empty .
    (8) function -> empty .

  ! reduce/reduce conflict for MAIN resolved using rule 6 (programaF -> empty .)
    MAIN            reduce using rule 6 (programaF -> empty .)
    FUNCTION        reduce using rule 8 (function -> empty .)

  ! MAIN            [ reduce using rule 8 (function -> empty .) ]


state 15

    (7) function -> FUNCTION . tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
    (11) tipoRetorno -> . INT
    (12) tipoRetorno -> . FLOAT
    (13) tipoRetorno -> . VOID

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    VOID            shift and go to state 24

    tipoRetorno                    shift and go to state 21

state 16

    (84) varsp -> tipo varspp . ; varsp

    ;               shift and go to state 25


state 17

    (86) varspp -> ID . varsppp
    (87) varsppp -> . , varspp
    (88) varsppp -> . empty
    (100) empty -> .

    ,               shift and go to state 27
    ;               reduce using rule 100 (empty -> .)

    varsppp                        shift and go to state 26
    empty                          shift and go to state 28

state 18

    (1) programa -> ID primerCuad ; vars programaF main .

    $end            reduce using rule 1 (programa -> ID primerCuad ; vars programaF main .)


state 19

    (3) main -> MAIN . llenarCuad ( ) bloque
    (4) llenarCuad -> .

    (               reduce using rule 4 (llenarCuad -> .)

    llenarCuad                     shift and go to state 29

state 20

    (5) programaF -> function programaF .

    MAIN            reduce using rule 5 (programaF -> function programaF .)


state 21

    (7) function -> FUNCTION tipoRetorno . ID ( functionParam ) functionAux bloque functionAux2

    ID              shift and go to state 30


state 22

    (11) tipoRetorno -> INT .

    ID              reduce using rule 11 (tipoRetorno -> INT .)


state 23

    (12) tipoRetorno -> FLOAT .

    ID              reduce using rule 12 (tipoRetorno -> FLOAT .)


state 24

    (13) tipoRetorno -> VOID .

    ID              reduce using rule 13 (tipoRetorno -> VOID .)


state 25

    (84) varsp -> tipo varspp ; . varsp
    (84) varsp -> . tipo varspp ; varsp
    (85) varsp -> . empty
    (89) tipo -> . INT
    (90) tipo -> . FLOAT
    (91) tipo -> . CHAR
    (100) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    FUNCTION        reduce using rule 100 (empty -> .)
    MAIN            reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    WRITE           reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)

  ! INT             [ reduce using rule 100 (empty -> .) ]
  ! FLOAT           [ reduce using rule 100 (empty -> .) ]
  ! CHAR            [ reduce using rule 100 (empty -> .) ]

    tipo                           shift and go to state 7
    varsp                          shift and go to state 31
    empty                          shift and go to state 8

state 26

    (86) varspp -> ID varsppp .

    ;               reduce using rule 86 (varspp -> ID varsppp .)


state 27

    (87) varsppp -> , . varspp
    (86) varspp -> . ID varsppp

    ID              shift and go to state 17

    varspp                         shift and go to state 32

state 28

    (88) varsppp -> empty .

    ;               reduce using rule 88 (varsppp -> empty .)


state 29

    (3) main -> MAIN llenarCuad . ( ) bloque

    (               shift and go to state 33


state 30

    (7) function -> FUNCTION tipoRetorno ID . ( functionParam ) functionAux bloque functionAux2

    (               shift and go to state 34


state 31

    (84) varsp -> tipo varspp ; varsp .

    FUNCTION        reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    MAIN            reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    IF              reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    WRITE           reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    WHILE           reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    RETURN          reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    FOR             reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    ID              reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    INT             reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    FLOAT           reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    CHAR            reduce using rule 84 (varsp -> tipo varspp ; varsp .)
    }               reduce using rule 84 (varsp -> tipo varspp ; varsp .)


state 32

    (87) varsppp -> , varspp .

    ;               reduce using rule 87 (varsppp -> , varspp .)


state 33

    (3) main -> MAIN llenarCuad ( . ) bloque

    )               shift and go to state 35


state 34

    (7) function -> FUNCTION tipoRetorno ID ( . functionParam ) functionAux bloque functionAux2
    (78) functionParam -> . parametro
    (79) functionParam -> . empty
    (80) parametro -> . tipo ID parametrop
    (100) empty -> .
    (89) tipo -> . INT
    (90) tipo -> . FLOAT
    (91) tipo -> . CHAR

    )               reduce using rule 100 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    functionParam                  shift and go to state 36
    parametro                      shift and go to state 37
    empty                          shift and go to state 38
    tipo                           shift and go to state 39

state 35

    (3) main -> MAIN llenarCuad ( ) . bloque
    (14) bloque -> . { cuerpo }

    {               shift and go to state 41

    bloque                         shift and go to state 40

state 36

    (7) function -> FUNCTION tipoRetorno ID ( functionParam . ) functionAux bloque functionAux2

    )               shift and go to state 42


state 37

    (78) functionParam -> parametro .

    )               reduce using rule 78 (functionParam -> parametro .)


state 38

    (79) functionParam -> empty .

    )               reduce using rule 79 (functionParam -> empty .)


state 39

    (80) parametro -> tipo . ID parametrop

    ID              shift and go to state 43


state 40

    (3) main -> MAIN llenarCuad ( ) bloque .

    $end            reduce using rule 3 (main -> MAIN llenarCuad ( ) bloque .)


state 41

    (14) bloque -> { . cuerpo }
    (15) cuerpo -> . vars estatutop
    (83) vars -> . varsp
    (84) varsp -> . tipo varspp ; varsp
    (85) varsp -> . empty
    (89) tipo -> . INT
    (90) tipo -> . FLOAT
    (91) tipo -> . CHAR
    (100) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    IF              reduce using rule 100 (empty -> .)
    WRITE           reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)

  ! INT             [ reduce using rule 100 (empty -> .) ]
  ! FLOAT           [ reduce using rule 100 (empty -> .) ]
  ! CHAR            [ reduce using rule 100 (empty -> .) ]

    cuerpo                         shift and go to state 44
    vars                           shift and go to state 45
    varsp                          shift and go to state 6
    tipo                           shift and go to state 7
    empty                          shift and go to state 8

state 42

    (7) function -> FUNCTION tipoRetorno ID ( functionParam ) . functionAux bloque functionAux2
    (9) functionAux -> .

    {               reduce using rule 9 (functionAux -> .)

    functionAux                    shift and go to state 46

state 43

    (80) parametro -> tipo ID . parametrop
    (81) parametrop -> . , parametro
    (82) parametrop -> . empty
    (100) empty -> .

    ,               shift and go to state 48
    )               reduce using rule 100 (empty -> .)

    parametrop                     shift and go to state 47
    empty                          shift and go to state 49

state 44

    (14) bloque -> { cuerpo . }

    }               shift and go to state 50


state 45

    (15) cuerpo -> vars . estatutop
    (16) estatutop -> . estatuto estatutop
    (17) estatutop -> . empty
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . write
    (21) estatuto -> . while
    (22) estatuto -> . return
    (23) estatuto -> . for
    (24) estatuto -> . empty
    (100) empty -> .
    (43) asignacion -> . vars
    (44) asignacion -> . id asignacionp
    (26) condicion -> . IF ( superexpresion ) condicionAux bloque condicionelse
    (31) write -> . WRITE ( writep ) ;
    (40) while -> . WHILE whileAux ( superexpresion ) whileAux2 bloque
    (25) return -> . RETURN superexpresion ;
    (39) for -> . FOR ( id = superexpresion ; superexpresion ) bloque
    (83) vars -> . varsp
    (92) id -> . ID idp
    (84) varsp -> . tipo varspp ; varsp
    (85) varsp -> . empty
    (89) tipo -> . INT
    (90) tipo -> . FLOAT
    (91) tipo -> . CHAR

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    }               reduce using rule 100 (empty -> .)
    IF              shift and go to state 62
    WRITE           shift and go to state 63
    WHILE           shift and go to state 64
    RETURN          shift and go to state 65
    FOR             shift and go to state 66
    ID              shift and go to state 67
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! INT             [ reduce using rule 100 (empty -> .) ]
  ! FLOAT           [ reduce using rule 100 (empty -> .) ]
  ! CHAR            [ reduce using rule 100 (empty -> .) ]

    vars                           shift and go to state 51
    estatutop                      shift and go to state 52
    estatuto                       shift and go to state 53
    empty                          shift and go to state 54
    asignacion                     shift and go to state 55
    condicion                      shift and go to state 56
    write                          shift and go to state 57
    while                          shift and go to state 58
    return                         shift and go to state 59
    for                            shift and go to state 60
    id                             shift and go to state 61
    varsp                          shift and go to state 6
    tipo                           shift and go to state 7

state 46

    (7) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux . bloque functionAux2
    (14) bloque -> . { cuerpo }

    {               shift and go to state 41

    bloque                         shift and go to state 68

state 47

    (80) parametro -> tipo ID parametrop .

    )               reduce using rule 80 (parametro -> tipo ID parametrop .)


state 48

    (81) parametrop -> , . parametro
    (80) parametro -> . tipo ID parametrop
    (89) tipo -> . INT
    (90) tipo -> . FLOAT
    (91) tipo -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    parametro                      shift and go to state 69
    tipo                           shift and go to state 39

state 49

    (82) parametrop -> empty .

    )               reduce using rule 82 (parametrop -> empty .)


state 50

    (14) bloque -> { cuerpo } .

    $end            reduce using rule 14 (bloque -> { cuerpo } .)
    FUNCTION        reduce using rule 14 (bloque -> { cuerpo } .)
    MAIN            reduce using rule 14 (bloque -> { cuerpo } .)
    ELSE            reduce using rule 14 (bloque -> { cuerpo } .)
    IF              reduce using rule 14 (bloque -> { cuerpo } .)
    WRITE           reduce using rule 14 (bloque -> { cuerpo } .)
    WHILE           reduce using rule 14 (bloque -> { cuerpo } .)
    RETURN          reduce using rule 14 (bloque -> { cuerpo } .)
    FOR             reduce using rule 14 (bloque -> { cuerpo } .)
    ID              reduce using rule 14 (bloque -> { cuerpo } .)
    INT             reduce using rule 14 (bloque -> { cuerpo } .)
    FLOAT           reduce using rule 14 (bloque -> { cuerpo } .)
    CHAR            reduce using rule 14 (bloque -> { cuerpo } .)
    }               reduce using rule 14 (bloque -> { cuerpo } .)


state 51

    (43) asignacion -> vars .

    IF              reduce using rule 43 (asignacion -> vars .)
    WRITE           reduce using rule 43 (asignacion -> vars .)
    WHILE           reduce using rule 43 (asignacion -> vars .)
    RETURN          reduce using rule 43 (asignacion -> vars .)
    FOR             reduce using rule 43 (asignacion -> vars .)
    ID              reduce using rule 43 (asignacion -> vars .)
    INT             reduce using rule 43 (asignacion -> vars .)
    FLOAT           reduce using rule 43 (asignacion -> vars .)
    CHAR            reduce using rule 43 (asignacion -> vars .)
    }               reduce using rule 43 (asignacion -> vars .)


state 52

    (15) cuerpo -> vars estatutop .

    }               reduce using rule 15 (cuerpo -> vars estatutop .)


state 53

    (16) estatutop -> estatuto . estatutop
    (16) estatutop -> . estatuto estatutop
    (17) estatutop -> . empty
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . write
    (21) estatuto -> . while
    (22) estatuto -> . return
    (23) estatuto -> . for
    (24) estatuto -> . empty
    (100) empty -> .
    (43) asignacion -> . vars
    (44) asignacion -> . id asignacionp
    (26) condicion -> . IF ( superexpresion ) condicionAux bloque condicionelse
    (31) write -> . WRITE ( writep ) ;
    (40) while -> . WHILE whileAux ( superexpresion ) whileAux2 bloque
    (25) return -> . RETURN superexpresion ;
    (39) for -> . FOR ( id = superexpresion ; superexpresion ) bloque
    (83) vars -> . varsp
    (92) id -> . ID idp
    (84) varsp -> . tipo varspp ; varsp
    (85) varsp -> . empty
    (89) tipo -> . INT
    (90) tipo -> . FLOAT
    (91) tipo -> . CHAR

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    }               reduce using rule 100 (empty -> .)
    IF              shift and go to state 62
    WRITE           shift and go to state 63
    WHILE           shift and go to state 64
    RETURN          shift and go to state 65
    FOR             shift and go to state 66
    ID              shift and go to state 67
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WRITE           [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! RETURN          [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! INT             [ reduce using rule 100 (empty -> .) ]
  ! FLOAT           [ reduce using rule 100 (empty -> .) ]
  ! CHAR            [ reduce using rule 100 (empty -> .) ]

    estatuto                       shift and go to state 53
    estatutop                      shift and go to state 70
    empty                          shift and go to state 54
    asignacion                     shift and go to state 55
    condicion                      shift and go to state 56
    write                          shift and go to state 57
    while                          shift and go to state 58
    return                         shift and go to state 59
    for                            shift and go to state 60
    vars                           shift and go to state 51
    id                             shift and go to state 61
    varsp                          shift and go to state 6
    tipo                           shift and go to state 7

state 54

    (17) estatutop -> empty .
    (24) estatuto -> empty .
    (85) varsp -> empty .

  ! reduce/reduce conflict for } resolved using rule 17 (estatutop -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 24 (estatuto -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 24 (estatuto -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 24 (estatuto -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 24 (estatuto -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 24 (estatuto -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 24 (estatuto -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 24 (estatuto -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 24 (estatuto -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 24 (estatuto -> empty .)
  ! reduce/reduce conflict for } resolved using rule 17 (estatutop -> empty .)
    }               reduce using rule 17 (estatutop -> empty .)
    IF              reduce using rule 24 (estatuto -> empty .)
    WRITE           reduce using rule 24 (estatuto -> empty .)
    WHILE           reduce using rule 24 (estatuto -> empty .)
    RETURN          reduce using rule 24 (estatuto -> empty .)
    FOR             reduce using rule 24 (estatuto -> empty .)
    ID              reduce using rule 24 (estatuto -> empty .)
    INT             reduce using rule 24 (estatuto -> empty .)
    FLOAT           reduce using rule 24 (estatuto -> empty .)
    CHAR            reduce using rule 24 (estatuto -> empty .)

  ! }               [ reduce using rule 24 (estatuto -> empty .) ]
  ! IF              [ reduce using rule 85 (varsp -> empty .) ]
  ! WRITE           [ reduce using rule 85 (varsp -> empty .) ]
  ! WHILE           [ reduce using rule 85 (varsp -> empty .) ]
  ! RETURN          [ reduce using rule 85 (varsp -> empty .) ]
  ! FOR             [ reduce using rule 85 (varsp -> empty .) ]
  ! ID              [ reduce using rule 85 (varsp -> empty .) ]
  ! INT             [ reduce using rule 85 (varsp -> empty .) ]
  ! FLOAT           [ reduce using rule 85 (varsp -> empty .) ]
  ! CHAR            [ reduce using rule 85 (varsp -> empty .) ]
  ! }               [ reduce using rule 85 (varsp -> empty .) ]


state 55

    (18) estatuto -> asignacion .

    IF              reduce using rule 18 (estatuto -> asignacion .)
    WRITE           reduce using rule 18 (estatuto -> asignacion .)
    WHILE           reduce using rule 18 (estatuto -> asignacion .)
    RETURN          reduce using rule 18 (estatuto -> asignacion .)
    FOR             reduce using rule 18 (estatuto -> asignacion .)
    ID              reduce using rule 18 (estatuto -> asignacion .)
    INT             reduce using rule 18 (estatuto -> asignacion .)
    FLOAT           reduce using rule 18 (estatuto -> asignacion .)
    CHAR            reduce using rule 18 (estatuto -> asignacion .)
    }               reduce using rule 18 (estatuto -> asignacion .)


state 56

    (19) estatuto -> condicion .

    IF              reduce using rule 19 (estatuto -> condicion .)
    WRITE           reduce using rule 19 (estatuto -> condicion .)
    WHILE           reduce using rule 19 (estatuto -> condicion .)
    RETURN          reduce using rule 19 (estatuto -> condicion .)
    FOR             reduce using rule 19 (estatuto -> condicion .)
    ID              reduce using rule 19 (estatuto -> condicion .)
    INT             reduce using rule 19 (estatuto -> condicion .)
    FLOAT           reduce using rule 19 (estatuto -> condicion .)
    CHAR            reduce using rule 19 (estatuto -> condicion .)
    }               reduce using rule 19 (estatuto -> condicion .)


state 57

    (20) estatuto -> write .

    IF              reduce using rule 20 (estatuto -> write .)
    WRITE           reduce using rule 20 (estatuto -> write .)
    WHILE           reduce using rule 20 (estatuto -> write .)
    RETURN          reduce using rule 20 (estatuto -> write .)
    FOR             reduce using rule 20 (estatuto -> write .)
    ID              reduce using rule 20 (estatuto -> write .)
    INT             reduce using rule 20 (estatuto -> write .)
    FLOAT           reduce using rule 20 (estatuto -> write .)
    CHAR            reduce using rule 20 (estatuto -> write .)
    }               reduce using rule 20 (estatuto -> write .)


state 58

    (21) estatuto -> while .

    IF              reduce using rule 21 (estatuto -> while .)
    WRITE           reduce using rule 21 (estatuto -> while .)
    WHILE           reduce using rule 21 (estatuto -> while .)
    RETURN          reduce using rule 21 (estatuto -> while .)
    FOR             reduce using rule 21 (estatuto -> while .)
    ID              reduce using rule 21 (estatuto -> while .)
    INT             reduce using rule 21 (estatuto -> while .)
    FLOAT           reduce using rule 21 (estatuto -> while .)
    CHAR            reduce using rule 21 (estatuto -> while .)
    }               reduce using rule 21 (estatuto -> while .)


state 59

    (22) estatuto -> return .

    IF              reduce using rule 22 (estatuto -> return .)
    WRITE           reduce using rule 22 (estatuto -> return .)
    WHILE           reduce using rule 22 (estatuto -> return .)
    RETURN          reduce using rule 22 (estatuto -> return .)
    FOR             reduce using rule 22 (estatuto -> return .)
    ID              reduce using rule 22 (estatuto -> return .)
    INT             reduce using rule 22 (estatuto -> return .)
    FLOAT           reduce using rule 22 (estatuto -> return .)
    CHAR            reduce using rule 22 (estatuto -> return .)
    }               reduce using rule 22 (estatuto -> return .)


state 60

    (23) estatuto -> for .

    IF              reduce using rule 23 (estatuto -> for .)
    WRITE           reduce using rule 23 (estatuto -> for .)
    WHILE           reduce using rule 23 (estatuto -> for .)
    RETURN          reduce using rule 23 (estatuto -> for .)
    FOR             reduce using rule 23 (estatuto -> for .)
    ID              reduce using rule 23 (estatuto -> for .)
    INT             reduce using rule 23 (estatuto -> for .)
    FLOAT           reduce using rule 23 (estatuto -> for .)
    CHAR            reduce using rule 23 (estatuto -> for .)
    }               reduce using rule 23 (estatuto -> for .)


state 61

    (44) asignacion -> id . asignacionp
    (45) asignacionp -> . = superexpresion ;
    (46) asignacionp -> . [ superexpresion ] = superexpresion ;

    =               shift and go to state 72
    [               shift and go to state 73

    asignacionp                    shift and go to state 71

state 62

    (26) condicion -> IF . ( superexpresion ) condicionAux bloque condicionelse

    (               shift and go to state 74


state 63

    (31) write -> WRITE . ( writep ) ;

    (               shift and go to state 75


state 64

    (40) while -> WHILE . whileAux ( superexpresion ) whileAux2 bloque
    (41) whileAux -> .

    (               reduce using rule 41 (whileAux -> .)

    whileAux                       shift and go to state 76

state 65

    (25) return -> RETURN . superexpresion ;
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    superexpresion                 shift and go to state 77
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 66

    (39) for -> FOR . ( id = superexpresion ; superexpresion ) bloque

    (               shift and go to state 88


state 67

    (92) id -> ID . idp
    (93) idp -> . ( idpp )
    (94) idp -> . [ superexpresion ]
    (95) idp -> . empty
    (100) empty -> .

  ! shift/reduce conflict for [ resolved as shift
    (               shift and go to state 90
    [               shift and go to state 91
    =               reduce using rule 100 (empty -> .)
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    EQUALS          reduce using rule 100 (empty -> .)
    DIFF            reduce using rule 100 (empty -> .)
    LTHANEQ         reduce using rule 100 (empty -> .)
    GTHANEQ         reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    ;               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    ,               reduce using rule 100 (empty -> .)

  ! [               [ reduce using rule 100 (empty -> .) ]

    idp                            shift and go to state 89
    empty                          shift and go to state 92

state 68

    (7) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque . functionAux2
    (10) functionAux2 -> .

    FUNCTION        reduce using rule 10 (functionAux2 -> .)
    MAIN            reduce using rule 10 (functionAux2 -> .)

    functionAux2                   shift and go to state 93

state 69

    (81) parametrop -> , parametro .

    )               reduce using rule 81 (parametrop -> , parametro .)


state 70

    (16) estatutop -> estatuto estatutop .

    }               reduce using rule 16 (estatutop -> estatuto estatutop .)


state 71

    (44) asignacion -> id asignacionp .

    IF              reduce using rule 44 (asignacion -> id asignacionp .)
    WRITE           reduce using rule 44 (asignacion -> id asignacionp .)
    WHILE           reduce using rule 44 (asignacion -> id asignacionp .)
    RETURN          reduce using rule 44 (asignacion -> id asignacionp .)
    FOR             reduce using rule 44 (asignacion -> id asignacionp .)
    ID              reduce using rule 44 (asignacion -> id asignacionp .)
    INT             reduce using rule 44 (asignacion -> id asignacionp .)
    FLOAT           reduce using rule 44 (asignacion -> id asignacionp .)
    CHAR            reduce using rule 44 (asignacion -> id asignacionp .)
    }               reduce using rule 44 (asignacion -> id asignacionp .)


state 72

    (45) asignacionp -> = . superexpresion ;
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    superexpresion                 shift and go to state 94
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 73

    (46) asignacionp -> [ . superexpresion ] = superexpresion ;
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    superexpresion                 shift and go to state 95
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 74

    (26) condicion -> IF ( . superexpresion ) condicionAux bloque condicionelse
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    superexpresion                 shift and go to state 96
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 75

    (31) write -> WRITE ( . writep ) ;
    (32) writep -> . superexpresion writepAux writepp
    (33) writep -> . LETRERO writepAux2 writepp
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    LETRERO         shift and go to state 99
    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    writep                         shift and go to state 97
    superexpresion                 shift and go to state 98
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 76

    (40) while -> WHILE whileAux . ( superexpresion ) whileAux2 bloque

    (               shift and go to state 100


state 77

    (25) return -> RETURN superexpresion . ;

    ;               shift and go to state 101


state 78

    (47) superexpresion -> megaexpresion . superexpresionp
    (48) superexpresionp -> . AND superexpresion
    (49) superexpresionp -> . OR superexpresion
    (50) superexpresionp -> . empty
    (100) empty -> .

    AND             shift and go to state 103
    OR              shift and go to state 104
    ;               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    ,               reduce using rule 100 (empty -> .)

    superexpresionp                shift and go to state 102
    empty                          shift and go to state 105

state 79

    (51) megaexpresion -> exp . megaexpresionp
    (52) megaexpresionp -> . < exp
    (53) megaexpresionp -> . > exp
    (54) megaexpresionp -> . EQUALS exp
    (55) megaexpresionp -> . DIFF exp
    (56) megaexpresionp -> . LTHANEQ exp
    (57) megaexpresionp -> . GTHANEQ exp
    (58) megaexpresionp -> . empty
    (100) empty -> .

    <               shift and go to state 107
    >               shift and go to state 108
    EQUALS          shift and go to state 109
    DIFF            shift and go to state 110
    LTHANEQ         shift and go to state 111
    GTHANEQ         shift and go to state 112
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    ;               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    ,               reduce using rule 100 (empty -> .)

    megaexpresionp                 shift and go to state 106
    empty                          shift and go to state 113

state 80

    (59) exp -> termino . expp
    (60) expp -> . + pAppT exp
    (61) expp -> . - pAppT exp
    (62) expp -> . empty
    (100) empty -> .

    +               shift and go to state 115
    -               shift and go to state 116
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    EQUALS          reduce using rule 100 (empty -> .)
    DIFF            reduce using rule 100 (empty -> .)
    LTHANEQ         reduce using rule 100 (empty -> .)
    GTHANEQ         reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    ;               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    ,               reduce using rule 100 (empty -> .)

    expp                           shift and go to state 114
    empty                          shift and go to state 117

state 81

    (64) termino -> factor . terminop
    (65) terminop -> . * pAppF termino
    (66) terminop -> . / pAppF termino
    (67) terminop -> . empty
    (100) empty -> .

    *               shift and go to state 119
    /               shift and go to state 120
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    EQUALS          reduce using rule 100 (empty -> .)
    DIFF            reduce using rule 100 (empty -> .)
    LTHANEQ         reduce using rule 100 (empty -> .)
    GTHANEQ         reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    ;               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    ,               reduce using rule 100 (empty -> .)

    terminop                       shift and go to state 118
    empty                          shift and go to state 121

state 82

    (69) factor -> constante .

    *               reduce using rule 69 (factor -> constante .)
    /               reduce using rule 69 (factor -> constante .)
    +               reduce using rule 69 (factor -> constante .)
    -               reduce using rule 69 (factor -> constante .)
    <               reduce using rule 69 (factor -> constante .)
    >               reduce using rule 69 (factor -> constante .)
    EQUALS          reduce using rule 69 (factor -> constante .)
    DIFF            reduce using rule 69 (factor -> constante .)
    LTHANEQ         reduce using rule 69 (factor -> constante .)
    GTHANEQ         reduce using rule 69 (factor -> constante .)
    AND             reduce using rule 69 (factor -> constante .)
    OR              reduce using rule 69 (factor -> constante .)
    ;               reduce using rule 69 (factor -> constante .)
    ]               reduce using rule 69 (factor -> constante .)
    )               reduce using rule 69 (factor -> constante .)
    ,               reduce using rule 69 (factor -> constante .)


state 83

    (70) factor -> lParen . superexpresion rParen
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    lParen                         shift and go to state 83
    superexpresion                 shift and go to state 122
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    id                             shift and go to state 84

state 84

    (73) constante -> id .

    *               reduce using rule 73 (constante -> id .)
    /               reduce using rule 73 (constante -> id .)
    +               reduce using rule 73 (constante -> id .)
    -               reduce using rule 73 (constante -> id .)
    <               reduce using rule 73 (constante -> id .)
    >               reduce using rule 73 (constante -> id .)
    EQUALS          reduce using rule 73 (constante -> id .)
    DIFF            reduce using rule 73 (constante -> id .)
    LTHANEQ         reduce using rule 73 (constante -> id .)
    GTHANEQ         reduce using rule 73 (constante -> id .)
    AND             reduce using rule 73 (constante -> id .)
    OR              reduce using rule 73 (constante -> id .)
    ;               reduce using rule 73 (constante -> id .)
    ]               reduce using rule 73 (constante -> id .)
    )               reduce using rule 73 (constante -> id .)
    ,               reduce using rule 73 (constante -> id .)


state 85

    (74) constante -> CTEF . ctef
    (76) ctef -> .

    *               reduce using rule 76 (ctef -> .)
    /               reduce using rule 76 (ctef -> .)
    +               reduce using rule 76 (ctef -> .)
    -               reduce using rule 76 (ctef -> .)
    <               reduce using rule 76 (ctef -> .)
    >               reduce using rule 76 (ctef -> .)
    EQUALS          reduce using rule 76 (ctef -> .)
    DIFF            reduce using rule 76 (ctef -> .)
    LTHANEQ         reduce using rule 76 (ctef -> .)
    GTHANEQ         reduce using rule 76 (ctef -> .)
    AND             reduce using rule 76 (ctef -> .)
    OR              reduce using rule 76 (ctef -> .)
    ;               reduce using rule 76 (ctef -> .)
    ]               reduce using rule 76 (ctef -> .)
    )               reduce using rule 76 (ctef -> .)
    ,               reduce using rule 76 (ctef -> .)

    ctef                           shift and go to state 123

state 86

    (75) constante -> CTEI . ctei
    (77) ctei -> .

    *               reduce using rule 77 (ctei -> .)
    /               reduce using rule 77 (ctei -> .)
    +               reduce using rule 77 (ctei -> .)
    -               reduce using rule 77 (ctei -> .)
    <               reduce using rule 77 (ctei -> .)
    >               reduce using rule 77 (ctei -> .)
    EQUALS          reduce using rule 77 (ctei -> .)
    DIFF            reduce using rule 77 (ctei -> .)
    LTHANEQ         reduce using rule 77 (ctei -> .)
    GTHANEQ         reduce using rule 77 (ctei -> .)
    AND             reduce using rule 77 (ctei -> .)
    OR              reduce using rule 77 (ctei -> .)
    ;               reduce using rule 77 (ctei -> .)
    ]               reduce using rule 77 (ctei -> .)
    )               reduce using rule 77 (ctei -> .)
    ,               reduce using rule 77 (ctei -> .)

    ctei                           shift and go to state 124

state 87

    (71) lParen -> ( .

    CTEF            reduce using rule 71 (lParen -> ( .)
    CTEI            reduce using rule 71 (lParen -> ( .)
    (               reduce using rule 71 (lParen -> ( .)
    ID              reduce using rule 71 (lParen -> ( .)


state 88

    (39) for -> FOR ( . id = superexpresion ; superexpresion ) bloque
    (92) id -> . ID idp

    ID              shift and go to state 67

    id                             shift and go to state 125

state 89

    (92) id -> ID idp .

    =               reduce using rule 92 (id -> ID idp .)
    [               reduce using rule 92 (id -> ID idp .)
    *               reduce using rule 92 (id -> ID idp .)
    /               reduce using rule 92 (id -> ID idp .)
    +               reduce using rule 92 (id -> ID idp .)
    -               reduce using rule 92 (id -> ID idp .)
    <               reduce using rule 92 (id -> ID idp .)
    >               reduce using rule 92 (id -> ID idp .)
    EQUALS          reduce using rule 92 (id -> ID idp .)
    DIFF            reduce using rule 92 (id -> ID idp .)
    LTHANEQ         reduce using rule 92 (id -> ID idp .)
    GTHANEQ         reduce using rule 92 (id -> ID idp .)
    AND             reduce using rule 92 (id -> ID idp .)
    OR              reduce using rule 92 (id -> ID idp .)
    ;               reduce using rule 92 (id -> ID idp .)
    ]               reduce using rule 92 (id -> ID idp .)
    )               reduce using rule 92 (id -> ID idp .)
    ,               reduce using rule 92 (id -> ID idp .)


state 90

    (93) idp -> ( . idpp )
    (96) idpp -> . superexpresion idppp
    (97) idpp -> . empty
    (47) superexpresion -> . megaexpresion superexpresionp
    (100) empty -> .
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    )               reduce using rule 100 (empty -> .)
    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    idpp                           shift and go to state 126
    superexpresion                 shift and go to state 127
    empty                          shift and go to state 128
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 91

    (94) idp -> [ . superexpresion ]
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    superexpresion                 shift and go to state 129
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 92

    (95) idp -> empty .

    =               reduce using rule 95 (idp -> empty .)
    [               reduce using rule 95 (idp -> empty .)
    *               reduce using rule 95 (idp -> empty .)
    /               reduce using rule 95 (idp -> empty .)
    +               reduce using rule 95 (idp -> empty .)
    -               reduce using rule 95 (idp -> empty .)
    <               reduce using rule 95 (idp -> empty .)
    >               reduce using rule 95 (idp -> empty .)
    EQUALS          reduce using rule 95 (idp -> empty .)
    DIFF            reduce using rule 95 (idp -> empty .)
    LTHANEQ         reduce using rule 95 (idp -> empty .)
    GTHANEQ         reduce using rule 95 (idp -> empty .)
    AND             reduce using rule 95 (idp -> empty .)
    OR              reduce using rule 95 (idp -> empty .)
    ;               reduce using rule 95 (idp -> empty .)
    ]               reduce using rule 95 (idp -> empty .)
    )               reduce using rule 95 (idp -> empty .)
    ,               reduce using rule 95 (idp -> empty .)


state 93

    (7) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2 .

    FUNCTION        reduce using rule 7 (function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2 .)
    MAIN            reduce using rule 7 (function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2 .)


state 94

    (45) asignacionp -> = superexpresion . ;

    ;               shift and go to state 130


state 95

    (46) asignacionp -> [ superexpresion . ] = superexpresion ;

    ]               shift and go to state 131


state 96

    (26) condicion -> IF ( superexpresion . ) condicionAux bloque condicionelse

    )               shift and go to state 132


state 97

    (31) write -> WRITE ( writep . ) ;

    )               shift and go to state 133


state 98

    (32) writep -> superexpresion . writepAux writepp
    (34) writepAux -> .

    ,               reduce using rule 34 (writepAux -> .)
    )               reduce using rule 34 (writepAux -> .)

    writepAux                      shift and go to state 134

state 99

    (33) writep -> LETRERO . writepAux2 writepp
    (35) writepAux2 -> .

    ,               reduce using rule 35 (writepAux2 -> .)
    )               reduce using rule 35 (writepAux2 -> .)

    writepAux2                     shift and go to state 135

state 100

    (40) while -> WHILE whileAux ( . superexpresion ) whileAux2 bloque
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    superexpresion                 shift and go to state 136
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 101

    (25) return -> RETURN superexpresion ; .

    IF              reduce using rule 25 (return -> RETURN superexpresion ; .)
    WRITE           reduce using rule 25 (return -> RETURN superexpresion ; .)
    WHILE           reduce using rule 25 (return -> RETURN superexpresion ; .)
    RETURN          reduce using rule 25 (return -> RETURN superexpresion ; .)
    FOR             reduce using rule 25 (return -> RETURN superexpresion ; .)
    ID              reduce using rule 25 (return -> RETURN superexpresion ; .)
    INT             reduce using rule 25 (return -> RETURN superexpresion ; .)
    FLOAT           reduce using rule 25 (return -> RETURN superexpresion ; .)
    CHAR            reduce using rule 25 (return -> RETURN superexpresion ; .)
    }               reduce using rule 25 (return -> RETURN superexpresion ; .)


state 102

    (47) superexpresion -> megaexpresion superexpresionp .

    ;               reduce using rule 47 (superexpresion -> megaexpresion superexpresionp .)
    ]               reduce using rule 47 (superexpresion -> megaexpresion superexpresionp .)
    )               reduce using rule 47 (superexpresion -> megaexpresion superexpresionp .)
    ,               reduce using rule 47 (superexpresion -> megaexpresion superexpresionp .)


state 103

    (48) superexpresionp -> AND . superexpresion
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    superexpresion                 shift and go to state 137
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 104

    (49) superexpresionp -> OR . superexpresion
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    superexpresion                 shift and go to state 138
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 105

    (50) superexpresionp -> empty .

    ;               reduce using rule 50 (superexpresionp -> empty .)
    ]               reduce using rule 50 (superexpresionp -> empty .)
    )               reduce using rule 50 (superexpresionp -> empty .)
    ,               reduce using rule 50 (superexpresionp -> empty .)


state 106

    (51) megaexpresion -> exp megaexpresionp .

    AND             reduce using rule 51 (megaexpresion -> exp megaexpresionp .)
    OR              reduce using rule 51 (megaexpresion -> exp megaexpresionp .)
    ;               reduce using rule 51 (megaexpresion -> exp megaexpresionp .)
    ]               reduce using rule 51 (megaexpresion -> exp megaexpresionp .)
    )               reduce using rule 51 (megaexpresion -> exp megaexpresionp .)
    ,               reduce using rule 51 (megaexpresion -> exp megaexpresionp .)


state 107

    (52) megaexpresionp -> < . exp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    exp                            shift and go to state 139
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 108

    (53) megaexpresionp -> > . exp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    exp                            shift and go to state 140
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 109

    (54) megaexpresionp -> EQUALS . exp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    exp                            shift and go to state 141
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 110

    (55) megaexpresionp -> DIFF . exp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    exp                            shift and go to state 142
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 111

    (56) megaexpresionp -> LTHANEQ . exp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    exp                            shift and go to state 143
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 112

    (57) megaexpresionp -> GTHANEQ . exp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    exp                            shift and go to state 144
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 113

    (58) megaexpresionp -> empty .

    AND             reduce using rule 58 (megaexpresionp -> empty .)
    OR              reduce using rule 58 (megaexpresionp -> empty .)
    ;               reduce using rule 58 (megaexpresionp -> empty .)
    ]               reduce using rule 58 (megaexpresionp -> empty .)
    )               reduce using rule 58 (megaexpresionp -> empty .)
    ,               reduce using rule 58 (megaexpresionp -> empty .)


state 114

    (59) exp -> termino expp .

    <               reduce using rule 59 (exp -> termino expp .)
    >               reduce using rule 59 (exp -> termino expp .)
    EQUALS          reduce using rule 59 (exp -> termino expp .)
    DIFF            reduce using rule 59 (exp -> termino expp .)
    LTHANEQ         reduce using rule 59 (exp -> termino expp .)
    GTHANEQ         reduce using rule 59 (exp -> termino expp .)
    AND             reduce using rule 59 (exp -> termino expp .)
    OR              reduce using rule 59 (exp -> termino expp .)
    ;               reduce using rule 59 (exp -> termino expp .)
    ]               reduce using rule 59 (exp -> termino expp .)
    )               reduce using rule 59 (exp -> termino expp .)
    ,               reduce using rule 59 (exp -> termino expp .)


state 115

    (60) expp -> + . pAppT exp
    (63) pAppT -> .

    CTEF            reduce using rule 63 (pAppT -> .)
    CTEI            reduce using rule 63 (pAppT -> .)
    (               reduce using rule 63 (pAppT -> .)
    ID              reduce using rule 63 (pAppT -> .)

    pAppT                          shift and go to state 145

state 116

    (61) expp -> - . pAppT exp
    (63) pAppT -> .

    CTEF            reduce using rule 63 (pAppT -> .)
    CTEI            reduce using rule 63 (pAppT -> .)
    (               reduce using rule 63 (pAppT -> .)
    ID              reduce using rule 63 (pAppT -> .)

    pAppT                          shift and go to state 146

state 117

    (62) expp -> empty .

    <               reduce using rule 62 (expp -> empty .)
    >               reduce using rule 62 (expp -> empty .)
    EQUALS          reduce using rule 62 (expp -> empty .)
    DIFF            reduce using rule 62 (expp -> empty .)
    LTHANEQ         reduce using rule 62 (expp -> empty .)
    GTHANEQ         reduce using rule 62 (expp -> empty .)
    AND             reduce using rule 62 (expp -> empty .)
    OR              reduce using rule 62 (expp -> empty .)
    ;               reduce using rule 62 (expp -> empty .)
    ]               reduce using rule 62 (expp -> empty .)
    )               reduce using rule 62 (expp -> empty .)
    ,               reduce using rule 62 (expp -> empty .)


state 118

    (64) termino -> factor terminop .

    +               reduce using rule 64 (termino -> factor terminop .)
    -               reduce using rule 64 (termino -> factor terminop .)
    <               reduce using rule 64 (termino -> factor terminop .)
    >               reduce using rule 64 (termino -> factor terminop .)
    EQUALS          reduce using rule 64 (termino -> factor terminop .)
    DIFF            reduce using rule 64 (termino -> factor terminop .)
    LTHANEQ         reduce using rule 64 (termino -> factor terminop .)
    GTHANEQ         reduce using rule 64 (termino -> factor terminop .)
    AND             reduce using rule 64 (termino -> factor terminop .)
    OR              reduce using rule 64 (termino -> factor terminop .)
    ;               reduce using rule 64 (termino -> factor terminop .)
    ]               reduce using rule 64 (termino -> factor terminop .)
    )               reduce using rule 64 (termino -> factor terminop .)
    ,               reduce using rule 64 (termino -> factor terminop .)


state 119

    (65) terminop -> * . pAppF termino
    (68) pAppF -> .

    CTEF            reduce using rule 68 (pAppF -> .)
    CTEI            reduce using rule 68 (pAppF -> .)
    (               reduce using rule 68 (pAppF -> .)
    ID              reduce using rule 68 (pAppF -> .)

    pAppF                          shift and go to state 147

state 120

    (66) terminop -> / . pAppF termino
    (68) pAppF -> .

    CTEF            reduce using rule 68 (pAppF -> .)
    CTEI            reduce using rule 68 (pAppF -> .)
    (               reduce using rule 68 (pAppF -> .)
    ID              reduce using rule 68 (pAppF -> .)

    pAppF                          shift and go to state 148

state 121

    (67) terminop -> empty .

    +               reduce using rule 67 (terminop -> empty .)
    -               reduce using rule 67 (terminop -> empty .)
    <               reduce using rule 67 (terminop -> empty .)
    >               reduce using rule 67 (terminop -> empty .)
    EQUALS          reduce using rule 67 (terminop -> empty .)
    DIFF            reduce using rule 67 (terminop -> empty .)
    LTHANEQ         reduce using rule 67 (terminop -> empty .)
    GTHANEQ         reduce using rule 67 (terminop -> empty .)
    AND             reduce using rule 67 (terminop -> empty .)
    OR              reduce using rule 67 (terminop -> empty .)
    ;               reduce using rule 67 (terminop -> empty .)
    ]               reduce using rule 67 (terminop -> empty .)
    )               reduce using rule 67 (terminop -> empty .)
    ,               reduce using rule 67 (terminop -> empty .)


state 122

    (70) factor -> lParen superexpresion . rParen
    (72) rParen -> . )

    )               shift and go to state 150

    rParen                         shift and go to state 149

state 123

    (74) constante -> CTEF ctef .

    *               reduce using rule 74 (constante -> CTEF ctef .)
    /               reduce using rule 74 (constante -> CTEF ctef .)
    +               reduce using rule 74 (constante -> CTEF ctef .)
    -               reduce using rule 74 (constante -> CTEF ctef .)
    <               reduce using rule 74 (constante -> CTEF ctef .)
    >               reduce using rule 74 (constante -> CTEF ctef .)
    EQUALS          reduce using rule 74 (constante -> CTEF ctef .)
    DIFF            reduce using rule 74 (constante -> CTEF ctef .)
    LTHANEQ         reduce using rule 74 (constante -> CTEF ctef .)
    GTHANEQ         reduce using rule 74 (constante -> CTEF ctef .)
    AND             reduce using rule 74 (constante -> CTEF ctef .)
    OR              reduce using rule 74 (constante -> CTEF ctef .)
    ;               reduce using rule 74 (constante -> CTEF ctef .)
    ]               reduce using rule 74 (constante -> CTEF ctef .)
    )               reduce using rule 74 (constante -> CTEF ctef .)
    ,               reduce using rule 74 (constante -> CTEF ctef .)


state 124

    (75) constante -> CTEI ctei .

    *               reduce using rule 75 (constante -> CTEI ctei .)
    /               reduce using rule 75 (constante -> CTEI ctei .)
    +               reduce using rule 75 (constante -> CTEI ctei .)
    -               reduce using rule 75 (constante -> CTEI ctei .)
    <               reduce using rule 75 (constante -> CTEI ctei .)
    >               reduce using rule 75 (constante -> CTEI ctei .)
    EQUALS          reduce using rule 75 (constante -> CTEI ctei .)
    DIFF            reduce using rule 75 (constante -> CTEI ctei .)
    LTHANEQ         reduce using rule 75 (constante -> CTEI ctei .)
    GTHANEQ         reduce using rule 75 (constante -> CTEI ctei .)
    AND             reduce using rule 75 (constante -> CTEI ctei .)
    OR              reduce using rule 75 (constante -> CTEI ctei .)
    ;               reduce using rule 75 (constante -> CTEI ctei .)
    ]               reduce using rule 75 (constante -> CTEI ctei .)
    )               reduce using rule 75 (constante -> CTEI ctei .)
    ,               reduce using rule 75 (constante -> CTEI ctei .)


state 125

    (39) for -> FOR ( id . = superexpresion ; superexpresion ) bloque

    =               shift and go to state 151


state 126

    (93) idp -> ( idpp . )

    )               shift and go to state 152


state 127

    (96) idpp -> superexpresion . idppp
    (98) idppp -> . , idpp
    (99) idppp -> . empty
    (100) empty -> .

    ,               shift and go to state 154
    )               reduce using rule 100 (empty -> .)

    idppp                          shift and go to state 153
    empty                          shift and go to state 155

state 128

    (97) idpp -> empty .

    )               reduce using rule 97 (idpp -> empty .)


state 129

    (94) idp -> [ superexpresion . ]

    ]               shift and go to state 156


state 130

    (45) asignacionp -> = superexpresion ; .

    IF              reduce using rule 45 (asignacionp -> = superexpresion ; .)
    WRITE           reduce using rule 45 (asignacionp -> = superexpresion ; .)
    WHILE           reduce using rule 45 (asignacionp -> = superexpresion ; .)
    RETURN          reduce using rule 45 (asignacionp -> = superexpresion ; .)
    FOR             reduce using rule 45 (asignacionp -> = superexpresion ; .)
    ID              reduce using rule 45 (asignacionp -> = superexpresion ; .)
    INT             reduce using rule 45 (asignacionp -> = superexpresion ; .)
    FLOAT           reduce using rule 45 (asignacionp -> = superexpresion ; .)
    CHAR            reduce using rule 45 (asignacionp -> = superexpresion ; .)
    }               reduce using rule 45 (asignacionp -> = superexpresion ; .)


state 131

    (46) asignacionp -> [ superexpresion ] . = superexpresion ;

    =               shift and go to state 157


state 132

    (26) condicion -> IF ( superexpresion ) . condicionAux bloque condicionelse
    (27) condicionAux -> .

    {               reduce using rule 27 (condicionAux -> .)

    condicionAux                   shift and go to state 158

state 133

    (31) write -> WRITE ( writep ) . ;

    ;               shift and go to state 159


state 134

    (32) writep -> superexpresion writepAux . writepp
    (36) writepp -> . , writeppAux writep
    (37) writepp -> . empty writeppAux
    (100) empty -> .

    ,               shift and go to state 161
    )               reduce using rule 100 (empty -> .)

    writepp                        shift and go to state 160
    empty                          shift and go to state 162

state 135

    (33) writep -> LETRERO writepAux2 . writepp
    (36) writepp -> . , writeppAux writep
    (37) writepp -> . empty writeppAux
    (100) empty -> .

    ,               shift and go to state 161
    )               reduce using rule 100 (empty -> .)

    writepp                        shift and go to state 163
    empty                          shift and go to state 162

state 136

    (40) while -> WHILE whileAux ( superexpresion . ) whileAux2 bloque

    )               shift and go to state 164


state 137

    (48) superexpresionp -> AND superexpresion .

    ;               reduce using rule 48 (superexpresionp -> AND superexpresion .)
    ]               reduce using rule 48 (superexpresionp -> AND superexpresion .)
    )               reduce using rule 48 (superexpresionp -> AND superexpresion .)
    ,               reduce using rule 48 (superexpresionp -> AND superexpresion .)


state 138

    (49) superexpresionp -> OR superexpresion .

    ;               reduce using rule 49 (superexpresionp -> OR superexpresion .)
    ]               reduce using rule 49 (superexpresionp -> OR superexpresion .)
    )               reduce using rule 49 (superexpresionp -> OR superexpresion .)
    ,               reduce using rule 49 (superexpresionp -> OR superexpresion .)


state 139

    (52) megaexpresionp -> < exp .

    AND             reduce using rule 52 (megaexpresionp -> < exp .)
    OR              reduce using rule 52 (megaexpresionp -> < exp .)
    ;               reduce using rule 52 (megaexpresionp -> < exp .)
    ]               reduce using rule 52 (megaexpresionp -> < exp .)
    )               reduce using rule 52 (megaexpresionp -> < exp .)
    ,               reduce using rule 52 (megaexpresionp -> < exp .)


state 140

    (53) megaexpresionp -> > exp .

    AND             reduce using rule 53 (megaexpresionp -> > exp .)
    OR              reduce using rule 53 (megaexpresionp -> > exp .)
    ;               reduce using rule 53 (megaexpresionp -> > exp .)
    ]               reduce using rule 53 (megaexpresionp -> > exp .)
    )               reduce using rule 53 (megaexpresionp -> > exp .)
    ,               reduce using rule 53 (megaexpresionp -> > exp .)


state 141

    (54) megaexpresionp -> EQUALS exp .

    AND             reduce using rule 54 (megaexpresionp -> EQUALS exp .)
    OR              reduce using rule 54 (megaexpresionp -> EQUALS exp .)
    ;               reduce using rule 54 (megaexpresionp -> EQUALS exp .)
    ]               reduce using rule 54 (megaexpresionp -> EQUALS exp .)
    )               reduce using rule 54 (megaexpresionp -> EQUALS exp .)
    ,               reduce using rule 54 (megaexpresionp -> EQUALS exp .)


state 142

    (55) megaexpresionp -> DIFF exp .

    AND             reduce using rule 55 (megaexpresionp -> DIFF exp .)
    OR              reduce using rule 55 (megaexpresionp -> DIFF exp .)
    ;               reduce using rule 55 (megaexpresionp -> DIFF exp .)
    ]               reduce using rule 55 (megaexpresionp -> DIFF exp .)
    )               reduce using rule 55 (megaexpresionp -> DIFF exp .)
    ,               reduce using rule 55 (megaexpresionp -> DIFF exp .)


state 143

    (56) megaexpresionp -> LTHANEQ exp .

    AND             reduce using rule 56 (megaexpresionp -> LTHANEQ exp .)
    OR              reduce using rule 56 (megaexpresionp -> LTHANEQ exp .)
    ;               reduce using rule 56 (megaexpresionp -> LTHANEQ exp .)
    ]               reduce using rule 56 (megaexpresionp -> LTHANEQ exp .)
    )               reduce using rule 56 (megaexpresionp -> LTHANEQ exp .)
    ,               reduce using rule 56 (megaexpresionp -> LTHANEQ exp .)


state 144

    (57) megaexpresionp -> GTHANEQ exp .

    AND             reduce using rule 57 (megaexpresionp -> GTHANEQ exp .)
    OR              reduce using rule 57 (megaexpresionp -> GTHANEQ exp .)
    ;               reduce using rule 57 (megaexpresionp -> GTHANEQ exp .)
    ]               reduce using rule 57 (megaexpresionp -> GTHANEQ exp .)
    )               reduce using rule 57 (megaexpresionp -> GTHANEQ exp .)
    ,               reduce using rule 57 (megaexpresionp -> GTHANEQ exp .)


state 145

    (60) expp -> + pAppT . exp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    exp                            shift and go to state 165
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 146

    (61) expp -> - pAppT . exp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    exp                            shift and go to state 166
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 147

    (65) terminop -> * pAppF . termino
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    termino                        shift and go to state 167
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 148

    (66) terminop -> / pAppF . termino
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    termino                        shift and go to state 168
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 149

    (70) factor -> lParen superexpresion rParen .

    *               reduce using rule 70 (factor -> lParen superexpresion rParen .)
    /               reduce using rule 70 (factor -> lParen superexpresion rParen .)
    +               reduce using rule 70 (factor -> lParen superexpresion rParen .)
    -               reduce using rule 70 (factor -> lParen superexpresion rParen .)
    <               reduce using rule 70 (factor -> lParen superexpresion rParen .)
    >               reduce using rule 70 (factor -> lParen superexpresion rParen .)
    EQUALS          reduce using rule 70 (factor -> lParen superexpresion rParen .)
    DIFF            reduce using rule 70 (factor -> lParen superexpresion rParen .)
    LTHANEQ         reduce using rule 70 (factor -> lParen superexpresion rParen .)
    GTHANEQ         reduce using rule 70 (factor -> lParen superexpresion rParen .)
    AND             reduce using rule 70 (factor -> lParen superexpresion rParen .)
    OR              reduce using rule 70 (factor -> lParen superexpresion rParen .)
    ;               reduce using rule 70 (factor -> lParen superexpresion rParen .)
    ]               reduce using rule 70 (factor -> lParen superexpresion rParen .)
    )               reduce using rule 70 (factor -> lParen superexpresion rParen .)
    ,               reduce using rule 70 (factor -> lParen superexpresion rParen .)


state 150

    (72) rParen -> ) .

    *               reduce using rule 72 (rParen -> ) .)
    /               reduce using rule 72 (rParen -> ) .)
    +               reduce using rule 72 (rParen -> ) .)
    -               reduce using rule 72 (rParen -> ) .)
    <               reduce using rule 72 (rParen -> ) .)
    >               reduce using rule 72 (rParen -> ) .)
    EQUALS          reduce using rule 72 (rParen -> ) .)
    DIFF            reduce using rule 72 (rParen -> ) .)
    LTHANEQ         reduce using rule 72 (rParen -> ) .)
    GTHANEQ         reduce using rule 72 (rParen -> ) .)
    AND             reduce using rule 72 (rParen -> ) .)
    OR              reduce using rule 72 (rParen -> ) .)
    ;               reduce using rule 72 (rParen -> ) .)
    ]               reduce using rule 72 (rParen -> ) .)
    )               reduce using rule 72 (rParen -> ) .)
    ,               reduce using rule 72 (rParen -> ) .)


state 151

    (39) for -> FOR ( id = . superexpresion ; superexpresion ) bloque
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    id                             shift and go to state 84
    superexpresion                 shift and go to state 169
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83

state 152

    (93) idp -> ( idpp ) .

    =               reduce using rule 93 (idp -> ( idpp ) .)
    [               reduce using rule 93 (idp -> ( idpp ) .)
    *               reduce using rule 93 (idp -> ( idpp ) .)
    /               reduce using rule 93 (idp -> ( idpp ) .)
    +               reduce using rule 93 (idp -> ( idpp ) .)
    -               reduce using rule 93 (idp -> ( idpp ) .)
    <               reduce using rule 93 (idp -> ( idpp ) .)
    >               reduce using rule 93 (idp -> ( idpp ) .)
    EQUALS          reduce using rule 93 (idp -> ( idpp ) .)
    DIFF            reduce using rule 93 (idp -> ( idpp ) .)
    LTHANEQ         reduce using rule 93 (idp -> ( idpp ) .)
    GTHANEQ         reduce using rule 93 (idp -> ( idpp ) .)
    AND             reduce using rule 93 (idp -> ( idpp ) .)
    OR              reduce using rule 93 (idp -> ( idpp ) .)
    ;               reduce using rule 93 (idp -> ( idpp ) .)
    ]               reduce using rule 93 (idp -> ( idpp ) .)
    )               reduce using rule 93 (idp -> ( idpp ) .)
    ,               reduce using rule 93 (idp -> ( idpp ) .)


state 153

    (96) idpp -> superexpresion idppp .

    )               reduce using rule 96 (idpp -> superexpresion idppp .)


state 154

    (98) idppp -> , . idpp
    (96) idpp -> . superexpresion idppp
    (97) idpp -> . empty
    (47) superexpresion -> . megaexpresion superexpresionp
    (100) empty -> .
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    )               reduce using rule 100 (empty -> .)
    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    idpp                           shift and go to state 170
    superexpresion                 shift and go to state 127
    empty                          shift and go to state 128
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 155

    (99) idppp -> empty .

    )               reduce using rule 99 (idppp -> empty .)


state 156

    (94) idp -> [ superexpresion ] .

    =               reduce using rule 94 (idp -> [ superexpresion ] .)
    [               reduce using rule 94 (idp -> [ superexpresion ] .)
    *               reduce using rule 94 (idp -> [ superexpresion ] .)
    /               reduce using rule 94 (idp -> [ superexpresion ] .)
    +               reduce using rule 94 (idp -> [ superexpresion ] .)
    -               reduce using rule 94 (idp -> [ superexpresion ] .)
    <               reduce using rule 94 (idp -> [ superexpresion ] .)
    >               reduce using rule 94 (idp -> [ superexpresion ] .)
    EQUALS          reduce using rule 94 (idp -> [ superexpresion ] .)
    DIFF            reduce using rule 94 (idp -> [ superexpresion ] .)
    LTHANEQ         reduce using rule 94 (idp -> [ superexpresion ] .)
    GTHANEQ         reduce using rule 94 (idp -> [ superexpresion ] .)
    AND             reduce using rule 94 (idp -> [ superexpresion ] .)
    OR              reduce using rule 94 (idp -> [ superexpresion ] .)
    ;               reduce using rule 94 (idp -> [ superexpresion ] .)
    ]               reduce using rule 94 (idp -> [ superexpresion ] .)
    )               reduce using rule 94 (idp -> [ superexpresion ] .)
    ,               reduce using rule 94 (idp -> [ superexpresion ] .)


state 157

    (46) asignacionp -> [ superexpresion ] = . superexpresion ;
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    superexpresion                 shift and go to state 171
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 158

    (26) condicion -> IF ( superexpresion ) condicionAux . bloque condicionelse
    (14) bloque -> . { cuerpo }

    {               shift and go to state 41

    bloque                         shift and go to state 172

state 159

    (31) write -> WRITE ( writep ) ; .

    IF              reduce using rule 31 (write -> WRITE ( writep ) ; .)
    WRITE           reduce using rule 31 (write -> WRITE ( writep ) ; .)
    WHILE           reduce using rule 31 (write -> WRITE ( writep ) ; .)
    RETURN          reduce using rule 31 (write -> WRITE ( writep ) ; .)
    FOR             reduce using rule 31 (write -> WRITE ( writep ) ; .)
    ID              reduce using rule 31 (write -> WRITE ( writep ) ; .)
    INT             reduce using rule 31 (write -> WRITE ( writep ) ; .)
    FLOAT           reduce using rule 31 (write -> WRITE ( writep ) ; .)
    CHAR            reduce using rule 31 (write -> WRITE ( writep ) ; .)
    }               reduce using rule 31 (write -> WRITE ( writep ) ; .)


state 160

    (32) writep -> superexpresion writepAux writepp .

    )               reduce using rule 32 (writep -> superexpresion writepAux writepp .)


state 161

    (36) writepp -> , . writeppAux writep
    (38) writeppAux -> .

    LETRERO         reduce using rule 38 (writeppAux -> .)
    CTEF            reduce using rule 38 (writeppAux -> .)
    CTEI            reduce using rule 38 (writeppAux -> .)
    (               reduce using rule 38 (writeppAux -> .)
    ID              reduce using rule 38 (writeppAux -> .)

    writeppAux                     shift and go to state 173

state 162

    (37) writepp -> empty . writeppAux
    (38) writeppAux -> .

    )               reduce using rule 38 (writeppAux -> .)

    writeppAux                     shift and go to state 174

state 163

    (33) writep -> LETRERO writepAux2 writepp .

    )               reduce using rule 33 (writep -> LETRERO writepAux2 writepp .)


state 164

    (40) while -> WHILE whileAux ( superexpresion ) . whileAux2 bloque
    (42) whileAux2 -> .

    {               reduce using rule 42 (whileAux2 -> .)

    whileAux2                      shift and go to state 175

state 165

    (60) expp -> + pAppT exp .

    <               reduce using rule 60 (expp -> + pAppT exp .)
    >               reduce using rule 60 (expp -> + pAppT exp .)
    EQUALS          reduce using rule 60 (expp -> + pAppT exp .)
    DIFF            reduce using rule 60 (expp -> + pAppT exp .)
    LTHANEQ         reduce using rule 60 (expp -> + pAppT exp .)
    GTHANEQ         reduce using rule 60 (expp -> + pAppT exp .)
    AND             reduce using rule 60 (expp -> + pAppT exp .)
    OR              reduce using rule 60 (expp -> + pAppT exp .)
    ;               reduce using rule 60 (expp -> + pAppT exp .)
    ]               reduce using rule 60 (expp -> + pAppT exp .)
    )               reduce using rule 60 (expp -> + pAppT exp .)
    ,               reduce using rule 60 (expp -> + pAppT exp .)


state 166

    (61) expp -> - pAppT exp .

    <               reduce using rule 61 (expp -> - pAppT exp .)
    >               reduce using rule 61 (expp -> - pAppT exp .)
    EQUALS          reduce using rule 61 (expp -> - pAppT exp .)
    DIFF            reduce using rule 61 (expp -> - pAppT exp .)
    LTHANEQ         reduce using rule 61 (expp -> - pAppT exp .)
    GTHANEQ         reduce using rule 61 (expp -> - pAppT exp .)
    AND             reduce using rule 61 (expp -> - pAppT exp .)
    OR              reduce using rule 61 (expp -> - pAppT exp .)
    ;               reduce using rule 61 (expp -> - pAppT exp .)
    ]               reduce using rule 61 (expp -> - pAppT exp .)
    )               reduce using rule 61 (expp -> - pAppT exp .)
    ,               reduce using rule 61 (expp -> - pAppT exp .)


state 167

    (65) terminop -> * pAppF termino .

    +               reduce using rule 65 (terminop -> * pAppF termino .)
    -               reduce using rule 65 (terminop -> * pAppF termino .)
    <               reduce using rule 65 (terminop -> * pAppF termino .)
    >               reduce using rule 65 (terminop -> * pAppF termino .)
    EQUALS          reduce using rule 65 (terminop -> * pAppF termino .)
    DIFF            reduce using rule 65 (terminop -> * pAppF termino .)
    LTHANEQ         reduce using rule 65 (terminop -> * pAppF termino .)
    GTHANEQ         reduce using rule 65 (terminop -> * pAppF termino .)
    AND             reduce using rule 65 (terminop -> * pAppF termino .)
    OR              reduce using rule 65 (terminop -> * pAppF termino .)
    ;               reduce using rule 65 (terminop -> * pAppF termino .)
    ]               reduce using rule 65 (terminop -> * pAppF termino .)
    )               reduce using rule 65 (terminop -> * pAppF termino .)
    ,               reduce using rule 65 (terminop -> * pAppF termino .)


state 168

    (66) terminop -> / pAppF termino .

    +               reduce using rule 66 (terminop -> / pAppF termino .)
    -               reduce using rule 66 (terminop -> / pAppF termino .)
    <               reduce using rule 66 (terminop -> / pAppF termino .)
    >               reduce using rule 66 (terminop -> / pAppF termino .)
    EQUALS          reduce using rule 66 (terminop -> / pAppF termino .)
    DIFF            reduce using rule 66 (terminop -> / pAppF termino .)
    LTHANEQ         reduce using rule 66 (terminop -> / pAppF termino .)
    GTHANEQ         reduce using rule 66 (terminop -> / pAppF termino .)
    AND             reduce using rule 66 (terminop -> / pAppF termino .)
    OR              reduce using rule 66 (terminop -> / pAppF termino .)
    ;               reduce using rule 66 (terminop -> / pAppF termino .)
    ]               reduce using rule 66 (terminop -> / pAppF termino .)
    )               reduce using rule 66 (terminop -> / pAppF termino .)
    ,               reduce using rule 66 (terminop -> / pAppF termino .)


state 169

    (39) for -> FOR ( id = superexpresion . ; superexpresion ) bloque

    ;               shift and go to state 176


state 170

    (98) idppp -> , idpp .

    )               reduce using rule 98 (idppp -> , idpp .)


state 171

    (46) asignacionp -> [ superexpresion ] = superexpresion . ;

    ;               shift and go to state 177


state 172

    (26) condicion -> IF ( superexpresion ) condicionAux bloque . condicionelse
    (28) condicionelse -> . ELSE condicionelseAux bloque
    (29) condicionelse -> . empty
    (100) empty -> .

    ELSE            shift and go to state 179
    IF              reduce using rule 100 (empty -> .)
    WRITE           reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    INT             reduce using rule 100 (empty -> .)
    FLOAT           reduce using rule 100 (empty -> .)
    CHAR            reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)

    condicionelse                  shift and go to state 178
    empty                          shift and go to state 180

state 173

    (36) writepp -> , writeppAux . writep
    (32) writep -> . superexpresion writepAux writepp
    (33) writep -> . LETRERO writepAux2 writepp
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    LETRERO         shift and go to state 99
    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    writep                         shift and go to state 181
    superexpresion                 shift and go to state 98
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83
    id                             shift and go to state 84

state 174

    (37) writepp -> empty writeppAux .

    )               reduce using rule 37 (writepp -> empty writeppAux .)


state 175

    (40) while -> WHILE whileAux ( superexpresion ) whileAux2 . bloque
    (14) bloque -> . { cuerpo }

    {               shift and go to state 41

    bloque                         shift and go to state 182

state 176

    (39) for -> FOR ( id = superexpresion ; . superexpresion ) bloque
    (47) superexpresion -> . megaexpresion superexpresionp
    (51) megaexpresion -> . exp megaexpresionp
    (59) exp -> . termino expp
    (64) termino -> . factor terminop
    (69) factor -> . constante
    (70) factor -> . lParen superexpresion rParen
    (73) constante -> . id
    (74) constante -> . CTEF ctef
    (75) constante -> . CTEI ctei
    (71) lParen -> . (
    (92) id -> . ID idp

    CTEF            shift and go to state 85
    CTEI            shift and go to state 86
    (               shift and go to state 87
    ID              shift and go to state 67

    id                             shift and go to state 84
    superexpresion                 shift and go to state 183
    megaexpresion                  shift and go to state 78
    exp                            shift and go to state 79
    termino                        shift and go to state 80
    factor                         shift and go to state 81
    constante                      shift and go to state 82
    lParen                         shift and go to state 83

state 177

    (46) asignacionp -> [ superexpresion ] = superexpresion ; .

    IF              reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    WRITE           reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    WHILE           reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    RETURN          reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    FOR             reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    ID              reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    INT             reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    FLOAT           reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    CHAR            reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)
    }               reduce using rule 46 (asignacionp -> [ superexpresion ] = superexpresion ; .)


state 178

    (26) condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .

    IF              reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    WRITE           reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    WHILE           reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    RETURN          reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    FOR             reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    ID              reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    INT             reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    FLOAT           reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    CHAR            reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    }               reduce using rule 26 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)


state 179

    (28) condicionelse -> ELSE . condicionelseAux bloque
    (30) condicionelseAux -> .

    {               reduce using rule 30 (condicionelseAux -> .)

    condicionelseAux               shift and go to state 184

state 180

    (29) condicionelse -> empty .

    IF              reduce using rule 29 (condicionelse -> empty .)
    WRITE           reduce using rule 29 (condicionelse -> empty .)
    WHILE           reduce using rule 29 (condicionelse -> empty .)
    RETURN          reduce using rule 29 (condicionelse -> empty .)
    FOR             reduce using rule 29 (condicionelse -> empty .)
    ID              reduce using rule 29 (condicionelse -> empty .)
    INT             reduce using rule 29 (condicionelse -> empty .)
    FLOAT           reduce using rule 29 (condicionelse -> empty .)
    CHAR            reduce using rule 29 (condicionelse -> empty .)
    }               reduce using rule 29 (condicionelse -> empty .)


state 181

    (36) writepp -> , writeppAux writep .

    )               reduce using rule 36 (writepp -> , writeppAux writep .)


state 182

    (40) while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .

    IF              reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    WRITE           reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    WHILE           reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    RETURN          reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    FOR             reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    ID              reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    INT             reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    FLOAT           reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    CHAR            reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    }               reduce using rule 40 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)


state 183

    (39) for -> FOR ( id = superexpresion ; superexpresion . ) bloque

    )               shift and go to state 185


state 184

    (28) condicionelse -> ELSE condicionelseAux . bloque
    (14) bloque -> . { cuerpo }

    {               shift and go to state 41

    bloque                         shift and go to state 186

state 185

    (39) for -> FOR ( id = superexpresion ; superexpresion ) . bloque
    (14) bloque -> . { cuerpo }

    {               shift and go to state 41

    bloque                         shift and go to state 187

state 186

    (28) condicionelse -> ELSE condicionelseAux bloque .

    IF              reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)
    WRITE           reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)
    WHILE           reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)
    RETURN          reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)
    FOR             reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)
    ID              reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)
    INT             reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)
    FLOAT           reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)
    CHAR            reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)
    }               reduce using rule 28 (condicionelse -> ELSE condicionelseAux bloque .)


state 187

    (39) for -> FOR ( id = superexpresion ; superexpresion ) bloque .

    IF              reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    WRITE           reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    WHILE           reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    RETURN          reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    FOR             reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    ID              reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    INT             reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    FLOAT           reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    CHAR            reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)
    }               reduce using rule 39 (for -> FOR ( id = superexpresion ; superexpresion ) bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 13 resolved as shift
WARNING: shift/reduce conflict for INT in state 25 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 25 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 25 resolved as shift
WARNING: shift/reduce conflict for INT in state 41 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 41 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 41 resolved as shift
WARNING: shift/reduce conflict for IF in state 45 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 45 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 45 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 45 resolved as shift
WARNING: shift/reduce conflict for FOR in state 45 resolved as shift
WARNING: shift/reduce conflict for ID in state 45 resolved as shift
WARNING: shift/reduce conflict for INT in state 45 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 45 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 45 resolved as shift
WARNING: shift/reduce conflict for IF in state 53 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 53 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 53 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 53 resolved as shift
WARNING: shift/reduce conflict for FOR in state 53 resolved as shift
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for INT in state 53 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 53 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 53 resolved as shift
WARNING: shift/reduce conflict for [ in state 67 resolved as shift
WARNING: reduce/reduce conflict in state 14 resolved using rule (programaF -> empty)
WARNING: rejected rule (function -> empty) in state 14
WARNING: reduce/reduce conflict in state 54 resolved using rule (estatutop -> empty)
WARNING: rejected rule (estatuto -> empty) in state 54
WARNING: reduce/reduce conflict in state 54 resolved using rule (estatuto -> empty)
WARNING: rejected rule (varsp -> empty) in state 54
WARNING: reduce/reduce conflict in state 54 resolved using rule (estatutop -> empty)
WARNING: rejected rule (varsp -> empty) in state 54
