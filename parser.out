Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FOR
    PROGRAMA

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ID ; vars programaF main
Rule 2     main -> MAIN ( ) bloque
Rule 3     programaF -> function programaF
Rule 4     programaF -> empty
<<<<<<< HEAD
Rule 5     function -> FUNCTION tipoRetorno ID ( functionParam ) bloque
Rule 6     function -> empty
Rule 7     tipoRetorno -> INT
Rule 8     tipoRetorno -> FLOAT
Rule 9     tipoRetorno -> VOID
Rule 10    bloque -> { cuerpo }
Rule 11    cuerpo -> vars estatutop
Rule 12    estatutop -> estatuto estatutop
Rule 13    estatutop -> empty
Rule 14    estatuto -> asignacion
Rule 15    estatuto -> condicion
Rule 16    estatuto -> write
Rule 17    estatuto -> while
Rule 18    estatuto -> return
Rule 19    estatuto -> empty
Rule 20    return -> RETURN superexpresion ;
Rule 21    condicion -> IF ( superexpresion ) bloque condicionelse
Rule 22    condicionelse -> ELSE bloque
Rule 23    condicionelse -> empty
Rule 24    write -> WRITE ( superexpresion ) ;
Rule 25    oper -> <
Rule 26    oper -> >
Rule 27    oper -> EQUALS
Rule 28    oper -> DIFF
Rule 29    oper -> LTHANEQ
Rule 30    oper -> GTHANEQ
Rule 31    while -> WHILE ( superexpresion ) bloque
Rule 32    asignacion -> vars
Rule 33    asignacion -> id asignacionp
Rule 34    asignacionp -> = superexpresion ;
Rule 35    asignacionp -> [ superexpresion ] ;
Rule 36    superexpresion -> megaexpresion superexpresionp
Rule 37    superexpresionp -> AND superexpresion
Rule 38    superexpresionp -> OR superexpresion
Rule 39    superexpresionp -> empty
Rule 40    megaexpresion -> exp megaexpresionp
Rule 41    megaexpresionp -> < exp
Rule 42    megaexpresionp -> > exp
Rule 43    megaexpresionp -> EQUALS exp
Rule 44    megaexpresionp -> DIFF exp
Rule 45    megaexpresionp -> LTHANEQ exp
Rule 46    megaexpresionp -> GTHANEQ exp
Rule 47    megaexpresionp -> empty
Rule 48    exp -> termino expp
Rule 49    expp -> + exp
Rule 50    expp -> - exp
Rule 51    expp -> empty
Rule 52    termino -> factor terminop
Rule 53    terminop -> * exp
Rule 54    terminop -> / exp
Rule 55    terminop -> empty
Rule 56    factor -> constante
Rule 57    factor -> ( superexpresion )
Rule 58    constante -> id
Rule 59    constante -> CTEF
Rule 60    constante -> CTEI
Rule 61    functionParam -> parametro
Rule 62    functionParam -> empty
Rule 63    parametro -> tipo ID parametrop
Rule 64    parametrop -> , parametro
Rule 65    parametrop -> empty
Rule 66    vars -> varsp
Rule 67    varsp -> tipo varspp ; varsp
Rule 68    varsp -> empty
Rule 69    varspp -> ID varsppp
Rule 70    varsppp -> , varspp
Rule 71    varsppp -> empty
Rule 72    tipo -> INT
Rule 73    tipo -> FLOAT
Rule 74    tipo -> CHAR
Rule 75    id -> ID idp
Rule 76    idp -> [ superexpresion ]
Rule 77    idp -> empty
Rule 78    empty -> <empty>

Terminals, with rules where they appear

(                    : 2 5 21 24 31 57
)                    : 2 5 21 24 31 57
*                    : 53
+                    : 49
,                    : 64 70
-                    : 50
/                    : 54
;                    : 1 20 24 34 35 67
<                    : 25 41
=                    : 34
>                    : 26 42
AND                  : 37
CHAR                 : 74
CTEF                 : 59
CTEI                 : 60
DIFF                 : 28 44
ELSE                 : 22
EQUALS               : 27 43
FLOAT                : 8 73
FOR                  : 
FUNCTION             : 5
GTHANEQ              : 30 46
ID                   : 1 5 63 69 75
IF                   : 21
INT                  : 7 72
LTHANEQ              : 29 45
MAIN                 : 2
OR                   : 38
PROGRAMA             : 
RETURN               : 20
VOID                 : 9
WHILE                : 31
WRITE                : 24
[                    : 35 76
]                    : 35 76
=======
Rule 5     function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque
Rule 6     function -> empty
Rule 7     functionAux -> <empty>
Rule 8     tipoRetorno -> INT
Rule 9     tipoRetorno -> FLOAT
Rule 10    tipoRetorno -> VOID
Rule 11    bloque -> { cuerpo }
Rule 12    cuerpo -> vars estatutop
Rule 13    estatutop -> estatuto estatutop
Rule 14    estatutop -> empty
Rule 15    estatuto -> asignacion
Rule 16    estatuto -> condicion
Rule 17    estatuto -> write
Rule 18    estatuto -> while
Rule 19    estatuto -> return
Rule 20    estatuto -> empty
Rule 21    return -> RETURN superexpresion ;
Rule 22    condicion -> IF ( superexpresion ) bloque condicionelse
Rule 23    condicionelse -> ELSE bloque
Rule 24    condicionelse -> empty
Rule 25    write -> WRITE ( superexpresion ) ;
Rule 26    while -> WHILE ( superexpresion ) bloque
Rule 27    asignacion -> vars
Rule 28    asignacion -> id asignacionp
Rule 29    asignacionp -> = superexpresion ;
Rule 30    asignacionp -> [ superexpresion ] ;
Rule 31    superexpresion -> megaexpresion superexpresionp
Rule 32    superexpresionp -> AND superexpresion
Rule 33    superexpresionp -> OR superexpresion
Rule 34    superexpresionp -> empty
Rule 35    megaexpresion -> exp megaexpresionp
Rule 36    megaexpresionp -> < exp
Rule 37    megaexpresionp -> > exp
Rule 38    megaexpresionp -> EQUALS exp
Rule 39    megaexpresionp -> DIFF exp
Rule 40    megaexpresionp -> LTHANEQ exp
Rule 41    megaexpresionp -> GTHANEQ exp
Rule 42    megaexpresionp -> empty
Rule 43    exp -> termino expp
Rule 44    expp -> + exp
Rule 45    expp -> - exp
Rule 46    expp -> empty
Rule 47    termino -> factor terminop
Rule 48    terminop -> * exp
Rule 49    terminop -> / exp
Rule 50    terminop -> empty
Rule 51    factor -> constante
Rule 52    factor -> ( superexpresion )
Rule 53    constante -> id
Rule 54    constante -> CTEF
Rule 55    constante -> CTEI
Rule 56    functionParam -> parametro
Rule 57    functionParam -> empty
Rule 58    parametro -> tipo ID parametrop
Rule 59    parametrop -> , parametro
Rule 60    parametrop -> empty
Rule 61    vars -> varsp
Rule 62    varsp -> tipo varspp ; varsp
Rule 63    varsp -> empty
Rule 64    varspp -> ID varsppp
Rule 65    varsppp -> , varspp
Rule 66    varsppp -> empty
Rule 67    tipo -> INT
Rule 68    tipo -> FLOAT
Rule 69    tipo -> CHAR
Rule 70    id -> ID idp
Rule 71    idp -> [ superexpresion ]
Rule 72    idp -> empty
Rule 73    empty -> <empty>

Terminals, with rules where they appear

(                    : 2 5 22 25 26 52
)                    : 2 5 22 25 26 52
*                    : 48
+                    : 44
,                    : 59 65
-                    : 45
/                    : 49
;                    : 1 21 25 29 30 62
<                    : 36
=                    : 29
>                    : 37
AND                  : 32
CHAR                 : 69
CTEF                 : 54
CTEI                 : 55
DIFF                 : 39
ELSE                 : 23
EQUALS               : 38
FLOAT                : 9 68
FOR                  : 
FUNCTION             : 5
GTHANEQ              : 41
ID                   : 1 5 58 64 70
IF                   : 22
INT                  : 8 67
LTHANEQ              : 40
MAIN                 : 2
OR                   : 33
PROGRAMA             : 
RETURN               : 21
VOID                 : 10
WHILE                : 26
WRITE                : 25
[                    : 30 71
]                    : 30 71
>>>>>>> DirectorioFunciones
error                : 
{                    : 10
}                    : 10

Nonterminals, with rules where they appear

<<<<<<< HEAD
asignacion           : 14
asignacionp          : 33
bloque               : 2 5 21 22 31
condicion            : 15
condicionelse        : 21
constante            : 56
cuerpo               : 10
empty                : 4 6 13 19 23 39 47 51 55 62 65 68 71 77
estatuto             : 12
estatutop            : 11 12
exp                  : 40 41 42 43 44 45 46 49 50 53 54
expp                 : 48
factor               : 52
=======
asignacion           : 15
asignacionp          : 28
bloque               : 2 5 22 23 26
condicion            : 16
condicionelse        : 22
constante            : 51
cuerpo               : 11
empty                : 4 6 14 20 24 34 42 46 50 57 60 63 66 72
estatuto             : 13
estatutop            : 12 13
exp                  : 35 36 37 38 39 40 41 44 45 48 49
expp                 : 43
factor               : 47
>>>>>>> DirectorioFunciones
function             : 3
functionParam        : 5
<<<<<<< HEAD
id                   : 33 58
idp                  : 75
main                 : 1
megaexpresion        : 36
megaexpresionp       : 40
oper                 : 
parametro            : 61 64
parametrop           : 63
programa             : 0
programaF            : 1 3
return               : 18
superexpresion       : 20 21 24 31 34 35 37 38 57 76
superexpresionp      : 36
termino              : 48
terminop             : 52
tipo                 : 63 67
tipoRetorno          : 5
vars                 : 1 11 32
varsp                : 66 67
varspp               : 67 70
varsppp              : 69
while                : 17
write                : 16
=======
id                   : 28 53
idp                  : 70
main                 : 1
megaexpresion        : 31
megaexpresionp       : 35
parametro            : 56 59
parametrop           : 58
programa             : 0
programaF            : 1 3
return               : 19
superexpresion       : 21 22 25 26 29 30 32 33 52 71
superexpresionp      : 31
termino              : 43
terminop             : 47
tipo                 : 58 62
tipoRetorno          : 5
vars                 : 1 12 27
varsp                : 61 62
varspp               : 62 65
varsppp              : 64
while                : 18
write                : 17
>>>>>>> DirectorioFunciones

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ID ; vars programaF main

    ID              shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> ID . ; vars programaF main

    ;               shift and go to state 3


state 3

    (1) programa -> ID ; . vars programaF main
<<<<<<< HEAD
    (66) vars -> . varsp
    (67) varsp -> . tipo varspp ; varsp
    (68) varsp -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (78) empty -> .
=======
    (61) vars -> . varsp
    (62) varsp -> . tipo varspp ; varsp
    (63) varsp -> . empty
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR
    (73) empty -> .
>>>>>>> DirectorioFunciones

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
<<<<<<< HEAD
    FUNCTION        reduce using rule 78 (empty -> .)
    MAIN            reduce using rule 78 (empty -> .)
=======
    FUNCTION        reduce using rule 73 (empty -> .)
    MAIN            reduce using rule 73 (empty -> .)
>>>>>>> DirectorioFunciones

    vars                           shift and go to state 4
    varsp                          shift and go to state 5
    tipo                           shift and go to state 6
    empty                          shift and go to state 7

state 4

    (1) programa -> ID ; vars . programaF main
    (3) programaF -> . function programaF
    (4) programaF -> . empty
<<<<<<< HEAD
    (5) function -> . FUNCTION tipoRetorno ID ( functionParam ) bloque
    (6) function -> . empty
    (78) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 78 (empty -> .)

  ! FUNCTION        [ reduce using rule 78 (empty -> .) ]
=======
    (5) function -> . FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque
    (6) function -> . empty
    (73) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 73 (empty -> .)

  ! FUNCTION        [ reduce using rule 73 (empty -> .) ]
>>>>>>> DirectorioFunciones

    programaF                      shift and go to state 11
    function                       shift and go to state 12
    empty                          shift and go to state 13

state 5

<<<<<<< HEAD
    (66) vars -> varsp .

    FUNCTION        reduce using rule 66 (vars -> varsp .)
    MAIN            reduce using rule 66 (vars -> varsp .)
    IF              reduce using rule 66 (vars -> varsp .)
    WRITE           reduce using rule 66 (vars -> varsp .)
    WHILE           reduce using rule 66 (vars -> varsp .)
    RETURN          reduce using rule 66 (vars -> varsp .)
    ID              reduce using rule 66 (vars -> varsp .)
    INT             reduce using rule 66 (vars -> varsp .)
    FLOAT           reduce using rule 66 (vars -> varsp .)
    CHAR            reduce using rule 66 (vars -> varsp .)
    }               reduce using rule 66 (vars -> varsp .)
=======
    (61) vars -> varsp .

    FUNCTION        reduce using rule 61 (vars -> varsp .)
    MAIN            reduce using rule 61 (vars -> varsp .)
    IF              reduce using rule 61 (vars -> varsp .)
    WRITE           reduce using rule 61 (vars -> varsp .)
    WHILE           reduce using rule 61 (vars -> varsp .)
    RETURN          reduce using rule 61 (vars -> varsp .)
    ID              reduce using rule 61 (vars -> varsp .)
    INT             reduce using rule 61 (vars -> varsp .)
    FLOAT           reduce using rule 61 (vars -> varsp .)
    CHAR            reduce using rule 61 (vars -> varsp .)
    }               reduce using rule 61 (vars -> varsp .)
>>>>>>> DirectorioFunciones


state 6

<<<<<<< HEAD
    (67) varsp -> tipo . varspp ; varsp
    (69) varspp -> . ID varsppp
=======
    (62) varsp -> tipo . varspp ; varsp
    (64) varspp -> . ID varsppp
>>>>>>> DirectorioFunciones

    ID              shift and go to state 16

    varspp                         shift and go to state 15

state 7

<<<<<<< HEAD
    (68) varsp -> empty .

    FUNCTION        reduce using rule 68 (varsp -> empty .)
    MAIN            reduce using rule 68 (varsp -> empty .)
    IF              reduce using rule 68 (varsp -> empty .)
    WRITE           reduce using rule 68 (varsp -> empty .)
    WHILE           reduce using rule 68 (varsp -> empty .)
    RETURN          reduce using rule 68 (varsp -> empty .)
    ID              reduce using rule 68 (varsp -> empty .)
    INT             reduce using rule 68 (varsp -> empty .)
    FLOAT           reduce using rule 68 (varsp -> empty .)
    CHAR            reduce using rule 68 (varsp -> empty .)
    }               reduce using rule 68 (varsp -> empty .)
=======
    (63) varsp -> empty .

    FUNCTION        reduce using rule 63 (varsp -> empty .)
    MAIN            reduce using rule 63 (varsp -> empty .)
    IF              reduce using rule 63 (varsp -> empty .)
    WRITE           reduce using rule 63 (varsp -> empty .)
    WHILE           reduce using rule 63 (varsp -> empty .)
    RETURN          reduce using rule 63 (varsp -> empty .)
    ID              reduce using rule 63 (varsp -> empty .)
    INT             reduce using rule 63 (varsp -> empty .)
    FLOAT           reduce using rule 63 (varsp -> empty .)
    CHAR            reduce using rule 63 (varsp -> empty .)
    }               reduce using rule 63 (varsp -> empty .)
>>>>>>> DirectorioFunciones


state 8

<<<<<<< HEAD
    (72) tipo -> INT .

    ID              reduce using rule 72 (tipo -> INT .)
=======
    (67) tipo -> INT .

    ID              reduce using rule 67 (tipo -> INT .)
>>>>>>> DirectorioFunciones


state 9

<<<<<<< HEAD
    (73) tipo -> FLOAT .

    ID              reduce using rule 73 (tipo -> FLOAT .)
=======
    (68) tipo -> FLOAT .

    ID              reduce using rule 68 (tipo -> FLOAT .)
>>>>>>> DirectorioFunciones


state 10

<<<<<<< HEAD
    (74) tipo -> CHAR .

    ID              reduce using rule 74 (tipo -> CHAR .)
=======
    (69) tipo -> CHAR .

    ID              reduce using rule 69 (tipo -> CHAR .)
>>>>>>> DirectorioFunciones


state 11

    (1) programa -> ID ; vars programaF . main
    (2) main -> . MAIN ( ) bloque

    MAIN            shift and go to state 18

    main                           shift and go to state 17

state 12

    (3) programaF -> function . programaF
    (3) programaF -> . function programaF
    (4) programaF -> . empty
<<<<<<< HEAD
    (5) function -> . FUNCTION tipoRetorno ID ( functionParam ) bloque
    (6) function -> . empty
    (78) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 78 (empty -> .)

  ! FUNCTION        [ reduce using rule 78 (empty -> .) ]
=======
    (5) function -> . FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque
    (6) function -> . empty
    (73) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 14
    MAIN            reduce using rule 73 (empty -> .)

  ! FUNCTION        [ reduce using rule 73 (empty -> .) ]
>>>>>>> DirectorioFunciones

    function                       shift and go to state 12
    programaF                      shift and go to state 19
    empty                          shift and go to state 13

state 13

    (4) programaF -> empty .
    (6) function -> empty .

  ! reduce/reduce conflict for MAIN resolved using rule 4 (programaF -> empty .)
    MAIN            reduce using rule 4 (programaF -> empty .)
    FUNCTION        reduce using rule 6 (function -> empty .)

  ! MAIN            [ reduce using rule 6 (function -> empty .) ]


state 14

<<<<<<< HEAD
    (5) function -> FUNCTION . tipoRetorno ID ( functionParam ) bloque
    (7) tipoRetorno -> . INT
    (8) tipoRetorno -> . FLOAT
    (9) tipoRetorno -> . VOID
=======
    (5) function -> FUNCTION . tipoRetorno ID ( functionParam ) functionAux bloque
    (8) tipoRetorno -> . INT
    (9) tipoRetorno -> . FLOAT
    (10) tipoRetorno -> . VOID
>>>>>>> DirectorioFunciones

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    VOID            shift and go to state 23

    tipoRetorno                    shift and go to state 20

state 15

<<<<<<< HEAD
    (67) varsp -> tipo varspp . ; varsp
=======
    (62) varsp -> tipo varspp . ; varsp
>>>>>>> DirectorioFunciones

    ;               shift and go to state 24


state 16

<<<<<<< HEAD
    (69) varspp -> ID . varsppp
    (70) varsppp -> . , varspp
    (71) varsppp -> . empty
    (78) empty -> .

    ,               shift and go to state 26
    ;               reduce using rule 78 (empty -> .)
=======
    (64) varspp -> ID . varsppp
    (65) varsppp -> . , varspp
    (66) varsppp -> . empty
    (73) empty -> .

    ,               shift and go to state 26
    ;               reduce using rule 73 (empty -> .)
>>>>>>> DirectorioFunciones

    varsppp                        shift and go to state 25
    empty                          shift and go to state 27

state 17

    (1) programa -> ID ; vars programaF main .

    $end            reduce using rule 1 (programa -> ID ; vars programaF main .)


state 18

    (2) main -> MAIN . ( ) bloque

    (               shift and go to state 28


state 19

    (3) programaF -> function programaF .

    MAIN            reduce using rule 3 (programaF -> function programaF .)


state 20

<<<<<<< HEAD
    (5) function -> FUNCTION tipoRetorno . ID ( functionParam ) bloque
=======
    (5) function -> FUNCTION tipoRetorno . ID ( functionParam ) functionAux bloque
>>>>>>> DirectorioFunciones

    ID              shift and go to state 29


state 21

    (7) tipoRetorno -> INT .

    ID              reduce using rule 7 (tipoRetorno -> INT .)


state 22

    (8) tipoRetorno -> FLOAT .

    ID              reduce using rule 8 (tipoRetorno -> FLOAT .)


state 23

    (9) tipoRetorno -> VOID .

    ID              reduce using rule 9 (tipoRetorno -> VOID .)


state 24

<<<<<<< HEAD
    (67) varsp -> tipo varspp ; . varsp
    (67) varsp -> . tipo varspp ; varsp
    (68) varsp -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (78) empty -> .
=======
    (62) varsp -> tipo varspp ; . varsp
    (62) varsp -> . tipo varspp ; varsp
    (63) varsp -> . empty
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR
    (73) empty -> .
>>>>>>> DirectorioFunciones

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
<<<<<<< HEAD
    FUNCTION        reduce using rule 78 (empty -> .)
    MAIN            reduce using rule 78 (empty -> .)
    IF              reduce using rule 78 (empty -> .)
    WRITE           reduce using rule 78 (empty -> .)
    WHILE           reduce using rule 78 (empty -> .)
    RETURN          reduce using rule 78 (empty -> .)
    ID              reduce using rule 78 (empty -> .)
    }               reduce using rule 78 (empty -> .)

  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! FLOAT           [ reduce using rule 78 (empty -> .) ]
  ! CHAR            [ reduce using rule 78 (empty -> .) ]
=======
    FUNCTION        reduce using rule 73 (empty -> .)
    MAIN            reduce using rule 73 (empty -> .)
    IF              reduce using rule 73 (empty -> .)
    WRITE           reduce using rule 73 (empty -> .)
    WHILE           reduce using rule 73 (empty -> .)
    RETURN          reduce using rule 73 (empty -> .)
    ID              reduce using rule 73 (empty -> .)
    }               reduce using rule 73 (empty -> .)

  ! INT             [ reduce using rule 73 (empty -> .) ]
  ! FLOAT           [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]
>>>>>>> DirectorioFunciones

    tipo                           shift and go to state 6
    varsp                          shift and go to state 30
    empty                          shift and go to state 7

state 25

<<<<<<< HEAD
    (69) varspp -> ID varsppp .

    ;               reduce using rule 69 (varspp -> ID varsppp .)
=======
    (64) varspp -> ID varsppp .

    ;               reduce using rule 64 (varspp -> ID varsppp .)
>>>>>>> DirectorioFunciones


state 26

<<<<<<< HEAD
    (70) varsppp -> , . varspp
    (69) varspp -> . ID varsppp
=======
    (65) varsppp -> , . varspp
    (64) varspp -> . ID varsppp
>>>>>>> DirectorioFunciones

    ID              shift and go to state 16

    varspp                         shift and go to state 31

state 27

<<<<<<< HEAD
    (71) varsppp -> empty .

    ;               reduce using rule 71 (varsppp -> empty .)
=======
    (66) varsppp -> empty .

    ;               reduce using rule 66 (varsppp -> empty .)
>>>>>>> DirectorioFunciones


state 28

    (2) main -> MAIN ( . ) bloque

    )               shift and go to state 32


state 29

<<<<<<< HEAD
    (5) function -> FUNCTION tipoRetorno ID . ( functionParam ) bloque
=======
    (5) function -> FUNCTION tipoRetorno ID . ( functionParam ) functionAux bloque
>>>>>>> DirectorioFunciones

    (               shift and go to state 33


state 30

<<<<<<< HEAD
    (67) varsp -> tipo varspp ; varsp .

    FUNCTION        reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    MAIN            reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    IF              reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    WRITE           reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    WHILE           reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    RETURN          reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    ID              reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    INT             reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    FLOAT           reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    CHAR            reduce using rule 67 (varsp -> tipo varspp ; varsp .)
    }               reduce using rule 67 (varsp -> tipo varspp ; varsp .)
=======
    (62) varsp -> tipo varspp ; varsp .

    FUNCTION        reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    MAIN            reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    IF              reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    WRITE           reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    WHILE           reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    RETURN          reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    ID              reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    INT             reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    FLOAT           reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    CHAR            reduce using rule 62 (varsp -> tipo varspp ; varsp .)
    }               reduce using rule 62 (varsp -> tipo varspp ; varsp .)
>>>>>>> DirectorioFunciones


state 31

<<<<<<< HEAD
    (70) varsppp -> , varspp .

    ;               reduce using rule 70 (varsppp -> , varspp .)
=======
    (65) varsppp -> , varspp .

    ;               reduce using rule 65 (varsppp -> , varspp .)
>>>>>>> DirectorioFunciones


state 32

    (2) main -> MAIN ( ) . bloque
    (10) bloque -> . { cuerpo }

    {               shift and go to state 35

    bloque                         shift and go to state 34

state 33

<<<<<<< HEAD
    (5) function -> FUNCTION tipoRetorno ID ( . functionParam ) bloque
    (61) functionParam -> . parametro
    (62) functionParam -> . empty
    (63) parametro -> . tipo ID parametrop
    (78) empty -> .
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    )               reduce using rule 78 (empty -> .)
=======
    (5) function -> FUNCTION tipoRetorno ID ( . functionParam ) functionAux bloque
    (56) functionParam -> . parametro
    (57) functionParam -> . empty
    (58) parametro -> . tipo ID parametrop
    (73) empty -> .
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR

    )               reduce using rule 73 (empty -> .)
>>>>>>> DirectorioFunciones
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

    functionParam                  shift and go to state 36
    parametro                      shift and go to state 37
    empty                          shift and go to state 38
    tipo                           shift and go to state 39

state 34

    (2) main -> MAIN ( ) bloque .

    $end            reduce using rule 2 (main -> MAIN ( ) bloque .)


state 35

<<<<<<< HEAD
    (10) bloque -> { . cuerpo }
    (11) cuerpo -> . vars estatutop
    (66) vars -> . varsp
    (67) varsp -> . tipo varspp ; varsp
    (68) varsp -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
    (78) empty -> .
=======
    (11) bloque -> { . cuerpo }
    (12) cuerpo -> . vars estatutop
    (61) vars -> . varsp
    (62) varsp -> . tipo varspp ; varsp
    (63) varsp -> . empty
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR
    (73) empty -> .
>>>>>>> DirectorioFunciones

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
<<<<<<< HEAD
    IF              reduce using rule 78 (empty -> .)
    WRITE           reduce using rule 78 (empty -> .)
    WHILE           reduce using rule 78 (empty -> .)
    RETURN          reduce using rule 78 (empty -> .)
    ID              reduce using rule 78 (empty -> .)
    }               reduce using rule 78 (empty -> .)

  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! FLOAT           [ reduce using rule 78 (empty -> .) ]
  ! CHAR            [ reduce using rule 78 (empty -> .) ]
=======
    IF              reduce using rule 73 (empty -> .)
    WRITE           reduce using rule 73 (empty -> .)
    WHILE           reduce using rule 73 (empty -> .)
    RETURN          reduce using rule 73 (empty -> .)
    ID              reduce using rule 73 (empty -> .)
    }               reduce using rule 73 (empty -> .)

  ! INT             [ reduce using rule 73 (empty -> .) ]
  ! FLOAT           [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]
>>>>>>> DirectorioFunciones

    cuerpo                         shift and go to state 40
    vars                           shift and go to state 41
    varsp                          shift and go to state 5
    tipo                           shift and go to state 6
    empty                          shift and go to state 7

state 36

<<<<<<< HEAD
    (5) function -> FUNCTION tipoRetorno ID ( functionParam . ) bloque
=======
    (5) function -> FUNCTION tipoRetorno ID ( functionParam . ) functionAux bloque
>>>>>>> DirectorioFunciones

    )               shift and go to state 42


state 37

<<<<<<< HEAD
    (61) functionParam -> parametro .

    )               reduce using rule 61 (functionParam -> parametro .)
=======
    (56) functionParam -> parametro .

    )               reduce using rule 56 (functionParam -> parametro .)
>>>>>>> DirectorioFunciones


state 38

<<<<<<< HEAD
    (62) functionParam -> empty .

    )               reduce using rule 62 (functionParam -> empty .)


state 39

    (63) parametro -> tipo . ID parametrop

    ID              shift and go to state 43


state 40

    (10) bloque -> { cuerpo . }

    }               shift and go to state 44


state 41

    (11) cuerpo -> vars . estatutop
    (12) estatutop -> . estatuto estatutop
    (13) estatutop -> . empty
    (14) estatuto -> . asignacion
    (15) estatuto -> . condicion
    (16) estatuto -> . write
    (17) estatuto -> . while
    (18) estatuto -> . return
    (19) estatuto -> . empty
    (78) empty -> .
    (32) asignacion -> . vars
    (33) asignacion -> . id asignacionp
    (21) condicion -> . IF ( superexpresion ) bloque condicionelse
    (24) write -> . WRITE ( superexpresion ) ;
    (31) while -> . WHILE ( superexpresion ) bloque
    (20) return -> . RETURN superexpresion ;
    (66) vars -> . varsp
    (75) id -> . ID idp
    (67) varsp -> . tipo varspp ; varsp
    (68) varsp -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
=======
    (57) functionParam -> empty .

    )               reduce using rule 57 (functionParam -> empty .)


state 39

    (58) parametro -> tipo . ID parametrop

    ID              shift and go to state 43


state 40

    (11) bloque -> { cuerpo . }

    }               shift and go to state 44


state 41

    (12) cuerpo -> vars . estatutop
    (13) estatutop -> . estatuto estatutop
    (14) estatutop -> . empty
    (15) estatuto -> . asignacion
    (16) estatuto -> . condicion
    (17) estatuto -> . write
    (18) estatuto -> . while
    (19) estatuto -> . return
    (20) estatuto -> . empty
    (73) empty -> .
    (27) asignacion -> . vars
    (28) asignacion -> . id asignacionp
    (22) condicion -> . IF ( superexpresion ) bloque condicionelse
    (25) write -> . WRITE ( superexpresion ) ;
    (26) while -> . WHILE ( superexpresion ) bloque
    (21) return -> . RETURN superexpresion ;
    (61) vars -> . varsp
    (70) id -> . ID idp
    (62) varsp -> . tipo varspp ; varsp
    (63) varsp -> . empty
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    }               reduce using rule 73 (empty -> .)
    IF              shift and go to state 55
    WRITE           shift and go to state 56
    WHILE           shift and go to state 57
    RETURN          shift and go to state 58
    ID              shift and go to state 59
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

  ! IF              [ reduce using rule 73 (empty -> .) ]
  ! WRITE           [ reduce using rule 73 (empty -> .) ]
  ! WHILE           [ reduce using rule 73 (empty -> .) ]
  ! RETURN          [ reduce using rule 73 (empty -> .) ]
  ! ID              [ reduce using rule 73 (empty -> .) ]
  ! INT             [ reduce using rule 73 (empty -> .) ]
  ! FLOAT           [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]

    vars                           shift and go to state 45
    estatutop                      shift and go to state 46
    estatuto                       shift and go to state 47
    empty                          shift and go to state 48
    asignacion                     shift and go to state 49
    condicion                      shift and go to state 50
    write                          shift and go to state 51
    while                          shift and go to state 52
    return                         shift and go to state 53
    id                             shift and go to state 54
    varsp                          shift and go to state 5
    tipo                           shift and go to state 6

state 42

    (5) function -> FUNCTION tipoRetorno ID ( functionParam ) . functionAux bloque
    (7) functionAux -> .

    {               reduce using rule 7 (functionAux -> .)

    functionAux                    shift and go to state 60

state 43

    (58) parametro -> tipo ID . parametrop
    (59) parametrop -> . , parametro
    (60) parametrop -> . empty
    (73) empty -> .

    ,               shift and go to state 62
    )               reduce using rule 73 (empty -> .)

    parametrop                     shift and go to state 61
    empty                          shift and go to state 63

state 44

    (11) bloque -> { cuerpo } .

    $end            reduce using rule 11 (bloque -> { cuerpo } .)
    FUNCTION        reduce using rule 11 (bloque -> { cuerpo } .)
    MAIN            reduce using rule 11 (bloque -> { cuerpo } .)
    ELSE            reduce using rule 11 (bloque -> { cuerpo } .)
    IF              reduce using rule 11 (bloque -> { cuerpo } .)
    WRITE           reduce using rule 11 (bloque -> { cuerpo } .)
    WHILE           reduce using rule 11 (bloque -> { cuerpo } .)
    RETURN          reduce using rule 11 (bloque -> { cuerpo } .)
    ID              reduce using rule 11 (bloque -> { cuerpo } .)
    INT             reduce using rule 11 (bloque -> { cuerpo } .)
    FLOAT           reduce using rule 11 (bloque -> { cuerpo } .)
    CHAR            reduce using rule 11 (bloque -> { cuerpo } .)
    }               reduce using rule 11 (bloque -> { cuerpo } .)


state 45

    (27) asignacion -> vars .

    IF              reduce using rule 27 (asignacion -> vars .)
    WRITE           reduce using rule 27 (asignacion -> vars .)
    WHILE           reduce using rule 27 (asignacion -> vars .)
    RETURN          reduce using rule 27 (asignacion -> vars .)
    ID              reduce using rule 27 (asignacion -> vars .)
    INT             reduce using rule 27 (asignacion -> vars .)
    FLOAT           reduce using rule 27 (asignacion -> vars .)
    CHAR            reduce using rule 27 (asignacion -> vars .)
    }               reduce using rule 27 (asignacion -> vars .)


state 46

    (12) cuerpo -> vars estatutop .

    }               reduce using rule 12 (cuerpo -> vars estatutop .)


state 47

    (13) estatutop -> estatuto . estatutop
    (13) estatutop -> . estatuto estatutop
    (14) estatutop -> . empty
    (15) estatuto -> . asignacion
    (16) estatuto -> . condicion
    (17) estatuto -> . write
    (18) estatuto -> . while
    (19) estatuto -> . return
    (20) estatuto -> . empty
    (73) empty -> .
    (27) asignacion -> . vars
    (28) asignacion -> . id asignacionp
    (22) condicion -> . IF ( superexpresion ) bloque condicionelse
    (25) write -> . WRITE ( superexpresion ) ;
    (26) while -> . WHILE ( superexpresion ) bloque
    (21) return -> . RETURN superexpresion ;
    (61) vars -> . varsp
    (70) id -> . ID idp
    (62) varsp -> . tipo varspp ; varsp
    (63) varsp -> . empty
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR
>>>>>>> DirectorioFunciones

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
<<<<<<< HEAD
    }               reduce using rule 78 (empty -> .)
=======
    }               reduce using rule 73 (empty -> .)
>>>>>>> DirectorioFunciones
    IF              shift and go to state 55
    WRITE           shift and go to state 56
    WHILE           shift and go to state 57
    RETURN          shift and go to state 58
    ID              shift and go to state 59
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

<<<<<<< HEAD
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! WRITE           [ reduce using rule 78 (empty -> .) ]
  ! WHILE           [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! ID              [ reduce using rule 78 (empty -> .) ]
  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! FLOAT           [ reduce using rule 78 (empty -> .) ]
  ! CHAR            [ reduce using rule 78 (empty -> .) ]

    vars                           shift and go to state 45
    estatutop                      shift and go to state 46
    estatuto                       shift and go to state 47
=======
  ! IF              [ reduce using rule 73 (empty -> .) ]
  ! WRITE           [ reduce using rule 73 (empty -> .) ]
  ! WHILE           [ reduce using rule 73 (empty -> .) ]
  ! RETURN          [ reduce using rule 73 (empty -> .) ]
  ! ID              [ reduce using rule 73 (empty -> .) ]
  ! INT             [ reduce using rule 73 (empty -> .) ]
  ! FLOAT           [ reduce using rule 73 (empty -> .) ]
  ! CHAR            [ reduce using rule 73 (empty -> .) ]

    estatuto                       shift and go to state 47
    estatutop                      shift and go to state 64
>>>>>>> DirectorioFunciones
    empty                          shift and go to state 48
    asignacion                     shift and go to state 49
    condicion                      shift and go to state 50
    write                          shift and go to state 51
    while                          shift and go to state 52
    return                         shift and go to state 53
<<<<<<< HEAD
=======
    vars                           shift and go to state 45
>>>>>>> DirectorioFunciones
    id                             shift and go to state 54
    varsp                          shift and go to state 5
    tipo                           shift and go to state 6

<<<<<<< HEAD
state 42

    (5) function -> FUNCTION tipoRetorno ID ( functionParam ) . bloque
    (10) bloque -> . { cuerpo }

    {               shift and go to state 35

    bloque                         shift and go to state 60

state 43

    (63) parametro -> tipo ID . parametrop
    (64) parametrop -> . , parametro
    (65) parametrop -> . empty
    (78) empty -> .

    ,               shift and go to state 62
    )               reduce using rule 78 (empty -> .)

    parametrop                     shift and go to state 61
    empty                          shift and go to state 63

state 44

    (10) bloque -> { cuerpo } .

    $end            reduce using rule 10 (bloque -> { cuerpo } .)
    FUNCTION        reduce using rule 10 (bloque -> { cuerpo } .)
    MAIN            reduce using rule 10 (bloque -> { cuerpo } .)
    ELSE            reduce using rule 10 (bloque -> { cuerpo } .)
    IF              reduce using rule 10 (bloque -> { cuerpo } .)
    WRITE           reduce using rule 10 (bloque -> { cuerpo } .)
    WHILE           reduce using rule 10 (bloque -> { cuerpo } .)
    RETURN          reduce using rule 10 (bloque -> { cuerpo } .)
    ID              reduce using rule 10 (bloque -> { cuerpo } .)
    INT             reduce using rule 10 (bloque -> { cuerpo } .)
    FLOAT           reduce using rule 10 (bloque -> { cuerpo } .)
    CHAR            reduce using rule 10 (bloque -> { cuerpo } .)
    }               reduce using rule 10 (bloque -> { cuerpo } .)


state 45

    (32) asignacion -> vars .

    IF              reduce using rule 32 (asignacion -> vars .)
    WRITE           reduce using rule 32 (asignacion -> vars .)
    WHILE           reduce using rule 32 (asignacion -> vars .)
    RETURN          reduce using rule 32 (asignacion -> vars .)
    ID              reduce using rule 32 (asignacion -> vars .)
    INT             reduce using rule 32 (asignacion -> vars .)
    FLOAT           reduce using rule 32 (asignacion -> vars .)
    CHAR            reduce using rule 32 (asignacion -> vars .)
    }               reduce using rule 32 (asignacion -> vars .)


state 46

    (11) cuerpo -> vars estatutop .

    }               reduce using rule 11 (cuerpo -> vars estatutop .)


state 47

    (12) estatutop -> estatuto . estatutop
    (12) estatutop -> . estatuto estatutop
    (13) estatutop -> . empty
    (14) estatuto -> . asignacion
    (15) estatuto -> . condicion
    (16) estatuto -> . write
    (17) estatuto -> . while
    (18) estatuto -> . return
    (19) estatuto -> . empty
    (78) empty -> .
    (32) asignacion -> . vars
    (33) asignacion -> . id asignacionp
    (21) condicion -> . IF ( superexpresion ) bloque condicionelse
    (24) write -> . WRITE ( superexpresion ) ;
    (31) while -> . WHILE ( superexpresion ) bloque
    (20) return -> . RETURN superexpresion ;
    (66) vars -> . varsp
    (75) id -> . ID idp
    (67) varsp -> . tipo varspp ; varsp
    (68) varsp -> . empty
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR
=======
state 48

    (14) estatutop -> empty .
    (20) estatuto -> empty .
    (63) varsp -> empty .
>>>>>>> DirectorioFunciones

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    }               reduce using rule 78 (empty -> .)
    IF              shift and go to state 55
    WRITE           shift and go to state 56
    WHILE           shift and go to state 57
    RETURN          shift and go to state 58
    ID              shift and go to state 59
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

<<<<<<< HEAD
  ! IF              [ reduce using rule 78 (empty -> .) ]
  ! WRITE           [ reduce using rule 78 (empty -> .) ]
  ! WHILE           [ reduce using rule 78 (empty -> .) ]
  ! RETURN          [ reduce using rule 78 (empty -> .) ]
  ! ID              [ reduce using rule 78 (empty -> .) ]
  ! INT             [ reduce using rule 78 (empty -> .) ]
  ! FLOAT           [ reduce using rule 78 (empty -> .) ]
  ! CHAR            [ reduce using rule 78 (empty -> .) ]
=======
  ! }               [ reduce using rule 20 (estatuto -> empty .) ]
  ! IF              [ reduce using rule 63 (varsp -> empty .) ]
  ! WRITE           [ reduce using rule 63 (varsp -> empty .) ]
  ! WHILE           [ reduce using rule 63 (varsp -> empty .) ]
  ! RETURN          [ reduce using rule 63 (varsp -> empty .) ]
  ! ID              [ reduce using rule 63 (varsp -> empty .) ]
  ! INT             [ reduce using rule 63 (varsp -> empty .) ]
  ! FLOAT           [ reduce using rule 63 (varsp -> empty .) ]
  ! CHAR            [ reduce using rule 63 (varsp -> empty .) ]
  ! }               [ reduce using rule 63 (varsp -> empty .) ]
>>>>>>> DirectorioFunciones

    estatuto                       shift and go to state 47
    estatutop                      shift and go to state 64
    empty                          shift and go to state 48
    asignacion                     shift and go to state 49
    condicion                      shift and go to state 50
    write                          shift and go to state 51
    while                          shift and go to state 52
    return                         shift and go to state 53
    vars                           shift and go to state 45
    id                             shift and go to state 54
    varsp                          shift and go to state 5
    tipo                           shift and go to state 6

state 49

    (13) estatutop -> empty .
    (19) estatuto -> empty .
    (68) varsp -> empty .

  ! reduce/reduce conflict for } resolved using rule 13 (estatutop -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 19 (estatuto -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 19 (estatuto -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 19 (estatuto -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 19 (estatuto -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 19 (estatuto -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 19 (estatuto -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 19 (estatuto -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 19 (estatuto -> empty .)
  ! reduce/reduce conflict for } resolved using rule 13 (estatutop -> empty .)
    }               reduce using rule 13 (estatutop -> empty .)
    IF              reduce using rule 19 (estatuto -> empty .)
    WRITE           reduce using rule 19 (estatuto -> empty .)
    WHILE           reduce using rule 19 (estatuto -> empty .)
    RETURN          reduce using rule 19 (estatuto -> empty .)
    ID              reduce using rule 19 (estatuto -> empty .)
    INT             reduce using rule 19 (estatuto -> empty .)
    FLOAT           reduce using rule 19 (estatuto -> empty .)
    CHAR            reduce using rule 19 (estatuto -> empty .)

  ! }               [ reduce using rule 19 (estatuto -> empty .) ]
  ! IF              [ reduce using rule 68 (varsp -> empty .) ]
  ! WRITE           [ reduce using rule 68 (varsp -> empty .) ]
  ! WHILE           [ reduce using rule 68 (varsp -> empty .) ]
  ! RETURN          [ reduce using rule 68 (varsp -> empty .) ]
  ! ID              [ reduce using rule 68 (varsp -> empty .) ]
  ! INT             [ reduce using rule 68 (varsp -> empty .) ]
  ! FLOAT           [ reduce using rule 68 (varsp -> empty .) ]
  ! CHAR            [ reduce using rule 68 (varsp -> empty .) ]
  ! }               [ reduce using rule 68 (varsp -> empty .) ]


state 50

    (14) estatuto -> asignacion .

    IF              reduce using rule 14 (estatuto -> asignacion .)
    WRITE           reduce using rule 14 (estatuto -> asignacion .)
    WHILE           reduce using rule 14 (estatuto -> asignacion .)
    RETURN          reduce using rule 14 (estatuto -> asignacion .)
    ID              reduce using rule 14 (estatuto -> asignacion .)
    INT             reduce using rule 14 (estatuto -> asignacion .)
    FLOAT           reduce using rule 14 (estatuto -> asignacion .)
    CHAR            reduce using rule 14 (estatuto -> asignacion .)
    }               reduce using rule 14 (estatuto -> asignacion .)


state 51

    (15) estatuto -> condicion .

    IF              reduce using rule 15 (estatuto -> condicion .)
    WRITE           reduce using rule 15 (estatuto -> condicion .)
    WHILE           reduce using rule 15 (estatuto -> condicion .)
    RETURN          reduce using rule 15 (estatuto -> condicion .)
    ID              reduce using rule 15 (estatuto -> condicion .)
    INT             reduce using rule 15 (estatuto -> condicion .)
    FLOAT           reduce using rule 15 (estatuto -> condicion .)
    CHAR            reduce using rule 15 (estatuto -> condicion .)
    }               reduce using rule 15 (estatuto -> condicion .)


state 52

    (16) estatuto -> write .

    IF              reduce using rule 16 (estatuto -> write .)
    WRITE           reduce using rule 16 (estatuto -> write .)
    WHILE           reduce using rule 16 (estatuto -> write .)
    RETURN          reduce using rule 16 (estatuto -> write .)
    ID              reduce using rule 16 (estatuto -> write .)
    INT             reduce using rule 16 (estatuto -> write .)
    FLOAT           reduce using rule 16 (estatuto -> write .)
    CHAR            reduce using rule 16 (estatuto -> write .)
    }               reduce using rule 16 (estatuto -> write .)


state 53

    (17) estatuto -> while .

    IF              reduce using rule 17 (estatuto -> while .)
    WRITE           reduce using rule 17 (estatuto -> while .)
    WHILE           reduce using rule 17 (estatuto -> while .)
    RETURN          reduce using rule 17 (estatuto -> while .)
    ID              reduce using rule 17 (estatuto -> while .)
    INT             reduce using rule 17 (estatuto -> while .)
    FLOAT           reduce using rule 17 (estatuto -> while .)
    CHAR            reduce using rule 17 (estatuto -> while .)
    }               reduce using rule 17 (estatuto -> while .)


<<<<<<< HEAD
state 53

    (18) estatuto -> return .

    IF              reduce using rule 18 (estatuto -> return .)
    WRITE           reduce using rule 18 (estatuto -> return .)
    WHILE           reduce using rule 18 (estatuto -> return .)
    RETURN          reduce using rule 18 (estatuto -> return .)
    ID              reduce using rule 18 (estatuto -> return .)
    INT             reduce using rule 18 (estatuto -> return .)
    FLOAT           reduce using rule 18 (estatuto -> return .)
    CHAR            reduce using rule 18 (estatuto -> return .)
    }               reduce using rule 18 (estatuto -> return .)


state 54

    (33) asignacion -> id . asignacionp
    (34) asignacionp -> . = superexpresion ;
    (35) asignacionp -> . [ superexpresion ] ;
=======
state 54

    (28) asignacion -> id . asignacionp
    (29) asignacionp -> . = superexpresion ;
    (30) asignacionp -> . [ superexpresion ] ;
>>>>>>> DirectorioFunciones

    =               shift and go to state 66
    [               shift and go to state 67

    asignacionp                    shift and go to state 65

state 55

<<<<<<< HEAD
    (21) condicion -> IF . ( superexpresion ) bloque condicionelse
=======
    (22) condicion -> IF . ( superexpresion ) bloque condicionelse
>>>>>>> DirectorioFunciones

    (               shift and go to state 68


state 56

<<<<<<< HEAD
    (24) write -> WRITE . ( superexpresion ) ;
=======
    (25) write -> WRITE . ( superexpresion ) ;
>>>>>>> DirectorioFunciones

    (               shift and go to state 69


state 57

<<<<<<< HEAD
    (31) while -> WHILE . ( superexpresion ) bloque
=======
    (26) while -> WHILE . ( superexpresion ) bloque
>>>>>>> DirectorioFunciones

    (               shift and go to state 70


state 58

<<<<<<< HEAD
    (20) return -> RETURN . superexpresion ;
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (21) return -> RETURN . superexpresion ;
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    superexpresion                 shift and go to state 71
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 59

<<<<<<< HEAD
    (75) id -> ID . idp
    (76) idp -> . [ superexpresion ]
    (77) idp -> . empty
    (78) empty -> .
=======
    (70) id -> ID . idp
    (71) idp -> . [ superexpresion ]
    (72) idp -> . empty
    (73) empty -> .

  ! shift/reduce conflict for [ resolved as shift
    [               shift and go to state 82
    =               reduce using rule 73 (empty -> .)
    *               reduce using rule 73 (empty -> .)
    /               reduce using rule 73 (empty -> .)
    +               reduce using rule 73 (empty -> .)
    -               reduce using rule 73 (empty -> .)
    <               reduce using rule 73 (empty -> .)
    >               reduce using rule 73 (empty -> .)
    EQUALS          reduce using rule 73 (empty -> .)
    DIFF            reduce using rule 73 (empty -> .)
    LTHANEQ         reduce using rule 73 (empty -> .)
    GTHANEQ         reduce using rule 73 (empty -> .)
    AND             reduce using rule 73 (empty -> .)
    OR              reduce using rule 73 (empty -> .)
    ;               reduce using rule 73 (empty -> .)
    ]               reduce using rule 73 (empty -> .)
    )               reduce using rule 73 (empty -> .)

  ! [               [ reduce using rule 73 (empty -> .) ]

    idp                            shift and go to state 81
    empty                          shift and go to state 83

state 60

    (5) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux . bloque
    (11) bloque -> . { cuerpo }
>>>>>>> DirectorioFunciones

  ! shift/reduce conflict for [ resolved as shift
    [               shift and go to state 82
    =               reduce using rule 78 (empty -> .)
    *               reduce using rule 78 (empty -> .)
    /               reduce using rule 78 (empty -> .)
    +               reduce using rule 78 (empty -> .)
    -               reduce using rule 78 (empty -> .)
    <               reduce using rule 78 (empty -> .)
    >               reduce using rule 78 (empty -> .)
    EQUALS          reduce using rule 78 (empty -> .)
    DIFF            reduce using rule 78 (empty -> .)
    LTHANEQ         reduce using rule 78 (empty -> .)
    GTHANEQ         reduce using rule 78 (empty -> .)
    AND             reduce using rule 78 (empty -> .)
    OR              reduce using rule 78 (empty -> .)
    ;               reduce using rule 78 (empty -> .)
    ]               reduce using rule 78 (empty -> .)
    )               reduce using rule 78 (empty -> .)

<<<<<<< HEAD
  ! [               [ reduce using rule 78 (empty -> .) ]

    idp                            shift and go to state 81
    empty                          shift and go to state 83

state 60

    (5) function -> FUNCTION tipoRetorno ID ( functionParam ) bloque .

    FUNCTION        reduce using rule 5 (function -> FUNCTION tipoRetorno ID ( functionParam ) bloque .)
    MAIN            reduce using rule 5 (function -> FUNCTION tipoRetorno ID ( functionParam ) bloque .)


state 61

    (63) parametro -> tipo ID parametrop .
=======
    bloque                         shift and go to state 84

state 61

    (58) parametro -> tipo ID parametrop .

    )               reduce using rule 58 (parametro -> tipo ID parametrop .)


state 62

    (59) parametrop -> , . parametro
    (58) parametro -> . tipo ID parametrop
    (67) tipo -> . INT
    (68) tipo -> . FLOAT
    (69) tipo -> . CHAR

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

    parametro                      shift and go to state 85
    tipo                           shift and go to state 39

state 63

    (60) parametrop -> empty .

    )               reduce using rule 60 (parametrop -> empty .)


state 64

    (13) estatutop -> estatuto estatutop .
>>>>>>> DirectorioFunciones

    )               reduce using rule 63 (parametro -> tipo ID parametrop .)


<<<<<<< HEAD
state 62

    (64) parametrop -> , . parametro
    (63) parametro -> . tipo ID parametrop
    (72) tipo -> . INT
    (73) tipo -> . FLOAT
    (74) tipo -> . CHAR

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10

    parametro                      shift and go to state 84
    tipo                           shift and go to state 39

state 63

    (65) parametrop -> empty .

    )               reduce using rule 65 (parametrop -> empty .)


state 64

    (12) estatutop -> estatuto estatutop .

    }               reduce using rule 12 (estatutop -> estatuto estatutop .)


state 65

    (33) asignacion -> id asignacionp .

    IF              reduce using rule 33 (asignacion -> id asignacionp .)
    WRITE           reduce using rule 33 (asignacion -> id asignacionp .)
    WHILE           reduce using rule 33 (asignacion -> id asignacionp .)
    RETURN          reduce using rule 33 (asignacion -> id asignacionp .)
    ID              reduce using rule 33 (asignacion -> id asignacionp .)
    INT             reduce using rule 33 (asignacion -> id asignacionp .)
    FLOAT           reduce using rule 33 (asignacion -> id asignacionp .)
    CHAR            reduce using rule 33 (asignacion -> id asignacionp .)
    }               reduce using rule 33 (asignacion -> id asignacionp .)
=======
state 65

    (28) asignacion -> id asignacionp .

    IF              reduce using rule 28 (asignacion -> id asignacionp .)
    WRITE           reduce using rule 28 (asignacion -> id asignacionp .)
    WHILE           reduce using rule 28 (asignacion -> id asignacionp .)
    RETURN          reduce using rule 28 (asignacion -> id asignacionp .)
    ID              reduce using rule 28 (asignacion -> id asignacionp .)
    INT             reduce using rule 28 (asignacion -> id asignacionp .)
    FLOAT           reduce using rule 28 (asignacion -> id asignacionp .)
    CHAR            reduce using rule 28 (asignacion -> id asignacionp .)
    }               reduce using rule 28 (asignacion -> id asignacionp .)
>>>>>>> DirectorioFunciones


state 66

<<<<<<< HEAD
    (34) asignacionp -> = . superexpresion ;
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (29) asignacionp -> = . superexpresion ;
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

<<<<<<< HEAD
    superexpresion                 shift and go to state 85
=======
    superexpresion                 shift and go to state 86
>>>>>>> DirectorioFunciones
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 67

<<<<<<< HEAD
    (35) asignacionp -> [ . superexpresion ] ;
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (30) asignacionp -> [ . superexpresion ] ;
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

<<<<<<< HEAD
    superexpresion                 shift and go to state 86
=======
    superexpresion                 shift and go to state 87
>>>>>>> DirectorioFunciones
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 68

<<<<<<< HEAD
    (21) condicion -> IF ( . superexpresion ) bloque condicionelse
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    superexpresion                 shift and go to state 87
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 69

    (24) write -> WRITE ( . superexpresion ) ;
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    superexpresion                 shift and go to state 88
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 70

    (31) while -> WHILE ( . superexpresion ) bloque
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    superexpresion                 shift and go to state 89
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 71

    (20) return -> RETURN superexpresion . ;
=======
    (22) condicion -> IF ( . superexpresion ) bloque condicionelse
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    superexpresion                 shift and go to state 88
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 72

<<<<<<< HEAD
    (36) superexpresion -> megaexpresion . superexpresionp
    (37) superexpresionp -> . AND superexpresion
    (38) superexpresionp -> . OR superexpresion
    (39) superexpresionp -> . empty
    (78) empty -> .

    AND             shift and go to state 92
    OR              shift and go to state 93
    ;               reduce using rule 78 (empty -> .)
    ]               reduce using rule 78 (empty -> .)
    )               reduce using rule 78 (empty -> .)
=======
    (25) write -> WRITE ( . superexpresion ) ;
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59
>>>>>>> DirectorioFunciones

    superexpresion                 shift and go to state 89
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 73

<<<<<<< HEAD
    (40) megaexpresion -> exp . megaexpresionp
    (41) megaexpresionp -> . < exp
    (42) megaexpresionp -> . > exp
    (43) megaexpresionp -> . EQUALS exp
    (44) megaexpresionp -> . DIFF exp
    (45) megaexpresionp -> . LTHANEQ exp
    (46) megaexpresionp -> . GTHANEQ exp
    (47) megaexpresionp -> . empty
    (78) empty -> .

    <               shift and go to state 96
    >               shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    LTHANEQ         shift and go to state 100
    GTHANEQ         shift and go to state 101
    AND             reduce using rule 78 (empty -> .)
    OR              reduce using rule 78 (empty -> .)
    ;               reduce using rule 78 (empty -> .)
    ]               reduce using rule 78 (empty -> .)
    )               reduce using rule 78 (empty -> .)
=======
    (26) while -> WHILE ( . superexpresion ) bloque
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59
>>>>>>> DirectorioFunciones

    superexpresion                 shift and go to state 90
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 74

<<<<<<< HEAD
    (48) exp -> termino . expp
    (49) expp -> . + exp
    (50) expp -> . - exp
    (51) expp -> . empty
    (78) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    +               shift and go to state 104
    -               shift and go to state 105
    <               reduce using rule 78 (empty -> .)
    >               reduce using rule 78 (empty -> .)
    EQUALS          reduce using rule 78 (empty -> .)
    DIFF            reduce using rule 78 (empty -> .)
    LTHANEQ         reduce using rule 78 (empty -> .)
    GTHANEQ         reduce using rule 78 (empty -> .)
    AND             reduce using rule 78 (empty -> .)
    OR              reduce using rule 78 (empty -> .)
    ;               reduce using rule 78 (empty -> .)
    ]               reduce using rule 78 (empty -> .)
    )               reduce using rule 78 (empty -> .)

  ! +               [ reduce using rule 78 (empty -> .) ]
  ! -               [ reduce using rule 78 (empty -> .) ]

    expp                           shift and go to state 103
    empty                          shift and go to state 106
=======
    (21) return -> RETURN superexpresion . ;

    ;               shift and go to state 91

>>>>>>> DirectorioFunciones

state 75

<<<<<<< HEAD
    (52) termino -> factor . terminop
    (53) terminop -> . * exp
    (54) terminop -> . / exp
    (55) terminop -> . empty
    (78) empty -> .

    *               shift and go to state 108
    /               shift and go to state 109
    +               reduce using rule 78 (empty -> .)
    -               reduce using rule 78 (empty -> .)
    <               reduce using rule 78 (empty -> .)
    >               reduce using rule 78 (empty -> .)
    EQUALS          reduce using rule 78 (empty -> .)
    DIFF            reduce using rule 78 (empty -> .)
    LTHANEQ         reduce using rule 78 (empty -> .)
    GTHANEQ         reduce using rule 78 (empty -> .)
    AND             reduce using rule 78 (empty -> .)
    OR              reduce using rule 78 (empty -> .)
    ;               reduce using rule 78 (empty -> .)
    ]               reduce using rule 78 (empty -> .)
    )               reduce using rule 78 (empty -> .)
=======
    (31) superexpresion -> megaexpresion . superexpresionp
    (32) superexpresionp -> . AND superexpresion
    (33) superexpresionp -> . OR superexpresion
    (34) superexpresionp -> . empty
    (73) empty -> .

    AND             shift and go to state 93
    OR              shift and go to state 94
    ;               reduce using rule 73 (empty -> .)
    ]               reduce using rule 73 (empty -> .)
    )               reduce using rule 73 (empty -> .)
>>>>>>> DirectorioFunciones

    superexpresionp                shift and go to state 92
    empty                          shift and go to state 95

<<<<<<< HEAD
state 76

    (56) factor -> constante .

    *               reduce using rule 56 (factor -> constante .)
    /               reduce using rule 56 (factor -> constante .)
    +               reduce using rule 56 (factor -> constante .)
    -               reduce using rule 56 (factor -> constante .)
    <               reduce using rule 56 (factor -> constante .)
    >               reduce using rule 56 (factor -> constante .)
    EQUALS          reduce using rule 56 (factor -> constante .)
    DIFF            reduce using rule 56 (factor -> constante .)
    LTHANEQ         reduce using rule 56 (factor -> constante .)
    GTHANEQ         reduce using rule 56 (factor -> constante .)
    AND             reduce using rule 56 (factor -> constante .)
    OR              reduce using rule 56 (factor -> constante .)
    ;               reduce using rule 56 (factor -> constante .)
    ]               reduce using rule 56 (factor -> constante .)
    )               reduce using rule 56 (factor -> constante .)
=======
state 73

    (35) megaexpresion -> exp . megaexpresionp
    (36) megaexpresionp -> . < exp
    (37) megaexpresionp -> . > exp
    (38) megaexpresionp -> . EQUALS exp
    (39) megaexpresionp -> . DIFF exp
    (40) megaexpresionp -> . LTHANEQ exp
    (41) megaexpresionp -> . GTHANEQ exp
    (42) megaexpresionp -> . empty
    (73) empty -> .

    <               shift and go to state 97
    >               shift and go to state 98
    EQUALS          shift and go to state 99
    DIFF            shift and go to state 100
    LTHANEQ         shift and go to state 101
    GTHANEQ         shift and go to state 102
    AND             reduce using rule 73 (empty -> .)
    OR              reduce using rule 73 (empty -> .)
    ;               reduce using rule 73 (empty -> .)
    ]               reduce using rule 73 (empty -> .)
    )               reduce using rule 73 (empty -> .)

    megaexpresionp                 shift and go to state 96
    empty                          shift and go to state 103

state 74

    (43) exp -> termino . expp
    (44) expp -> . + exp
    (45) expp -> . - exp
    (46) expp -> . empty
    (73) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    +               shift and go to state 105
    -               shift and go to state 106
    <               reduce using rule 73 (empty -> .)
    >               reduce using rule 73 (empty -> .)
    EQUALS          reduce using rule 73 (empty -> .)
    DIFF            reduce using rule 73 (empty -> .)
    LTHANEQ         reduce using rule 73 (empty -> .)
    GTHANEQ         reduce using rule 73 (empty -> .)
    AND             reduce using rule 73 (empty -> .)
    OR              reduce using rule 73 (empty -> .)
    ;               reduce using rule 73 (empty -> .)
    ]               reduce using rule 73 (empty -> .)
    )               reduce using rule 73 (empty -> .)

  ! +               [ reduce using rule 73 (empty -> .) ]
  ! -               [ reduce using rule 73 (empty -> .) ]

    expp                           shift and go to state 104
    empty                          shift and go to state 107

state 75

    (47) termino -> factor . terminop
    (48) terminop -> . * exp
    (49) terminop -> . / exp
    (50) terminop -> . empty
    (73) empty -> .

    *               shift and go to state 109
    /               shift and go to state 110
    +               reduce using rule 73 (empty -> .)
    -               reduce using rule 73 (empty -> .)
    <               reduce using rule 73 (empty -> .)
    >               reduce using rule 73 (empty -> .)
    EQUALS          reduce using rule 73 (empty -> .)
    DIFF            reduce using rule 73 (empty -> .)
    LTHANEQ         reduce using rule 73 (empty -> .)
    GTHANEQ         reduce using rule 73 (empty -> .)
    AND             reduce using rule 73 (empty -> .)
    OR              reduce using rule 73 (empty -> .)
    ;               reduce using rule 73 (empty -> .)
    ]               reduce using rule 73 (empty -> .)
    )               reduce using rule 73 (empty -> .)

    terminop                       shift and go to state 108
    empty                          shift and go to state 111

state 76

    (51) factor -> constante .

    *               reduce using rule 51 (factor -> constante .)
    /               reduce using rule 51 (factor -> constante .)
    +               reduce using rule 51 (factor -> constante .)
    -               reduce using rule 51 (factor -> constante .)
    <               reduce using rule 51 (factor -> constante .)
    >               reduce using rule 51 (factor -> constante .)
    EQUALS          reduce using rule 51 (factor -> constante .)
    DIFF            reduce using rule 51 (factor -> constante .)
    LTHANEQ         reduce using rule 51 (factor -> constante .)
    GTHANEQ         reduce using rule 51 (factor -> constante .)
    AND             reduce using rule 51 (factor -> constante .)
    OR              reduce using rule 51 (factor -> constante .)
    ;               reduce using rule 51 (factor -> constante .)
    ]               reduce using rule 51 (factor -> constante .)
    )               reduce using rule 51 (factor -> constante .)
>>>>>>> DirectorioFunciones


state 77

<<<<<<< HEAD
    (57) factor -> ( . superexpresion )
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (52) factor -> ( . superexpresion )
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

<<<<<<< HEAD
    superexpresion                 shift and go to state 111
=======
    superexpresion                 shift and go to state 112
>>>>>>> DirectorioFunciones
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 78

<<<<<<< HEAD
    (58) constante -> id .

    *               reduce using rule 58 (constante -> id .)
    /               reduce using rule 58 (constante -> id .)
    +               reduce using rule 58 (constante -> id .)
    -               reduce using rule 58 (constante -> id .)
    <               reduce using rule 58 (constante -> id .)
    >               reduce using rule 58 (constante -> id .)
    EQUALS          reduce using rule 58 (constante -> id .)
    DIFF            reduce using rule 58 (constante -> id .)
    LTHANEQ         reduce using rule 58 (constante -> id .)
    GTHANEQ         reduce using rule 58 (constante -> id .)
    AND             reduce using rule 58 (constante -> id .)
    OR              reduce using rule 58 (constante -> id .)
    ;               reduce using rule 58 (constante -> id .)
    ]               reduce using rule 58 (constante -> id .)
    )               reduce using rule 58 (constante -> id .)
=======
    (53) constante -> id .

    *               reduce using rule 53 (constante -> id .)
    /               reduce using rule 53 (constante -> id .)
    +               reduce using rule 53 (constante -> id .)
    -               reduce using rule 53 (constante -> id .)
    <               reduce using rule 53 (constante -> id .)
    >               reduce using rule 53 (constante -> id .)
    EQUALS          reduce using rule 53 (constante -> id .)
    DIFF            reduce using rule 53 (constante -> id .)
    LTHANEQ         reduce using rule 53 (constante -> id .)
    GTHANEQ         reduce using rule 53 (constante -> id .)
    AND             reduce using rule 53 (constante -> id .)
    OR              reduce using rule 53 (constante -> id .)
    ;               reduce using rule 53 (constante -> id .)
    ]               reduce using rule 53 (constante -> id .)
    )               reduce using rule 53 (constante -> id .)
>>>>>>> DirectorioFunciones


state 79

<<<<<<< HEAD
    (59) constante -> CTEF .

    *               reduce using rule 59 (constante -> CTEF .)
    /               reduce using rule 59 (constante -> CTEF .)
    +               reduce using rule 59 (constante -> CTEF .)
    -               reduce using rule 59 (constante -> CTEF .)
    <               reduce using rule 59 (constante -> CTEF .)
    >               reduce using rule 59 (constante -> CTEF .)
    EQUALS          reduce using rule 59 (constante -> CTEF .)
    DIFF            reduce using rule 59 (constante -> CTEF .)
    LTHANEQ         reduce using rule 59 (constante -> CTEF .)
    GTHANEQ         reduce using rule 59 (constante -> CTEF .)
    AND             reduce using rule 59 (constante -> CTEF .)
    OR              reduce using rule 59 (constante -> CTEF .)
    ;               reduce using rule 59 (constante -> CTEF .)
    ]               reduce using rule 59 (constante -> CTEF .)
    )               reduce using rule 59 (constante -> CTEF .)
=======
    (54) constante -> CTEF .

    *               reduce using rule 54 (constante -> CTEF .)
    /               reduce using rule 54 (constante -> CTEF .)
    +               reduce using rule 54 (constante -> CTEF .)
    -               reduce using rule 54 (constante -> CTEF .)
    <               reduce using rule 54 (constante -> CTEF .)
    >               reduce using rule 54 (constante -> CTEF .)
    EQUALS          reduce using rule 54 (constante -> CTEF .)
    DIFF            reduce using rule 54 (constante -> CTEF .)
    LTHANEQ         reduce using rule 54 (constante -> CTEF .)
    GTHANEQ         reduce using rule 54 (constante -> CTEF .)
    AND             reduce using rule 54 (constante -> CTEF .)
    OR              reduce using rule 54 (constante -> CTEF .)
    ;               reduce using rule 54 (constante -> CTEF .)
    ]               reduce using rule 54 (constante -> CTEF .)
    )               reduce using rule 54 (constante -> CTEF .)
>>>>>>> DirectorioFunciones


state 80

<<<<<<< HEAD
    (60) constante -> CTEI .

    *               reduce using rule 60 (constante -> CTEI .)
    /               reduce using rule 60 (constante -> CTEI .)
    +               reduce using rule 60 (constante -> CTEI .)
    -               reduce using rule 60 (constante -> CTEI .)
    <               reduce using rule 60 (constante -> CTEI .)
    >               reduce using rule 60 (constante -> CTEI .)
    EQUALS          reduce using rule 60 (constante -> CTEI .)
    DIFF            reduce using rule 60 (constante -> CTEI .)
    LTHANEQ         reduce using rule 60 (constante -> CTEI .)
    GTHANEQ         reduce using rule 60 (constante -> CTEI .)
    AND             reduce using rule 60 (constante -> CTEI .)
    OR              reduce using rule 60 (constante -> CTEI .)
    ;               reduce using rule 60 (constante -> CTEI .)
    ]               reduce using rule 60 (constante -> CTEI .)
    )               reduce using rule 60 (constante -> CTEI .)
=======
    (55) constante -> CTEI .

    *               reduce using rule 55 (constante -> CTEI .)
    /               reduce using rule 55 (constante -> CTEI .)
    +               reduce using rule 55 (constante -> CTEI .)
    -               reduce using rule 55 (constante -> CTEI .)
    <               reduce using rule 55 (constante -> CTEI .)
    >               reduce using rule 55 (constante -> CTEI .)
    EQUALS          reduce using rule 55 (constante -> CTEI .)
    DIFF            reduce using rule 55 (constante -> CTEI .)
    LTHANEQ         reduce using rule 55 (constante -> CTEI .)
    GTHANEQ         reduce using rule 55 (constante -> CTEI .)
    AND             reduce using rule 55 (constante -> CTEI .)
    OR              reduce using rule 55 (constante -> CTEI .)
    ;               reduce using rule 55 (constante -> CTEI .)
    ]               reduce using rule 55 (constante -> CTEI .)
    )               reduce using rule 55 (constante -> CTEI .)
>>>>>>> DirectorioFunciones


state 81

<<<<<<< HEAD
    (75) id -> ID idp .

    =               reduce using rule 75 (id -> ID idp .)
    [               reduce using rule 75 (id -> ID idp .)
    *               reduce using rule 75 (id -> ID idp .)
    /               reduce using rule 75 (id -> ID idp .)
    +               reduce using rule 75 (id -> ID idp .)
    -               reduce using rule 75 (id -> ID idp .)
    <               reduce using rule 75 (id -> ID idp .)
    >               reduce using rule 75 (id -> ID idp .)
    EQUALS          reduce using rule 75 (id -> ID idp .)
    DIFF            reduce using rule 75 (id -> ID idp .)
    LTHANEQ         reduce using rule 75 (id -> ID idp .)
    GTHANEQ         reduce using rule 75 (id -> ID idp .)
    AND             reduce using rule 75 (id -> ID idp .)
    OR              reduce using rule 75 (id -> ID idp .)
    ;               reduce using rule 75 (id -> ID idp .)
    ]               reduce using rule 75 (id -> ID idp .)
    )               reduce using rule 75 (id -> ID idp .)
=======
    (70) id -> ID idp .

    =               reduce using rule 70 (id -> ID idp .)
    [               reduce using rule 70 (id -> ID idp .)
    *               reduce using rule 70 (id -> ID idp .)
    /               reduce using rule 70 (id -> ID idp .)
    +               reduce using rule 70 (id -> ID idp .)
    -               reduce using rule 70 (id -> ID idp .)
    <               reduce using rule 70 (id -> ID idp .)
    >               reduce using rule 70 (id -> ID idp .)
    EQUALS          reduce using rule 70 (id -> ID idp .)
    DIFF            reduce using rule 70 (id -> ID idp .)
    LTHANEQ         reduce using rule 70 (id -> ID idp .)
    GTHANEQ         reduce using rule 70 (id -> ID idp .)
    AND             reduce using rule 70 (id -> ID idp .)
    OR              reduce using rule 70 (id -> ID idp .)
    ;               reduce using rule 70 (id -> ID idp .)
    ]               reduce using rule 70 (id -> ID idp .)
    )               reduce using rule 70 (id -> ID idp .)
>>>>>>> DirectorioFunciones


state 82

<<<<<<< HEAD
    (76) idp -> [ . superexpresion ]
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (71) idp -> [ . superexpresion ]
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

<<<<<<< HEAD
    superexpresion                 shift and go to state 112
=======
    superexpresion                 shift and go to state 113
>>>>>>> DirectorioFunciones
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 83

<<<<<<< HEAD
    (77) idp -> empty .

    =               reduce using rule 77 (idp -> empty .)
    [               reduce using rule 77 (idp -> empty .)
    *               reduce using rule 77 (idp -> empty .)
    /               reduce using rule 77 (idp -> empty .)
    +               reduce using rule 77 (idp -> empty .)
    -               reduce using rule 77 (idp -> empty .)
    <               reduce using rule 77 (idp -> empty .)
    >               reduce using rule 77 (idp -> empty .)
    EQUALS          reduce using rule 77 (idp -> empty .)
    DIFF            reduce using rule 77 (idp -> empty .)
    LTHANEQ         reduce using rule 77 (idp -> empty .)
    GTHANEQ         reduce using rule 77 (idp -> empty .)
    AND             reduce using rule 77 (idp -> empty .)
    OR              reduce using rule 77 (idp -> empty .)
    ;               reduce using rule 77 (idp -> empty .)
    ]               reduce using rule 77 (idp -> empty .)
    )               reduce using rule 77 (idp -> empty .)
=======
    (72) idp -> empty .

    =               reduce using rule 72 (idp -> empty .)
    [               reduce using rule 72 (idp -> empty .)
    *               reduce using rule 72 (idp -> empty .)
    /               reduce using rule 72 (idp -> empty .)
    +               reduce using rule 72 (idp -> empty .)
    -               reduce using rule 72 (idp -> empty .)
    <               reduce using rule 72 (idp -> empty .)
    >               reduce using rule 72 (idp -> empty .)
    EQUALS          reduce using rule 72 (idp -> empty .)
    DIFF            reduce using rule 72 (idp -> empty .)
    LTHANEQ         reduce using rule 72 (idp -> empty .)
    GTHANEQ         reduce using rule 72 (idp -> empty .)
    AND             reduce using rule 72 (idp -> empty .)
    OR              reduce using rule 72 (idp -> empty .)
    ;               reduce using rule 72 (idp -> empty .)
    ]               reduce using rule 72 (idp -> empty .)
    )               reduce using rule 72 (idp -> empty .)
>>>>>>> DirectorioFunciones


state 84

<<<<<<< HEAD
    (64) parametrop -> , parametro .

    )               reduce using rule 64 (parametrop -> , parametro .)
=======
    (5) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque .

    FUNCTION        reduce using rule 5 (function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque .)
    MAIN            reduce using rule 5 (function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque .)
>>>>>>> DirectorioFunciones


state 85

<<<<<<< HEAD
    (34) asignacionp -> = superexpresion . ;

    ;               shift and go to state 113
=======
    (59) parametrop -> , parametro .

    )               reduce using rule 59 (parametrop -> , parametro .)
>>>>>>> DirectorioFunciones


state 86

<<<<<<< HEAD
    (35) asignacionp -> [ superexpresion . ] ;
=======
    (29) asignacionp -> = superexpresion . ;

    ;               shift and go to state 114


state 87

    (30) asignacionp -> [ superexpresion . ] ;
>>>>>>> DirectorioFunciones

    ]               shift and go to state 114


state 88

    (21) condicion -> IF ( superexpresion . ) bloque condicionelse

    )               shift and go to state 115


state 89

    (24) write -> WRITE ( superexpresion . ) ;

    )               shift and go to state 116


state 90

<<<<<<< HEAD
    (31) while -> WHILE ( superexpresion . ) bloque
=======
    (26) while -> WHILE ( superexpresion . ) bloque
>>>>>>> DirectorioFunciones

    )               shift and go to state 117


state 91

    (20) return -> RETURN superexpresion ; .

    IF              reduce using rule 20 (return -> RETURN superexpresion ; .)
    WRITE           reduce using rule 20 (return -> RETURN superexpresion ; .)
    WHILE           reduce using rule 20 (return -> RETURN superexpresion ; .)
    RETURN          reduce using rule 20 (return -> RETURN superexpresion ; .)
    ID              reduce using rule 20 (return -> RETURN superexpresion ; .)
    INT             reduce using rule 20 (return -> RETURN superexpresion ; .)
    FLOAT           reduce using rule 20 (return -> RETURN superexpresion ; .)
    CHAR            reduce using rule 20 (return -> RETURN superexpresion ; .)
    }               reduce using rule 20 (return -> RETURN superexpresion ; .)


<<<<<<< HEAD
state 91

    (36) superexpresion -> megaexpresion superexpresionp .

    ;               reduce using rule 36 (superexpresion -> megaexpresion superexpresionp .)
    ]               reduce using rule 36 (superexpresion -> megaexpresion superexpresionp .)
    )               reduce using rule 36 (superexpresion -> megaexpresion superexpresionp .)


state 92

    (37) superexpresionp -> AND . superexpresion
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    superexpresion                 shift and go to state 118
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 93

    (38) superexpresionp -> OR . superexpresion
    (36) superexpresion -> . megaexpresion superexpresionp
    (40) megaexpresion -> . exp megaexpresionp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
state 92

    (31) superexpresion -> megaexpresion superexpresionp .

    ;               reduce using rule 31 (superexpresion -> megaexpresion superexpresionp .)
    ]               reduce using rule 31 (superexpresion -> megaexpresion superexpresionp .)
    )               reduce using rule 31 (superexpresion -> megaexpresion superexpresionp .)


state 93

    (32) superexpresionp -> AND . superexpresion
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    superexpresion                 shift and go to state 119
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 94

<<<<<<< HEAD
    (39) superexpresionp -> empty .

    ;               reduce using rule 39 (superexpresionp -> empty .)
    ]               reduce using rule 39 (superexpresionp -> empty .)
    )               reduce using rule 39 (superexpresionp -> empty .)
=======
    (33) superexpresionp -> OR . superexpresion
    (31) superexpresion -> . megaexpresion superexpresionp
    (35) megaexpresion -> . exp megaexpresionp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59
>>>>>>> DirectorioFunciones

    superexpresion                 shift and go to state 120
    megaexpresion                  shift and go to state 72
    exp                            shift and go to state 73
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 95

<<<<<<< HEAD
    (40) megaexpresion -> exp megaexpresionp .

    AND             reduce using rule 40 (megaexpresion -> exp megaexpresionp .)
    OR              reduce using rule 40 (megaexpresion -> exp megaexpresionp .)
    ;               reduce using rule 40 (megaexpresion -> exp megaexpresionp .)
    ]               reduce using rule 40 (megaexpresion -> exp megaexpresionp .)
    )               reduce using rule 40 (megaexpresion -> exp megaexpresionp .)
=======
    (34) superexpresionp -> empty .

    ;               reduce using rule 34 (superexpresionp -> empty .)
    ]               reduce using rule 34 (superexpresionp -> empty .)
    )               reduce using rule 34 (superexpresionp -> empty .)
>>>>>>> DirectorioFunciones


state 96

<<<<<<< HEAD
    (41) megaexpresionp -> < . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 120
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 97

    (42) megaexpresionp -> > . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (35) megaexpresion -> exp megaexpresionp .

    AND             reduce using rule 35 (megaexpresion -> exp megaexpresionp .)
    OR              reduce using rule 35 (megaexpresion -> exp megaexpresionp .)
    ;               reduce using rule 35 (megaexpresion -> exp megaexpresionp .)
    ]               reduce using rule 35 (megaexpresion -> exp megaexpresionp .)
    )               reduce using rule 35 (megaexpresion -> exp megaexpresionp .)


state 97

    (36) megaexpresionp -> < . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 121
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 98

<<<<<<< HEAD
    (43) megaexpresionp -> EQUALS . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (37) megaexpresionp -> > . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 122
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 99

<<<<<<< HEAD
    (44) megaexpresionp -> DIFF . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (38) megaexpresionp -> EQUALS . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 123
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 100

<<<<<<< HEAD
    (45) megaexpresionp -> LTHANEQ . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (39) megaexpresionp -> DIFF . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 124
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 101

<<<<<<< HEAD
    (46) megaexpresionp -> GTHANEQ . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (40) megaexpresionp -> LTHANEQ . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 125
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 102

<<<<<<< HEAD
    (47) megaexpresionp -> empty .

    AND             reduce using rule 47 (megaexpresionp -> empty .)
    OR              reduce using rule 47 (megaexpresionp -> empty .)
    ;               reduce using rule 47 (megaexpresionp -> empty .)
    ]               reduce using rule 47 (megaexpresionp -> empty .)
    )               reduce using rule 47 (megaexpresionp -> empty .)
=======
    (41) megaexpresionp -> GTHANEQ . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59
>>>>>>> DirectorioFunciones

    exp                            shift and go to state 126
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 103

<<<<<<< HEAD
    (48) exp -> termino expp .

    <               reduce using rule 48 (exp -> termino expp .)
    >               reduce using rule 48 (exp -> termino expp .)
    EQUALS          reduce using rule 48 (exp -> termino expp .)
    DIFF            reduce using rule 48 (exp -> termino expp .)
    LTHANEQ         reduce using rule 48 (exp -> termino expp .)
    GTHANEQ         reduce using rule 48 (exp -> termino expp .)
    AND             reduce using rule 48 (exp -> termino expp .)
    OR              reduce using rule 48 (exp -> termino expp .)
    ;               reduce using rule 48 (exp -> termino expp .)
    ]               reduce using rule 48 (exp -> termino expp .)
    )               reduce using rule 48 (exp -> termino expp .)
    +               reduce using rule 48 (exp -> termino expp .)
    -               reduce using rule 48 (exp -> termino expp .)
=======
    (42) megaexpresionp -> empty .

    AND             reduce using rule 42 (megaexpresionp -> empty .)
    OR              reduce using rule 42 (megaexpresionp -> empty .)
    ;               reduce using rule 42 (megaexpresionp -> empty .)
    ]               reduce using rule 42 (megaexpresionp -> empty .)
    )               reduce using rule 42 (megaexpresionp -> empty .)
>>>>>>> DirectorioFunciones


state 104

<<<<<<< HEAD
    (49) expp -> + . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 126
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 105

    (50) expp -> - . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (43) exp -> termino expp .

    <               reduce using rule 43 (exp -> termino expp .)
    >               reduce using rule 43 (exp -> termino expp .)
    EQUALS          reduce using rule 43 (exp -> termino expp .)
    DIFF            reduce using rule 43 (exp -> termino expp .)
    LTHANEQ         reduce using rule 43 (exp -> termino expp .)
    GTHANEQ         reduce using rule 43 (exp -> termino expp .)
    AND             reduce using rule 43 (exp -> termino expp .)
    OR              reduce using rule 43 (exp -> termino expp .)
    ;               reduce using rule 43 (exp -> termino expp .)
    ]               reduce using rule 43 (exp -> termino expp .)
    )               reduce using rule 43 (exp -> termino expp .)
    +               reduce using rule 43 (exp -> termino expp .)
    -               reduce using rule 43 (exp -> termino expp .)


state 105

    (44) expp -> + . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 127
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 106

<<<<<<< HEAD
    (51) expp -> empty .

    +               reduce using rule 51 (expp -> empty .)
    -               reduce using rule 51 (expp -> empty .)
    <               reduce using rule 51 (expp -> empty .)
    >               reduce using rule 51 (expp -> empty .)
    EQUALS          reduce using rule 51 (expp -> empty .)
    DIFF            reduce using rule 51 (expp -> empty .)
    LTHANEQ         reduce using rule 51 (expp -> empty .)
    GTHANEQ         reduce using rule 51 (expp -> empty .)
    AND             reduce using rule 51 (expp -> empty .)
    OR              reduce using rule 51 (expp -> empty .)
    ;               reduce using rule 51 (expp -> empty .)
    ]               reduce using rule 51 (expp -> empty .)
    )               reduce using rule 51 (expp -> empty .)
=======
    (45) expp -> - . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59
>>>>>>> DirectorioFunciones

    exp                            shift and go to state 128
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 107

<<<<<<< HEAD
    (52) termino -> factor terminop .

    +               reduce using rule 52 (termino -> factor terminop .)
    -               reduce using rule 52 (termino -> factor terminop .)
    <               reduce using rule 52 (termino -> factor terminop .)
    >               reduce using rule 52 (termino -> factor terminop .)
    EQUALS          reduce using rule 52 (termino -> factor terminop .)
    DIFF            reduce using rule 52 (termino -> factor terminop .)
    LTHANEQ         reduce using rule 52 (termino -> factor terminop .)
    GTHANEQ         reduce using rule 52 (termino -> factor terminop .)
    AND             reduce using rule 52 (termino -> factor terminop .)
    OR              reduce using rule 52 (termino -> factor terminop .)
    ;               reduce using rule 52 (termino -> factor terminop .)
    ]               reduce using rule 52 (termino -> factor terminop .)
    )               reduce using rule 52 (termino -> factor terminop .)
=======
    (46) expp -> empty .

    +               reduce using rule 46 (expp -> empty .)
    -               reduce using rule 46 (expp -> empty .)
    <               reduce using rule 46 (expp -> empty .)
    >               reduce using rule 46 (expp -> empty .)
    EQUALS          reduce using rule 46 (expp -> empty .)
    DIFF            reduce using rule 46 (expp -> empty .)
    LTHANEQ         reduce using rule 46 (expp -> empty .)
    GTHANEQ         reduce using rule 46 (expp -> empty .)
    AND             reduce using rule 46 (expp -> empty .)
    OR              reduce using rule 46 (expp -> empty .)
    ;               reduce using rule 46 (expp -> empty .)
    ]               reduce using rule 46 (expp -> empty .)
    )               reduce using rule 46 (expp -> empty .)
>>>>>>> DirectorioFunciones


state 108

<<<<<<< HEAD
    (53) terminop -> * . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 128
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 109

    (54) terminop -> / . exp
    (48) exp -> . termino expp
    (52) termino -> . factor terminop
    (56) factor -> . constante
    (57) factor -> . ( superexpresion )
    (58) constante -> . id
    (59) constante -> . CTEF
    (60) constante -> . CTEI
    (75) id -> . ID idp
=======
    (47) termino -> factor terminop .

    +               reduce using rule 47 (termino -> factor terminop .)
    -               reduce using rule 47 (termino -> factor terminop .)
    <               reduce using rule 47 (termino -> factor terminop .)
    >               reduce using rule 47 (termino -> factor terminop .)
    EQUALS          reduce using rule 47 (termino -> factor terminop .)
    DIFF            reduce using rule 47 (termino -> factor terminop .)
    LTHANEQ         reduce using rule 47 (termino -> factor terminop .)
    GTHANEQ         reduce using rule 47 (termino -> factor terminop .)
    AND             reduce using rule 47 (termino -> factor terminop .)
    OR              reduce using rule 47 (termino -> factor terminop .)
    ;               reduce using rule 47 (termino -> factor terminop .)
    ]               reduce using rule 47 (termino -> factor terminop .)
    )               reduce using rule 47 (termino -> factor terminop .)


state 109

    (48) terminop -> * . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp
>>>>>>> DirectorioFunciones

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59

    exp                            shift and go to state 129
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 110

<<<<<<< HEAD
    (55) terminop -> empty .

    +               reduce using rule 55 (terminop -> empty .)
    -               reduce using rule 55 (terminop -> empty .)
    <               reduce using rule 55 (terminop -> empty .)
    >               reduce using rule 55 (terminop -> empty .)
    EQUALS          reduce using rule 55 (terminop -> empty .)
    DIFF            reduce using rule 55 (terminop -> empty .)
    LTHANEQ         reduce using rule 55 (terminop -> empty .)
    GTHANEQ         reduce using rule 55 (terminop -> empty .)
    AND             reduce using rule 55 (terminop -> empty .)
    OR              reduce using rule 55 (terminop -> empty .)
    ;               reduce using rule 55 (terminop -> empty .)
    ]               reduce using rule 55 (terminop -> empty .)
    )               reduce using rule 55 (terminop -> empty .)
=======
    (49) terminop -> / . exp
    (43) exp -> . termino expp
    (47) termino -> . factor terminop
    (51) factor -> . constante
    (52) factor -> . ( superexpresion )
    (53) constante -> . id
    (54) constante -> . CTEF
    (55) constante -> . CTEI
    (70) id -> . ID idp

    (               shift and go to state 77
    CTEF            shift and go to state 79
    CTEI            shift and go to state 80
    ID              shift and go to state 59
>>>>>>> DirectorioFunciones

    exp                            shift and go to state 130
    termino                        shift and go to state 74
    factor                         shift and go to state 75
    constante                      shift and go to state 76
    id                             shift and go to state 78

state 111

<<<<<<< HEAD
    (57) factor -> ( superexpresion . )

    )               shift and go to state 130
=======
    (50) terminop -> empty .

    +               reduce using rule 50 (terminop -> empty .)
    -               reduce using rule 50 (terminop -> empty .)
    <               reduce using rule 50 (terminop -> empty .)
    >               reduce using rule 50 (terminop -> empty .)
    EQUALS          reduce using rule 50 (terminop -> empty .)
    DIFF            reduce using rule 50 (terminop -> empty .)
    LTHANEQ         reduce using rule 50 (terminop -> empty .)
    GTHANEQ         reduce using rule 50 (terminop -> empty .)
    AND             reduce using rule 50 (terminop -> empty .)
    OR              reduce using rule 50 (terminop -> empty .)
    ;               reduce using rule 50 (terminop -> empty .)
    ]               reduce using rule 50 (terminop -> empty .)
    )               reduce using rule 50 (terminop -> empty .)
>>>>>>> DirectorioFunciones


state 112

<<<<<<< HEAD
    (76) idp -> [ superexpresion . ]

    ]               shift and go to state 131
=======
    (52) factor -> ( superexpresion . )

    )               shift and go to state 131
>>>>>>> DirectorioFunciones


state 113

<<<<<<< HEAD
    (34) asignacionp -> = superexpresion ; .

    IF              reduce using rule 34 (asignacionp -> = superexpresion ; .)
    WRITE           reduce using rule 34 (asignacionp -> = superexpresion ; .)
    WHILE           reduce using rule 34 (asignacionp -> = superexpresion ; .)
    RETURN          reduce using rule 34 (asignacionp -> = superexpresion ; .)
    ID              reduce using rule 34 (asignacionp -> = superexpresion ; .)
    INT             reduce using rule 34 (asignacionp -> = superexpresion ; .)
    FLOAT           reduce using rule 34 (asignacionp -> = superexpresion ; .)
    CHAR            reduce using rule 34 (asignacionp -> = superexpresion ; .)
    }               reduce using rule 34 (asignacionp -> = superexpresion ; .)
=======
    (71) idp -> [ superexpresion . ]

    ]               shift and go to state 132
>>>>>>> DirectorioFunciones


state 114

<<<<<<< HEAD
    (35) asignacionp -> [ superexpresion ] . ;

    ;               shift and go to state 132
=======
    (29) asignacionp -> = superexpresion ; .

    IF              reduce using rule 29 (asignacionp -> = superexpresion ; .)
    WRITE           reduce using rule 29 (asignacionp -> = superexpresion ; .)
    WHILE           reduce using rule 29 (asignacionp -> = superexpresion ; .)
    RETURN          reduce using rule 29 (asignacionp -> = superexpresion ; .)
    ID              reduce using rule 29 (asignacionp -> = superexpresion ; .)
    INT             reduce using rule 29 (asignacionp -> = superexpresion ; .)
    FLOAT           reduce using rule 29 (asignacionp -> = superexpresion ; .)
    CHAR            reduce using rule 29 (asignacionp -> = superexpresion ; .)
    }               reduce using rule 29 (asignacionp -> = superexpresion ; .)
>>>>>>> DirectorioFunciones


state 115

<<<<<<< HEAD
    (21) condicion -> IF ( superexpresion ) . bloque condicionelse
    (10) bloque -> . { cuerpo }
=======
    (30) asignacionp -> [ superexpresion ] . ;
>>>>>>> DirectorioFunciones

    {               shift and go to state 35

    bloque                         shift and go to state 133

state 116

    (24) write -> WRITE ( superexpresion ) . ;

    ;               shift and go to state 134


state 117

<<<<<<< HEAD
    (31) while -> WHILE ( superexpresion ) . bloque
    (10) bloque -> . { cuerpo }
=======
    (25) write -> WRITE ( superexpresion ) . ;

    ;               shift and go to state 135


state 118

    (26) while -> WHILE ( superexpresion ) . bloque
    (11) bloque -> . { cuerpo }
>>>>>>> DirectorioFunciones

    {               shift and go to state 35

    bloque                         shift and go to state 135

state 118

    (37) superexpresionp -> AND superexpresion .

    ;               reduce using rule 37 (superexpresionp -> AND superexpresion .)
    ]               reduce using rule 37 (superexpresionp -> AND superexpresion .)
    )               reduce using rule 37 (superexpresionp -> AND superexpresion .)


state 119

<<<<<<< HEAD
    (38) superexpresionp -> OR superexpresion .

    ;               reduce using rule 38 (superexpresionp -> OR superexpresion .)
    ]               reduce using rule 38 (superexpresionp -> OR superexpresion .)
    )               reduce using rule 38 (superexpresionp -> OR superexpresion .)
=======
    (32) superexpresionp -> AND superexpresion .

    ;               reduce using rule 32 (superexpresionp -> AND superexpresion .)
    ]               reduce using rule 32 (superexpresionp -> AND superexpresion .)
    )               reduce using rule 32 (superexpresionp -> AND superexpresion .)
>>>>>>> DirectorioFunciones


state 120

<<<<<<< HEAD
    (41) megaexpresionp -> < exp .

    AND             reduce using rule 41 (megaexpresionp -> < exp .)
    OR              reduce using rule 41 (megaexpresionp -> < exp .)
    ;               reduce using rule 41 (megaexpresionp -> < exp .)
    ]               reduce using rule 41 (megaexpresionp -> < exp .)
    )               reduce using rule 41 (megaexpresionp -> < exp .)
=======
    (33) superexpresionp -> OR superexpresion .

    ;               reduce using rule 33 (superexpresionp -> OR superexpresion .)
    ]               reduce using rule 33 (superexpresionp -> OR superexpresion .)
    )               reduce using rule 33 (superexpresionp -> OR superexpresion .)
>>>>>>> DirectorioFunciones


state 121

<<<<<<< HEAD
    (42) megaexpresionp -> > exp .

    AND             reduce using rule 42 (megaexpresionp -> > exp .)
    OR              reduce using rule 42 (megaexpresionp -> > exp .)
    ;               reduce using rule 42 (megaexpresionp -> > exp .)
    ]               reduce using rule 42 (megaexpresionp -> > exp .)
    )               reduce using rule 42 (megaexpresionp -> > exp .)
=======
    (36) megaexpresionp -> < exp .

    AND             reduce using rule 36 (megaexpresionp -> < exp .)
    OR              reduce using rule 36 (megaexpresionp -> < exp .)
    ;               reduce using rule 36 (megaexpresionp -> < exp .)
    ]               reduce using rule 36 (megaexpresionp -> < exp .)
    )               reduce using rule 36 (megaexpresionp -> < exp .)
>>>>>>> DirectorioFunciones


state 122

<<<<<<< HEAD
    (43) megaexpresionp -> EQUALS exp .

    AND             reduce using rule 43 (megaexpresionp -> EQUALS exp .)
    OR              reduce using rule 43 (megaexpresionp -> EQUALS exp .)
    ;               reduce using rule 43 (megaexpresionp -> EQUALS exp .)
    ]               reduce using rule 43 (megaexpresionp -> EQUALS exp .)
    )               reduce using rule 43 (megaexpresionp -> EQUALS exp .)
=======
    (37) megaexpresionp -> > exp .

    AND             reduce using rule 37 (megaexpresionp -> > exp .)
    OR              reduce using rule 37 (megaexpresionp -> > exp .)
    ;               reduce using rule 37 (megaexpresionp -> > exp .)
    ]               reduce using rule 37 (megaexpresionp -> > exp .)
    )               reduce using rule 37 (megaexpresionp -> > exp .)
>>>>>>> DirectorioFunciones


state 123

<<<<<<< HEAD
    (44) megaexpresionp -> DIFF exp .

    AND             reduce using rule 44 (megaexpresionp -> DIFF exp .)
    OR              reduce using rule 44 (megaexpresionp -> DIFF exp .)
    ;               reduce using rule 44 (megaexpresionp -> DIFF exp .)
    ]               reduce using rule 44 (megaexpresionp -> DIFF exp .)
    )               reduce using rule 44 (megaexpresionp -> DIFF exp .)
=======
    (38) megaexpresionp -> EQUALS exp .

    AND             reduce using rule 38 (megaexpresionp -> EQUALS exp .)
    OR              reduce using rule 38 (megaexpresionp -> EQUALS exp .)
    ;               reduce using rule 38 (megaexpresionp -> EQUALS exp .)
    ]               reduce using rule 38 (megaexpresionp -> EQUALS exp .)
    )               reduce using rule 38 (megaexpresionp -> EQUALS exp .)
>>>>>>> DirectorioFunciones


state 124

<<<<<<< HEAD
    (45) megaexpresionp -> LTHANEQ exp .

    AND             reduce using rule 45 (megaexpresionp -> LTHANEQ exp .)
    OR              reduce using rule 45 (megaexpresionp -> LTHANEQ exp .)
    ;               reduce using rule 45 (megaexpresionp -> LTHANEQ exp .)
    ]               reduce using rule 45 (megaexpresionp -> LTHANEQ exp .)
    )               reduce using rule 45 (megaexpresionp -> LTHANEQ exp .)
=======
    (39) megaexpresionp -> DIFF exp .

    AND             reduce using rule 39 (megaexpresionp -> DIFF exp .)
    OR              reduce using rule 39 (megaexpresionp -> DIFF exp .)
    ;               reduce using rule 39 (megaexpresionp -> DIFF exp .)
    ]               reduce using rule 39 (megaexpresionp -> DIFF exp .)
    )               reduce using rule 39 (megaexpresionp -> DIFF exp .)
>>>>>>> DirectorioFunciones


state 125

<<<<<<< HEAD
    (46) megaexpresionp -> GTHANEQ exp .

    AND             reduce using rule 46 (megaexpresionp -> GTHANEQ exp .)
    OR              reduce using rule 46 (megaexpresionp -> GTHANEQ exp .)
    ;               reduce using rule 46 (megaexpresionp -> GTHANEQ exp .)
    ]               reduce using rule 46 (megaexpresionp -> GTHANEQ exp .)
    )               reduce using rule 46 (megaexpresionp -> GTHANEQ exp .)
=======
    (40) megaexpresionp -> LTHANEQ exp .

    AND             reduce using rule 40 (megaexpresionp -> LTHANEQ exp .)
    OR              reduce using rule 40 (megaexpresionp -> LTHANEQ exp .)
    ;               reduce using rule 40 (megaexpresionp -> LTHANEQ exp .)
    ]               reduce using rule 40 (megaexpresionp -> LTHANEQ exp .)
    )               reduce using rule 40 (megaexpresionp -> LTHANEQ exp .)
>>>>>>> DirectorioFunciones


state 126

<<<<<<< HEAD
    (49) expp -> + exp .

    +               reduce using rule 49 (expp -> + exp .)
    -               reduce using rule 49 (expp -> + exp .)
    <               reduce using rule 49 (expp -> + exp .)
    >               reduce using rule 49 (expp -> + exp .)
    EQUALS          reduce using rule 49 (expp -> + exp .)
    DIFF            reduce using rule 49 (expp -> + exp .)
    LTHANEQ         reduce using rule 49 (expp -> + exp .)
    GTHANEQ         reduce using rule 49 (expp -> + exp .)
    AND             reduce using rule 49 (expp -> + exp .)
    OR              reduce using rule 49 (expp -> + exp .)
    ;               reduce using rule 49 (expp -> + exp .)
    ]               reduce using rule 49 (expp -> + exp .)
    )               reduce using rule 49 (expp -> + exp .)
=======
    (41) megaexpresionp -> GTHANEQ exp .

    AND             reduce using rule 41 (megaexpresionp -> GTHANEQ exp .)
    OR              reduce using rule 41 (megaexpresionp -> GTHANEQ exp .)
    ;               reduce using rule 41 (megaexpresionp -> GTHANEQ exp .)
    ]               reduce using rule 41 (megaexpresionp -> GTHANEQ exp .)
    )               reduce using rule 41 (megaexpresionp -> GTHANEQ exp .)
>>>>>>> DirectorioFunciones


state 127

<<<<<<< HEAD
    (50) expp -> - exp .

    +               reduce using rule 50 (expp -> - exp .)
    -               reduce using rule 50 (expp -> - exp .)
    <               reduce using rule 50 (expp -> - exp .)
    >               reduce using rule 50 (expp -> - exp .)
    EQUALS          reduce using rule 50 (expp -> - exp .)
    DIFF            reduce using rule 50 (expp -> - exp .)
    LTHANEQ         reduce using rule 50 (expp -> - exp .)
    GTHANEQ         reduce using rule 50 (expp -> - exp .)
    AND             reduce using rule 50 (expp -> - exp .)
    OR              reduce using rule 50 (expp -> - exp .)
    ;               reduce using rule 50 (expp -> - exp .)
    ]               reduce using rule 50 (expp -> - exp .)
    )               reduce using rule 50 (expp -> - exp .)
=======
    (44) expp -> + exp .

    +               reduce using rule 44 (expp -> + exp .)
    -               reduce using rule 44 (expp -> + exp .)
    <               reduce using rule 44 (expp -> + exp .)
    >               reduce using rule 44 (expp -> + exp .)
    EQUALS          reduce using rule 44 (expp -> + exp .)
    DIFF            reduce using rule 44 (expp -> + exp .)
    LTHANEQ         reduce using rule 44 (expp -> + exp .)
    GTHANEQ         reduce using rule 44 (expp -> + exp .)
    AND             reduce using rule 44 (expp -> + exp .)
    OR              reduce using rule 44 (expp -> + exp .)
    ;               reduce using rule 44 (expp -> + exp .)
    ]               reduce using rule 44 (expp -> + exp .)
    )               reduce using rule 44 (expp -> + exp .)
>>>>>>> DirectorioFunciones


state 128

<<<<<<< HEAD
    (53) terminop -> * exp .

    +               reduce using rule 53 (terminop -> * exp .)
    -               reduce using rule 53 (terminop -> * exp .)
    <               reduce using rule 53 (terminop -> * exp .)
    >               reduce using rule 53 (terminop -> * exp .)
    EQUALS          reduce using rule 53 (terminop -> * exp .)
    DIFF            reduce using rule 53 (terminop -> * exp .)
    LTHANEQ         reduce using rule 53 (terminop -> * exp .)
    GTHANEQ         reduce using rule 53 (terminop -> * exp .)
    AND             reduce using rule 53 (terminop -> * exp .)
    OR              reduce using rule 53 (terminop -> * exp .)
    ;               reduce using rule 53 (terminop -> * exp .)
    ]               reduce using rule 53 (terminop -> * exp .)
    )               reduce using rule 53 (terminop -> * exp .)
=======
    (45) expp -> - exp .

    +               reduce using rule 45 (expp -> - exp .)
    -               reduce using rule 45 (expp -> - exp .)
    <               reduce using rule 45 (expp -> - exp .)
    >               reduce using rule 45 (expp -> - exp .)
    EQUALS          reduce using rule 45 (expp -> - exp .)
    DIFF            reduce using rule 45 (expp -> - exp .)
    LTHANEQ         reduce using rule 45 (expp -> - exp .)
    GTHANEQ         reduce using rule 45 (expp -> - exp .)
    AND             reduce using rule 45 (expp -> - exp .)
    OR              reduce using rule 45 (expp -> - exp .)
    ;               reduce using rule 45 (expp -> - exp .)
    ]               reduce using rule 45 (expp -> - exp .)
    )               reduce using rule 45 (expp -> - exp .)
>>>>>>> DirectorioFunciones


state 129

<<<<<<< HEAD
    (54) terminop -> / exp .

    +               reduce using rule 54 (terminop -> / exp .)
    -               reduce using rule 54 (terminop -> / exp .)
    <               reduce using rule 54 (terminop -> / exp .)
    >               reduce using rule 54 (terminop -> / exp .)
    EQUALS          reduce using rule 54 (terminop -> / exp .)
    DIFF            reduce using rule 54 (terminop -> / exp .)
    LTHANEQ         reduce using rule 54 (terminop -> / exp .)
    GTHANEQ         reduce using rule 54 (terminop -> / exp .)
    AND             reduce using rule 54 (terminop -> / exp .)
    OR              reduce using rule 54 (terminop -> / exp .)
    ;               reduce using rule 54 (terminop -> / exp .)
    ]               reduce using rule 54 (terminop -> / exp .)
    )               reduce using rule 54 (terminop -> / exp .)
=======
    (48) terminop -> * exp .

    +               reduce using rule 48 (terminop -> * exp .)
    -               reduce using rule 48 (terminop -> * exp .)
    <               reduce using rule 48 (terminop -> * exp .)
    >               reduce using rule 48 (terminop -> * exp .)
    EQUALS          reduce using rule 48 (terminop -> * exp .)
    DIFF            reduce using rule 48 (terminop -> * exp .)
    LTHANEQ         reduce using rule 48 (terminop -> * exp .)
    GTHANEQ         reduce using rule 48 (terminop -> * exp .)
    AND             reduce using rule 48 (terminop -> * exp .)
    OR              reduce using rule 48 (terminop -> * exp .)
    ;               reduce using rule 48 (terminop -> * exp .)
    ]               reduce using rule 48 (terminop -> * exp .)
    )               reduce using rule 48 (terminop -> * exp .)
>>>>>>> DirectorioFunciones


state 130

<<<<<<< HEAD
    (57) factor -> ( superexpresion ) .

    *               reduce using rule 57 (factor -> ( superexpresion ) .)
    /               reduce using rule 57 (factor -> ( superexpresion ) .)
    +               reduce using rule 57 (factor -> ( superexpresion ) .)
    -               reduce using rule 57 (factor -> ( superexpresion ) .)
    <               reduce using rule 57 (factor -> ( superexpresion ) .)
    >               reduce using rule 57 (factor -> ( superexpresion ) .)
    EQUALS          reduce using rule 57 (factor -> ( superexpresion ) .)
    DIFF            reduce using rule 57 (factor -> ( superexpresion ) .)
    LTHANEQ         reduce using rule 57 (factor -> ( superexpresion ) .)
    GTHANEQ         reduce using rule 57 (factor -> ( superexpresion ) .)
    AND             reduce using rule 57 (factor -> ( superexpresion ) .)
    OR              reduce using rule 57 (factor -> ( superexpresion ) .)
    ;               reduce using rule 57 (factor -> ( superexpresion ) .)
    ]               reduce using rule 57 (factor -> ( superexpresion ) .)
    )               reduce using rule 57 (factor -> ( superexpresion ) .)
=======
    (49) terminop -> / exp .

    +               reduce using rule 49 (terminop -> / exp .)
    -               reduce using rule 49 (terminop -> / exp .)
    <               reduce using rule 49 (terminop -> / exp .)
    >               reduce using rule 49 (terminop -> / exp .)
    EQUALS          reduce using rule 49 (terminop -> / exp .)
    DIFF            reduce using rule 49 (terminop -> / exp .)
    LTHANEQ         reduce using rule 49 (terminop -> / exp .)
    GTHANEQ         reduce using rule 49 (terminop -> / exp .)
    AND             reduce using rule 49 (terminop -> / exp .)
    OR              reduce using rule 49 (terminop -> / exp .)
    ;               reduce using rule 49 (terminop -> / exp .)
    ]               reduce using rule 49 (terminop -> / exp .)
    )               reduce using rule 49 (terminop -> / exp .)
>>>>>>> DirectorioFunciones


state 131

<<<<<<< HEAD
    (76) idp -> [ superexpresion ] .

    =               reduce using rule 76 (idp -> [ superexpresion ] .)
    [               reduce using rule 76 (idp -> [ superexpresion ] .)
    *               reduce using rule 76 (idp -> [ superexpresion ] .)
    /               reduce using rule 76 (idp -> [ superexpresion ] .)
    +               reduce using rule 76 (idp -> [ superexpresion ] .)
    -               reduce using rule 76 (idp -> [ superexpresion ] .)
    <               reduce using rule 76 (idp -> [ superexpresion ] .)
    >               reduce using rule 76 (idp -> [ superexpresion ] .)
    EQUALS          reduce using rule 76 (idp -> [ superexpresion ] .)
    DIFF            reduce using rule 76 (idp -> [ superexpresion ] .)
    LTHANEQ         reduce using rule 76 (idp -> [ superexpresion ] .)
    GTHANEQ         reduce using rule 76 (idp -> [ superexpresion ] .)
    AND             reduce using rule 76 (idp -> [ superexpresion ] .)
    OR              reduce using rule 76 (idp -> [ superexpresion ] .)
    ;               reduce using rule 76 (idp -> [ superexpresion ] .)
    ]               reduce using rule 76 (idp -> [ superexpresion ] .)
    )               reduce using rule 76 (idp -> [ superexpresion ] .)
=======
    (52) factor -> ( superexpresion ) .

    *               reduce using rule 52 (factor -> ( superexpresion ) .)
    /               reduce using rule 52 (factor -> ( superexpresion ) .)
    +               reduce using rule 52 (factor -> ( superexpresion ) .)
    -               reduce using rule 52 (factor -> ( superexpresion ) .)
    <               reduce using rule 52 (factor -> ( superexpresion ) .)
    >               reduce using rule 52 (factor -> ( superexpresion ) .)
    EQUALS          reduce using rule 52 (factor -> ( superexpresion ) .)
    DIFF            reduce using rule 52 (factor -> ( superexpresion ) .)
    LTHANEQ         reduce using rule 52 (factor -> ( superexpresion ) .)
    GTHANEQ         reduce using rule 52 (factor -> ( superexpresion ) .)
    AND             reduce using rule 52 (factor -> ( superexpresion ) .)
    OR              reduce using rule 52 (factor -> ( superexpresion ) .)
    ;               reduce using rule 52 (factor -> ( superexpresion ) .)
    ]               reduce using rule 52 (factor -> ( superexpresion ) .)
    )               reduce using rule 52 (factor -> ( superexpresion ) .)
>>>>>>> DirectorioFunciones


state 132

<<<<<<< HEAD
    (35) asignacionp -> [ superexpresion ] ; .

    IF              reduce using rule 35 (asignacionp -> [ superexpresion ] ; .)
    WRITE           reduce using rule 35 (asignacionp -> [ superexpresion ] ; .)
    WHILE           reduce using rule 35 (asignacionp -> [ superexpresion ] ; .)
    RETURN          reduce using rule 35 (asignacionp -> [ superexpresion ] ; .)
    ID              reduce using rule 35 (asignacionp -> [ superexpresion ] ; .)
    INT             reduce using rule 35 (asignacionp -> [ superexpresion ] ; .)
    FLOAT           reduce using rule 35 (asignacionp -> [ superexpresion ] ; .)
    CHAR            reduce using rule 35 (asignacionp -> [ superexpresion ] ; .)
    }               reduce using rule 35 (asignacionp -> [ superexpresion ] ; .)
=======
    (71) idp -> [ superexpresion ] .

    =               reduce using rule 71 (idp -> [ superexpresion ] .)
    [               reduce using rule 71 (idp -> [ superexpresion ] .)
    *               reduce using rule 71 (idp -> [ superexpresion ] .)
    /               reduce using rule 71 (idp -> [ superexpresion ] .)
    +               reduce using rule 71 (idp -> [ superexpresion ] .)
    -               reduce using rule 71 (idp -> [ superexpresion ] .)
    <               reduce using rule 71 (idp -> [ superexpresion ] .)
    >               reduce using rule 71 (idp -> [ superexpresion ] .)
    EQUALS          reduce using rule 71 (idp -> [ superexpresion ] .)
    DIFF            reduce using rule 71 (idp -> [ superexpresion ] .)
    LTHANEQ         reduce using rule 71 (idp -> [ superexpresion ] .)
    GTHANEQ         reduce using rule 71 (idp -> [ superexpresion ] .)
    AND             reduce using rule 71 (idp -> [ superexpresion ] .)
    OR              reduce using rule 71 (idp -> [ superexpresion ] .)
    ;               reduce using rule 71 (idp -> [ superexpresion ] .)
    ]               reduce using rule 71 (idp -> [ superexpresion ] .)
    )               reduce using rule 71 (idp -> [ superexpresion ] .)
>>>>>>> DirectorioFunciones


state 133

<<<<<<< HEAD
    (21) condicion -> IF ( superexpresion ) bloque . condicionelse
    (22) condicionelse -> . ELSE bloque
    (23) condicionelse -> . empty
    (78) empty -> .

    ELSE            shift and go to state 137
    IF              reduce using rule 78 (empty -> .)
    WRITE           reduce using rule 78 (empty -> .)
    WHILE           reduce using rule 78 (empty -> .)
    RETURN          reduce using rule 78 (empty -> .)
    ID              reduce using rule 78 (empty -> .)
    INT             reduce using rule 78 (empty -> .)
    FLOAT           reduce using rule 78 (empty -> .)
    CHAR            reduce using rule 78 (empty -> .)
    }               reduce using rule 78 (empty -> .)
=======
    (30) asignacionp -> [ superexpresion ] ; .

    IF              reduce using rule 30 (asignacionp -> [ superexpresion ] ; .)
    WRITE           reduce using rule 30 (asignacionp -> [ superexpresion ] ; .)
    WHILE           reduce using rule 30 (asignacionp -> [ superexpresion ] ; .)
    RETURN          reduce using rule 30 (asignacionp -> [ superexpresion ] ; .)
    ID              reduce using rule 30 (asignacionp -> [ superexpresion ] ; .)
    INT             reduce using rule 30 (asignacionp -> [ superexpresion ] ; .)
    FLOAT           reduce using rule 30 (asignacionp -> [ superexpresion ] ; .)
    CHAR            reduce using rule 30 (asignacionp -> [ superexpresion ] ; .)
    }               reduce using rule 30 (asignacionp -> [ superexpresion ] ; .)
>>>>>>> DirectorioFunciones

    condicionelse                  shift and go to state 136
    empty                          shift and go to state 138

state 134

<<<<<<< HEAD
    (24) write -> WRITE ( superexpresion ) ; .

    IF              reduce using rule 24 (write -> WRITE ( superexpresion ) ; .)
    WRITE           reduce using rule 24 (write -> WRITE ( superexpresion ) ; .)
    WHILE           reduce using rule 24 (write -> WRITE ( superexpresion ) ; .)
    RETURN          reduce using rule 24 (write -> WRITE ( superexpresion ) ; .)
    ID              reduce using rule 24 (write -> WRITE ( superexpresion ) ; .)
    INT             reduce using rule 24 (write -> WRITE ( superexpresion ) ; .)
    FLOAT           reduce using rule 24 (write -> WRITE ( superexpresion ) ; .)
    CHAR            reduce using rule 24 (write -> WRITE ( superexpresion ) ; .)
    }               reduce using rule 24 (write -> WRITE ( superexpresion ) ; .)
=======
    (22) condicion -> IF ( superexpresion ) bloque . condicionelse
    (23) condicionelse -> . ELSE bloque
    (24) condicionelse -> . empty
    (73) empty -> .

    ELSE            shift and go to state 138
    IF              reduce using rule 73 (empty -> .)
    WRITE           reduce using rule 73 (empty -> .)
    WHILE           reduce using rule 73 (empty -> .)
    RETURN          reduce using rule 73 (empty -> .)
    ID              reduce using rule 73 (empty -> .)
    INT             reduce using rule 73 (empty -> .)
    FLOAT           reduce using rule 73 (empty -> .)
    CHAR            reduce using rule 73 (empty -> .)
    }               reduce using rule 73 (empty -> .)
>>>>>>> DirectorioFunciones


state 135

    (31) while -> WHILE ( superexpresion ) bloque .

    IF              reduce using rule 31 (while -> WHILE ( superexpresion ) bloque .)
    WRITE           reduce using rule 31 (while -> WHILE ( superexpresion ) bloque .)
    WHILE           reduce using rule 31 (while -> WHILE ( superexpresion ) bloque .)
    RETURN          reduce using rule 31 (while -> WHILE ( superexpresion ) bloque .)
    ID              reduce using rule 31 (while -> WHILE ( superexpresion ) bloque .)
    INT             reduce using rule 31 (while -> WHILE ( superexpresion ) bloque .)
    FLOAT           reduce using rule 31 (while -> WHILE ( superexpresion ) bloque .)
    CHAR            reduce using rule 31 (while -> WHILE ( superexpresion ) bloque .)
    }               reduce using rule 31 (while -> WHILE ( superexpresion ) bloque .)


state 136

<<<<<<< HEAD
    (21) condicion -> IF ( superexpresion ) bloque condicionelse .

    IF              reduce using rule 21 (condicion -> IF ( superexpresion ) bloque condicionelse .)
    WRITE           reduce using rule 21 (condicion -> IF ( superexpresion ) bloque condicionelse .)
    WHILE           reduce using rule 21 (condicion -> IF ( superexpresion ) bloque condicionelse .)
    RETURN          reduce using rule 21 (condicion -> IF ( superexpresion ) bloque condicionelse .)
    ID              reduce using rule 21 (condicion -> IF ( superexpresion ) bloque condicionelse .)
    INT             reduce using rule 21 (condicion -> IF ( superexpresion ) bloque condicionelse .)
    FLOAT           reduce using rule 21 (condicion -> IF ( superexpresion ) bloque condicionelse .)
    CHAR            reduce using rule 21 (condicion -> IF ( superexpresion ) bloque condicionelse .)
    }               reduce using rule 21 (condicion -> IF ( superexpresion ) bloque condicionelse .)
=======
    (26) while -> WHILE ( superexpresion ) bloque .

    IF              reduce using rule 26 (while -> WHILE ( superexpresion ) bloque .)
    WRITE           reduce using rule 26 (while -> WHILE ( superexpresion ) bloque .)
    WHILE           reduce using rule 26 (while -> WHILE ( superexpresion ) bloque .)
    RETURN          reduce using rule 26 (while -> WHILE ( superexpresion ) bloque .)
    ID              reduce using rule 26 (while -> WHILE ( superexpresion ) bloque .)
    INT             reduce using rule 26 (while -> WHILE ( superexpresion ) bloque .)
    FLOAT           reduce using rule 26 (while -> WHILE ( superexpresion ) bloque .)
    CHAR            reduce using rule 26 (while -> WHILE ( superexpresion ) bloque .)
    }               reduce using rule 26 (while -> WHILE ( superexpresion ) bloque .)
>>>>>>> DirectorioFunciones


state 137

    (22) condicionelse -> ELSE . bloque
    (10) bloque -> . { cuerpo }

    {               shift and go to state 35

    bloque                         shift and go to state 139

state 138

    (23) condicionelse -> empty .

    IF              reduce using rule 23 (condicionelse -> empty .)
    WRITE           reduce using rule 23 (condicionelse -> empty .)
    WHILE           reduce using rule 23 (condicionelse -> empty .)
    RETURN          reduce using rule 23 (condicionelse -> empty .)
    ID              reduce using rule 23 (condicionelse -> empty .)
    INT             reduce using rule 23 (condicionelse -> empty .)
    FLOAT           reduce using rule 23 (condicionelse -> empty .)
    CHAR            reduce using rule 23 (condicionelse -> empty .)
    }               reduce using rule 23 (condicionelse -> empty .)


state 139

    (22) condicionelse -> ELSE bloque .

    IF              reduce using rule 22 (condicionelse -> ELSE bloque .)
    WRITE           reduce using rule 22 (condicionelse -> ELSE bloque .)
    WHILE           reduce using rule 22 (condicionelse -> ELSE bloque .)
    RETURN          reduce using rule 22 (condicionelse -> ELSE bloque .)
    ID              reduce using rule 22 (condicionelse -> ELSE bloque .)
    INT             reduce using rule 22 (condicionelse -> ELSE bloque .)
    FLOAT           reduce using rule 22 (condicionelse -> ELSE bloque .)
    CHAR            reduce using rule 22 (condicionelse -> ELSE bloque .)
    }               reduce using rule 22 (condicionelse -> ELSE bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 12 resolved as shift
WARNING: shift/reduce conflict for INT in state 24 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 24 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 24 resolved as shift
WARNING: shift/reduce conflict for INT in state 35 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 35 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 35 resolved as shift
WARNING: shift/reduce conflict for IF in state 41 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 41 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 41 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 41 resolved as shift
WARNING: shift/reduce conflict for INT in state 41 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 41 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 41 resolved as shift
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 47 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 47 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 47 resolved as shift
WARNING: shift/reduce conflict for ID in state 47 resolved as shift
WARNING: shift/reduce conflict for INT in state 47 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 47 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 47 resolved as shift
WARNING: shift/reduce conflict for [ in state 59 resolved as shift
WARNING: shift/reduce conflict for + in state 74 resolved as shift
WARNING: shift/reduce conflict for - in state 74 resolved as shift
WARNING: reduce/reduce conflict in state 13 resolved using rule (programaF -> empty)
WARNING: rejected rule (function -> empty) in state 13
WARNING: reduce/reduce conflict in state 48 resolved using rule (estatutop -> empty)
WARNING: rejected rule (estatuto -> empty) in state 48
WARNING: reduce/reduce conflict in state 48 resolved using rule (estatuto -> empty)
WARNING: rejected rule (varsp -> empty) in state 48
WARNING: reduce/reduce conflict in state 48 resolved using rule (estatutop -> empty)
WARNING: rejected rule (varsp -> empty) in state 48
