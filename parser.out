Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ID primerCuad ; vars programaF main
Rule 2     primerCuad -> <empty>
Rule 3     main -> MAIN llenarCuad ( ) bloque
Rule 4     llenarCuad -> <empty>
Rule 5     programaF -> function programaF
Rule 6     programaF -> empty
Rule 7     function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
Rule 8     function -> empty
Rule 9     functionAux -> <empty>
Rule 10    functionAux2 -> <empty>
Rule 11    tipoRetorno -> INT
Rule 12    tipoRetorno -> FLOAT
Rule 13    tipoRetorno -> VOID
Rule 14    bloque -> { cuerpo }
Rule 15    cuerpo -> vars estatutop
Rule 16    estatutop -> estatuto estatutop
Rule 17    estatutop -> empty
Rule 18    estatuto -> asignacion
Rule 19    estatuto -> condicion
Rule 20    estatuto -> write
Rule 21    estatuto -> while
Rule 22    estatuto -> return
Rule 23    estatuto -> for
Rule 24    estatuto -> id ;
Rule 25    estatuto -> empty
Rule 26    return -> RETURN superexpresion ;
Rule 27    condicion -> IF ( superexpresion ) condicionAux bloque condicionelse
Rule 28    condicionAux -> <empty>
Rule 29    condicionelse -> ELSE condicionelseAux bloque
Rule 30    condicionelse -> empty
Rule 31    condicionelseAux -> <empty>
Rule 32    write -> WRITE ( writep ) ;
Rule 33    writep -> superexpresion writepAux writepp
Rule 34    writep -> LETRERO writepAux2 writepp
Rule 35    writepAux -> <empty>
Rule 36    writepAux2 -> <empty>
Rule 37    writepp -> , writeppAux writep
Rule 38    writepp -> empty writeppAux
Rule 39    writeppAux -> <empty>
Rule 40    for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3
Rule 41    forAux -> <empty>
Rule 42    forAux2 -> <empty>
Rule 43    forAux3 -> <empty>
Rule 44    while -> WHILE whileAux ( superexpresion ) whileAux2 bloque
Rule 45    whileAux -> <empty>
Rule 46    whileAux2 -> <empty>
Rule 47    asignacion -> vars
Rule 48    asignacion -> id asignacionp
Rule 49    asignacionp -> = superexpresion ;
Rule 50    superexpresion -> megaexpresion superexpresionp
Rule 51    superexpresionp -> AND superexpresion
Rule 52    superexpresionp -> OR superexpresion
Rule 53    superexpresionp -> empty
Rule 54    megaexpresion -> exp megaexpresionp
Rule 55    megaexpresionp -> < exp
Rule 56    megaexpresionp -> > exp
Rule 57    megaexpresionp -> EQUALS exp
Rule 58    megaexpresionp -> DIFF exp
Rule 59    megaexpresionp -> LTHANEQ exp
Rule 60    megaexpresionp -> GTHANEQ exp
Rule 61    megaexpresionp -> empty
Rule 62    exp -> termino expp
Rule 63    expp -> + pAppT exp
Rule 64    expp -> - pAppT exp
Rule 65    expp -> empty
Rule 66    pAppT -> <empty>
Rule 67    termino -> factor terminop
Rule 68    terminop -> * pAppF termino
Rule 69    terminop -> / pAppF termino
Rule 70    terminop -> empty
Rule 71    pAppF -> <empty>
Rule 72    factor -> constante
Rule 73    factor -> lParen superexpresion rParen
Rule 74    lParen -> (
Rule 75    rParen -> )
Rule 76    constante -> id
Rule 77    constante -> CTEF ctef
Rule 78    constante -> CTEI ctei
Rule 79    ctef -> <empty>
Rule 80    ctei -> <empty>
Rule 81    functionParam -> parametro
Rule 82    functionParam -> empty
Rule 83    parametro -> tipo ID parametrop
Rule 84    parametrop -> , parametro
Rule 85    parametrop -> empty
Rule 86    vars -> varsp
Rule 87    varsp -> tipo varspp ; varsp
Rule 88    varsp -> empty
Rule 89    varspp -> ID varsppp
Rule 90    varsppp -> , varspp
Rule 91    varsppp -> [ CTEI ] arreglo
Rule 92    varsppp -> empty
Rule 93    arreglo -> , varspp
Rule 94    arreglo -> empty
Rule 95    tipo -> INT
Rule 96    tipo -> FLOAT
Rule 97    tipo -> CHAR
Rule 98    id -> ID idp
Rule 99    idp -> ( idpp )
Rule 100   idp -> [ superexpresion ]
Rule 101   idp -> empty
Rule 102   idpp -> superexpresion idppp
Rule 103   idpp -> empty
Rule 104   idppp -> , idpp
Rule 105   idppp -> empty
Rule 106   empty -> <empty>

Terminals, with rules where they appear

(                    : 3 7 27 32 40 44 74 99
)                    : 3 7 27 32 40 44 75 99
*                    : 68
+                    : 63
,                    : 37 84 90 93 104
-                    : 64
/                    : 69
;                    : 1 24 26 32 40 49 87
<                    : 55
=                    : 40 49
>                    : 56
AND                  : 51
CHAR                 : 97
CTEF                 : 77
CTEI                 : 78 91
DIFF                 : 58
ELSE                 : 29
EQUALS               : 57
FLOAT                : 12 96
FOR                  : 40
FUNCTION             : 7
GTHANEQ              : 60
ID                   : 1 7 83 89 98
IF                   : 27
INT                  : 11 95
LETRERO              : 34
LTHANEQ              : 59
MAIN                 : 3
OR                   : 52
RETURN               : 26
VOID                 : 13
WHILE                : 44
WRITE                : 32
[                    : 91 100
]                    : 91 100
error                : 
{                    : 14
}                    : 14

Nonterminals, with rules where they appear

arreglo              : 91
asignacion           : 18
asignacionp          : 48
bloque               : 3 7 27 29 40 44
condicion            : 19
condicionAux         : 27
condicionelse        : 27
condicionelseAux     : 29
constante            : 72
ctef                 : 77
ctei                 : 78
cuerpo               : 14
empty                : 6 8 17 25 30 38 53 61 65 70 82 85 88 92 94 101 103 105
estatuto             : 16
estatutop            : 15 16
exp                  : 54 55 56 57 58 59 60 63 64
expp                 : 62
factor               : 67
for                  : 23
forAux               : 40
forAux2              : 40
forAux3              : 40
function             : 5
functionAux          : 7
functionAux2         : 7
functionParam        : 7
id                   : 24 40 48 76
idp                  : 98
idpp                 : 99 104
idppp                : 102
lParen               : 73
llenarCuad           : 3
main                 : 1
megaexpresion        : 50
megaexpresionp       : 54
pAppF                : 68 69
pAppT                : 63 64
parametro            : 81 84
parametrop           : 83
primerCuad           : 1
programa             : 0
programaF            : 1 5
rParen               : 73
return               : 22
superexpresion       : 26 27 33 40 40 44 49 51 52 73 100 102
superexpresionp      : 50
termino              : 62 68 69
terminop             : 67
tipo                 : 83 87
tipoRetorno          : 7
vars                 : 1 15 47
varsp                : 86 87
varspp               : 87 90 93
varsppp              : 89
while                : 21
whileAux             : 44
whileAux2            : 44
write                : 20
writep               : 32 37
writepAux            : 33
writepAux2           : 34
writepp              : 33 34
writeppAux           : 37 38

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ID primerCuad ; vars programaF main

    ID              shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> ID . primerCuad ; vars programaF main
    (2) primerCuad -> .

    ;               reduce using rule 2 (primerCuad -> .)

    primerCuad                     shift and go to state 3

state 3

    (1) programa -> ID primerCuad . ; vars programaF main

    ;               shift and go to state 4


state 4

    (1) programa -> ID primerCuad ; . vars programaF main
    (86) vars -> . varsp
    (87) varsp -> . tipo varspp ; varsp
    (88) varsp -> . empty
    (95) tipo -> . INT
    (96) tipo -> . FLOAT
    (97) tipo -> . CHAR
    (106) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    FUNCTION        reduce using rule 106 (empty -> .)
    MAIN            reduce using rule 106 (empty -> .)

    vars                           shift and go to state 5
    varsp                          shift and go to state 6
    tipo                           shift and go to state 7
    empty                          shift and go to state 8

state 5

    (1) programa -> ID primerCuad ; vars . programaF main
    (5) programaF -> . function programaF
    (6) programaF -> . empty
    (7) function -> . FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
    (8) function -> . empty
    (106) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 106 (empty -> .)

  ! FUNCTION        [ reduce using rule 106 (empty -> .) ]

    programaF                      shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 6

    (86) vars -> varsp .

    FUNCTION        reduce using rule 86 (vars -> varsp .)
    MAIN            reduce using rule 86 (vars -> varsp .)
    IF              reduce using rule 86 (vars -> varsp .)
    WRITE           reduce using rule 86 (vars -> varsp .)
    WHILE           reduce using rule 86 (vars -> varsp .)
    RETURN          reduce using rule 86 (vars -> varsp .)
    FOR             reduce using rule 86 (vars -> varsp .)
    ID              reduce using rule 86 (vars -> varsp .)
    INT             reduce using rule 86 (vars -> varsp .)
    FLOAT           reduce using rule 86 (vars -> varsp .)
    CHAR            reduce using rule 86 (vars -> varsp .)
    }               reduce using rule 86 (vars -> varsp .)


state 7

    (87) varsp -> tipo . varspp ; varsp
    (89) varspp -> . ID varsppp

    ID              shift and go to state 17

    varspp                         shift and go to state 16

state 8

    (88) varsp -> empty .

    FUNCTION        reduce using rule 88 (varsp -> empty .)
    MAIN            reduce using rule 88 (varsp -> empty .)
    IF              reduce using rule 88 (varsp -> empty .)
    WRITE           reduce using rule 88 (varsp -> empty .)
    WHILE           reduce using rule 88 (varsp -> empty .)
    RETURN          reduce using rule 88 (varsp -> empty .)
    FOR             reduce using rule 88 (varsp -> empty .)
    ID              reduce using rule 88 (varsp -> empty .)
    INT             reduce using rule 88 (varsp -> empty .)
    FLOAT           reduce using rule 88 (varsp -> empty .)
    CHAR            reduce using rule 88 (varsp -> empty .)
    }               reduce using rule 88 (varsp -> empty .)


state 9

    (95) tipo -> INT .

    ID              reduce using rule 95 (tipo -> INT .)


state 10

    (96) tipo -> FLOAT .

    ID              reduce using rule 96 (tipo -> FLOAT .)


state 11

    (97) tipo -> CHAR .

    ID              reduce using rule 97 (tipo -> CHAR .)


state 12

    (1) programa -> ID primerCuad ; vars programaF . main
    (3) main -> . MAIN llenarCuad ( ) bloque

    MAIN            shift and go to state 19

    main                           shift and go to state 18

state 13

    (5) programaF -> function . programaF
    (5) programaF -> . function programaF
    (6) programaF -> . empty
    (7) function -> . FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
    (8) function -> . empty
    (106) empty -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 15
    MAIN            reduce using rule 106 (empty -> .)

  ! FUNCTION        [ reduce using rule 106 (empty -> .) ]

    function                       shift and go to state 13
    programaF                      shift and go to state 20
    empty                          shift and go to state 14

state 14

    (6) programaF -> empty .
    (8) function -> empty .

  ! reduce/reduce conflict for MAIN resolved using rule 6 (programaF -> empty .)
    MAIN            reduce using rule 6 (programaF -> empty .)
    FUNCTION        reduce using rule 8 (function -> empty .)

  ! MAIN            [ reduce using rule 8 (function -> empty .) ]


state 15

    (7) function -> FUNCTION . tipoRetorno ID ( functionParam ) functionAux bloque functionAux2
    (11) tipoRetorno -> . INT
    (12) tipoRetorno -> . FLOAT
    (13) tipoRetorno -> . VOID

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    VOID            shift and go to state 24

    tipoRetorno                    shift and go to state 21

state 16

    (87) varsp -> tipo varspp . ; varsp

    ;               shift and go to state 25


state 17

    (89) varspp -> ID . varsppp
    (90) varsppp -> . , varspp
    (91) varsppp -> . [ CTEI ] arreglo
    (92) varsppp -> . empty
    (106) empty -> .

    ,               shift and go to state 27
    [               shift and go to state 28
    ;               reduce using rule 106 (empty -> .)

    varsppp                        shift and go to state 26
    empty                          shift and go to state 29

state 18

    (1) programa -> ID primerCuad ; vars programaF main .

    $end            reduce using rule 1 (programa -> ID primerCuad ; vars programaF main .)


state 19

    (3) main -> MAIN . llenarCuad ( ) bloque
    (4) llenarCuad -> .

    (               reduce using rule 4 (llenarCuad -> .)

    llenarCuad                     shift and go to state 30

state 20

    (5) programaF -> function programaF .

    MAIN            reduce using rule 5 (programaF -> function programaF .)


state 21

    (7) function -> FUNCTION tipoRetorno . ID ( functionParam ) functionAux bloque functionAux2

    ID              shift and go to state 31


state 22

    (11) tipoRetorno -> INT .

    ID              reduce using rule 11 (tipoRetorno -> INT .)


state 23

    (12) tipoRetorno -> FLOAT .

    ID              reduce using rule 12 (tipoRetorno -> FLOAT .)


state 24

    (13) tipoRetorno -> VOID .

    ID              reduce using rule 13 (tipoRetorno -> VOID .)


state 25

    (87) varsp -> tipo varspp ; . varsp
    (87) varsp -> . tipo varspp ; varsp
    (88) varsp -> . empty
    (95) tipo -> . INT
    (96) tipo -> . FLOAT
    (97) tipo -> . CHAR
    (106) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    FUNCTION        reduce using rule 106 (empty -> .)
    MAIN            reduce using rule 106 (empty -> .)
    IF              reduce using rule 106 (empty -> .)
    WRITE           reduce using rule 106 (empty -> .)
    WHILE           reduce using rule 106 (empty -> .)
    RETURN          reduce using rule 106 (empty -> .)
    FOR             reduce using rule 106 (empty -> .)
    ID              reduce using rule 106 (empty -> .)
    }               reduce using rule 106 (empty -> .)

  ! INT             [ reduce using rule 106 (empty -> .) ]
  ! FLOAT           [ reduce using rule 106 (empty -> .) ]
  ! CHAR            [ reduce using rule 106 (empty -> .) ]

    tipo                           shift and go to state 7
    varsp                          shift and go to state 32
    empty                          shift and go to state 8

state 26

    (89) varspp -> ID varsppp .

    ;               reduce using rule 89 (varspp -> ID varsppp .)


state 27

    (90) varsppp -> , . varspp
    (89) varspp -> . ID varsppp

    ID              shift and go to state 17

    varspp                         shift and go to state 33

state 28

    (91) varsppp -> [ . CTEI ] arreglo

    CTEI            shift and go to state 34


state 29

    (92) varsppp -> empty .

    ;               reduce using rule 92 (varsppp -> empty .)


state 30

    (3) main -> MAIN llenarCuad . ( ) bloque

    (               shift and go to state 35


state 31

    (7) function -> FUNCTION tipoRetorno ID . ( functionParam ) functionAux bloque functionAux2

    (               shift and go to state 36


state 32

    (87) varsp -> tipo varspp ; varsp .

    FUNCTION        reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    MAIN            reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    IF              reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    WRITE           reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    WHILE           reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    RETURN          reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    FOR             reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    ID              reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    INT             reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    FLOAT           reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    CHAR            reduce using rule 87 (varsp -> tipo varspp ; varsp .)
    }               reduce using rule 87 (varsp -> tipo varspp ; varsp .)


state 33

    (90) varsppp -> , varspp .

    ;               reduce using rule 90 (varsppp -> , varspp .)


state 34

    (91) varsppp -> [ CTEI . ] arreglo

    ]               shift and go to state 37


state 35

    (3) main -> MAIN llenarCuad ( . ) bloque

    )               shift and go to state 38


state 36

    (7) function -> FUNCTION tipoRetorno ID ( . functionParam ) functionAux bloque functionAux2
    (81) functionParam -> . parametro
    (82) functionParam -> . empty
    (83) parametro -> . tipo ID parametrop
    (106) empty -> .
    (95) tipo -> . INT
    (96) tipo -> . FLOAT
    (97) tipo -> . CHAR

    )               reduce using rule 106 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    functionParam                  shift and go to state 39
    parametro                      shift and go to state 40
    empty                          shift and go to state 41
    tipo                           shift and go to state 42

state 37

    (91) varsppp -> [ CTEI ] . arreglo
    (93) arreglo -> . , varspp
    (94) arreglo -> . empty
    (106) empty -> .

    ,               shift and go to state 44
    ;               reduce using rule 106 (empty -> .)

    arreglo                        shift and go to state 43
    empty                          shift and go to state 45

state 38

    (3) main -> MAIN llenarCuad ( ) . bloque
    (14) bloque -> . { cuerpo }

    {               shift and go to state 47

    bloque                         shift and go to state 46

state 39

    (7) function -> FUNCTION tipoRetorno ID ( functionParam . ) functionAux bloque functionAux2

    )               shift and go to state 48


state 40

    (81) functionParam -> parametro .

    )               reduce using rule 81 (functionParam -> parametro .)


state 41

    (82) functionParam -> empty .

    )               reduce using rule 82 (functionParam -> empty .)


state 42

    (83) parametro -> tipo . ID parametrop

    ID              shift and go to state 49


state 43

    (91) varsppp -> [ CTEI ] arreglo .

    ;               reduce using rule 91 (varsppp -> [ CTEI ] arreglo .)


state 44

    (93) arreglo -> , . varspp
    (89) varspp -> . ID varsppp

    ID              shift and go to state 17

    varspp                         shift and go to state 50

state 45

    (94) arreglo -> empty .

    ;               reduce using rule 94 (arreglo -> empty .)


state 46

    (3) main -> MAIN llenarCuad ( ) bloque .

    $end            reduce using rule 3 (main -> MAIN llenarCuad ( ) bloque .)


state 47

    (14) bloque -> { . cuerpo }
    (15) cuerpo -> . vars estatutop
    (86) vars -> . varsp
    (87) varsp -> . tipo varspp ; varsp
    (88) varsp -> . empty
    (95) tipo -> . INT
    (96) tipo -> . FLOAT
    (97) tipo -> . CHAR
    (106) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    IF              reduce using rule 106 (empty -> .)
    WRITE           reduce using rule 106 (empty -> .)
    WHILE           reduce using rule 106 (empty -> .)
    RETURN          reduce using rule 106 (empty -> .)
    FOR             reduce using rule 106 (empty -> .)
    ID              reduce using rule 106 (empty -> .)
    }               reduce using rule 106 (empty -> .)

  ! INT             [ reduce using rule 106 (empty -> .) ]
  ! FLOAT           [ reduce using rule 106 (empty -> .) ]
  ! CHAR            [ reduce using rule 106 (empty -> .) ]

    cuerpo                         shift and go to state 51
    vars                           shift and go to state 52
    varsp                          shift and go to state 6
    tipo                           shift and go to state 7
    empty                          shift and go to state 8

state 48

    (7) function -> FUNCTION tipoRetorno ID ( functionParam ) . functionAux bloque functionAux2
    (9) functionAux -> .

    {               reduce using rule 9 (functionAux -> .)

    functionAux                    shift and go to state 53

state 49

    (83) parametro -> tipo ID . parametrop
    (84) parametrop -> . , parametro
    (85) parametrop -> . empty
    (106) empty -> .

    ,               shift and go to state 55
    )               reduce using rule 106 (empty -> .)

    parametrop                     shift and go to state 54
    empty                          shift and go to state 56

state 50

    (93) arreglo -> , varspp .

    ;               reduce using rule 93 (arreglo -> , varspp .)


state 51

    (14) bloque -> { cuerpo . }

    }               shift and go to state 57


state 52

    (15) cuerpo -> vars . estatutop
    (16) estatutop -> . estatuto estatutop
    (17) estatutop -> . empty
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . write
    (21) estatuto -> . while
    (22) estatuto -> . return
    (23) estatuto -> . for
    (24) estatuto -> . id ;
    (25) estatuto -> . empty
    (106) empty -> .
    (47) asignacion -> . vars
    (48) asignacion -> . id asignacionp
    (27) condicion -> . IF ( superexpresion ) condicionAux bloque condicionelse
    (32) write -> . WRITE ( writep ) ;
    (44) while -> . WHILE whileAux ( superexpresion ) whileAux2 bloque
    (26) return -> . RETURN superexpresion ;
    (40) for -> . FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3
    (98) id -> . ID idp
    (86) vars -> . varsp
    (87) varsp -> . tipo varspp ; varsp
    (88) varsp -> . empty
    (95) tipo -> . INT
    (96) tipo -> . FLOAT
    (97) tipo -> . CHAR

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    }               reduce using rule 106 (empty -> .)
    IF              shift and go to state 69
    WRITE           shift and go to state 70
    WHILE           shift and go to state 71
    RETURN          shift and go to state 72
    FOR             shift and go to state 73
    ID              shift and go to state 74
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

  ! IF              [ reduce using rule 106 (empty -> .) ]
  ! WRITE           [ reduce using rule 106 (empty -> .) ]
  ! WHILE           [ reduce using rule 106 (empty -> .) ]
  ! RETURN          [ reduce using rule 106 (empty -> .) ]
  ! FOR             [ reduce using rule 106 (empty -> .) ]
  ! ID              [ reduce using rule 106 (empty -> .) ]
  ! INT             [ reduce using rule 106 (empty -> .) ]
  ! FLOAT           [ reduce using rule 106 (empty -> .) ]
  ! CHAR            [ reduce using rule 106 (empty -> .) ]

    vars                           shift and go to state 58
    estatutop                      shift and go to state 59
    estatuto                       shift and go to state 60
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    write                          shift and go to state 64
    while                          shift and go to state 65
    return                         shift and go to state 66
    for                            shift and go to state 67
    id                             shift and go to state 68
    varsp                          shift and go to state 6
    tipo                           shift and go to state 7

state 53

    (7) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux . bloque functionAux2
    (14) bloque -> . { cuerpo }

    {               shift and go to state 47

    bloque                         shift and go to state 75

state 54

    (83) parametro -> tipo ID parametrop .

    )               reduce using rule 83 (parametro -> tipo ID parametrop .)


state 55

    (84) parametrop -> , . parametro
    (83) parametro -> . tipo ID parametrop
    (95) tipo -> . INT
    (96) tipo -> . FLOAT
    (97) tipo -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    parametro                      shift and go to state 76
    tipo                           shift and go to state 42

state 56

    (85) parametrop -> empty .

    )               reduce using rule 85 (parametrop -> empty .)


state 57

    (14) bloque -> { cuerpo } .

    $end            reduce using rule 14 (bloque -> { cuerpo } .)
    FUNCTION        reduce using rule 14 (bloque -> { cuerpo } .)
    MAIN            reduce using rule 14 (bloque -> { cuerpo } .)
    ELSE            reduce using rule 14 (bloque -> { cuerpo } .)
    IF              reduce using rule 14 (bloque -> { cuerpo } .)
    WRITE           reduce using rule 14 (bloque -> { cuerpo } .)
    WHILE           reduce using rule 14 (bloque -> { cuerpo } .)
    RETURN          reduce using rule 14 (bloque -> { cuerpo } .)
    FOR             reduce using rule 14 (bloque -> { cuerpo } .)
    ID              reduce using rule 14 (bloque -> { cuerpo } .)
    INT             reduce using rule 14 (bloque -> { cuerpo } .)
    FLOAT           reduce using rule 14 (bloque -> { cuerpo } .)
    CHAR            reduce using rule 14 (bloque -> { cuerpo } .)
    }               reduce using rule 14 (bloque -> { cuerpo } .)


state 58

    (47) asignacion -> vars .

    IF              reduce using rule 47 (asignacion -> vars .)
    WRITE           reduce using rule 47 (asignacion -> vars .)
    WHILE           reduce using rule 47 (asignacion -> vars .)
    RETURN          reduce using rule 47 (asignacion -> vars .)
    FOR             reduce using rule 47 (asignacion -> vars .)
    ID              reduce using rule 47 (asignacion -> vars .)
    INT             reduce using rule 47 (asignacion -> vars .)
    FLOAT           reduce using rule 47 (asignacion -> vars .)
    CHAR            reduce using rule 47 (asignacion -> vars .)
    }               reduce using rule 47 (asignacion -> vars .)


state 59

    (15) cuerpo -> vars estatutop .

    }               reduce using rule 15 (cuerpo -> vars estatutop .)


state 60

    (16) estatutop -> estatuto . estatutop
    (16) estatutop -> . estatuto estatutop
    (17) estatutop -> . empty
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . write
    (21) estatuto -> . while
    (22) estatuto -> . return
    (23) estatuto -> . for
    (24) estatuto -> . id ;
    (25) estatuto -> . empty
    (106) empty -> .
    (47) asignacion -> . vars
    (48) asignacion -> . id asignacionp
    (27) condicion -> . IF ( superexpresion ) condicionAux bloque condicionelse
    (32) write -> . WRITE ( writep ) ;
    (44) while -> . WHILE whileAux ( superexpresion ) whileAux2 bloque
    (26) return -> . RETURN superexpresion ;
    (40) for -> . FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3
    (98) id -> . ID idp
    (86) vars -> . varsp
    (87) varsp -> . tipo varspp ; varsp
    (88) varsp -> . empty
    (95) tipo -> . INT
    (96) tipo -> . FLOAT
    (97) tipo -> . CHAR

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    }               reduce using rule 106 (empty -> .)
    IF              shift and go to state 69
    WRITE           shift and go to state 70
    WHILE           shift and go to state 71
    RETURN          shift and go to state 72
    FOR             shift and go to state 73
    ID              shift and go to state 74
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

  ! IF              [ reduce using rule 106 (empty -> .) ]
  ! WRITE           [ reduce using rule 106 (empty -> .) ]
  ! WHILE           [ reduce using rule 106 (empty -> .) ]
  ! RETURN          [ reduce using rule 106 (empty -> .) ]
  ! FOR             [ reduce using rule 106 (empty -> .) ]
  ! ID              [ reduce using rule 106 (empty -> .) ]
  ! INT             [ reduce using rule 106 (empty -> .) ]
  ! FLOAT           [ reduce using rule 106 (empty -> .) ]
  ! CHAR            [ reduce using rule 106 (empty -> .) ]

    estatuto                       shift and go to state 60
    estatutop                      shift and go to state 77
    empty                          shift and go to state 61
    asignacion                     shift and go to state 62
    condicion                      shift and go to state 63
    write                          shift and go to state 64
    while                          shift and go to state 65
    return                         shift and go to state 66
    for                            shift and go to state 67
    id                             shift and go to state 68
    vars                           shift and go to state 58
    varsp                          shift and go to state 6
    tipo                           shift and go to state 7

state 61

    (17) estatutop -> empty .
    (25) estatuto -> empty .
    (88) varsp -> empty .

  ! reduce/reduce conflict for } resolved using rule 17 (estatutop -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 25 (estatuto -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 25 (estatuto -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 25 (estatuto -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 25 (estatuto -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 25 (estatuto -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 25 (estatuto -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 25 (estatuto -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 25 (estatuto -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 25 (estatuto -> empty .)
  ! reduce/reduce conflict for } resolved using rule 17 (estatutop -> empty .)
    }               reduce using rule 17 (estatutop -> empty .)
    IF              reduce using rule 25 (estatuto -> empty .)
    WRITE           reduce using rule 25 (estatuto -> empty .)
    WHILE           reduce using rule 25 (estatuto -> empty .)
    RETURN          reduce using rule 25 (estatuto -> empty .)
    FOR             reduce using rule 25 (estatuto -> empty .)
    ID              reduce using rule 25 (estatuto -> empty .)
    INT             reduce using rule 25 (estatuto -> empty .)
    FLOAT           reduce using rule 25 (estatuto -> empty .)
    CHAR            reduce using rule 25 (estatuto -> empty .)

  ! }               [ reduce using rule 25 (estatuto -> empty .) ]
  ! IF              [ reduce using rule 88 (varsp -> empty .) ]
  ! WRITE           [ reduce using rule 88 (varsp -> empty .) ]
  ! WHILE           [ reduce using rule 88 (varsp -> empty .) ]
  ! RETURN          [ reduce using rule 88 (varsp -> empty .) ]
  ! FOR             [ reduce using rule 88 (varsp -> empty .) ]
  ! ID              [ reduce using rule 88 (varsp -> empty .) ]
  ! INT             [ reduce using rule 88 (varsp -> empty .) ]
  ! FLOAT           [ reduce using rule 88 (varsp -> empty .) ]
  ! CHAR            [ reduce using rule 88 (varsp -> empty .) ]
  ! }               [ reduce using rule 88 (varsp -> empty .) ]


state 62

    (18) estatuto -> asignacion .

    IF              reduce using rule 18 (estatuto -> asignacion .)
    WRITE           reduce using rule 18 (estatuto -> asignacion .)
    WHILE           reduce using rule 18 (estatuto -> asignacion .)
    RETURN          reduce using rule 18 (estatuto -> asignacion .)
    FOR             reduce using rule 18 (estatuto -> asignacion .)
    ID              reduce using rule 18 (estatuto -> asignacion .)
    INT             reduce using rule 18 (estatuto -> asignacion .)
    FLOAT           reduce using rule 18 (estatuto -> asignacion .)
    CHAR            reduce using rule 18 (estatuto -> asignacion .)
    }               reduce using rule 18 (estatuto -> asignacion .)


state 63

    (19) estatuto -> condicion .

    IF              reduce using rule 19 (estatuto -> condicion .)
    WRITE           reduce using rule 19 (estatuto -> condicion .)
    WHILE           reduce using rule 19 (estatuto -> condicion .)
    RETURN          reduce using rule 19 (estatuto -> condicion .)
    FOR             reduce using rule 19 (estatuto -> condicion .)
    ID              reduce using rule 19 (estatuto -> condicion .)
    INT             reduce using rule 19 (estatuto -> condicion .)
    FLOAT           reduce using rule 19 (estatuto -> condicion .)
    CHAR            reduce using rule 19 (estatuto -> condicion .)
    }               reduce using rule 19 (estatuto -> condicion .)


state 64

    (20) estatuto -> write .

    IF              reduce using rule 20 (estatuto -> write .)
    WRITE           reduce using rule 20 (estatuto -> write .)
    WHILE           reduce using rule 20 (estatuto -> write .)
    RETURN          reduce using rule 20 (estatuto -> write .)
    FOR             reduce using rule 20 (estatuto -> write .)
    ID              reduce using rule 20 (estatuto -> write .)
    INT             reduce using rule 20 (estatuto -> write .)
    FLOAT           reduce using rule 20 (estatuto -> write .)
    CHAR            reduce using rule 20 (estatuto -> write .)
    }               reduce using rule 20 (estatuto -> write .)


state 65

    (21) estatuto -> while .

    IF              reduce using rule 21 (estatuto -> while .)
    WRITE           reduce using rule 21 (estatuto -> while .)
    WHILE           reduce using rule 21 (estatuto -> while .)
    RETURN          reduce using rule 21 (estatuto -> while .)
    FOR             reduce using rule 21 (estatuto -> while .)
    ID              reduce using rule 21 (estatuto -> while .)
    INT             reduce using rule 21 (estatuto -> while .)
    FLOAT           reduce using rule 21 (estatuto -> while .)
    CHAR            reduce using rule 21 (estatuto -> while .)
    }               reduce using rule 21 (estatuto -> while .)


state 66

    (22) estatuto -> return .

    IF              reduce using rule 22 (estatuto -> return .)
    WRITE           reduce using rule 22 (estatuto -> return .)
    WHILE           reduce using rule 22 (estatuto -> return .)
    RETURN          reduce using rule 22 (estatuto -> return .)
    FOR             reduce using rule 22 (estatuto -> return .)
    ID              reduce using rule 22 (estatuto -> return .)
    INT             reduce using rule 22 (estatuto -> return .)
    FLOAT           reduce using rule 22 (estatuto -> return .)
    CHAR            reduce using rule 22 (estatuto -> return .)
    }               reduce using rule 22 (estatuto -> return .)


state 67

    (23) estatuto -> for .

    IF              reduce using rule 23 (estatuto -> for .)
    WRITE           reduce using rule 23 (estatuto -> for .)
    WHILE           reduce using rule 23 (estatuto -> for .)
    RETURN          reduce using rule 23 (estatuto -> for .)
    FOR             reduce using rule 23 (estatuto -> for .)
    ID              reduce using rule 23 (estatuto -> for .)
    INT             reduce using rule 23 (estatuto -> for .)
    FLOAT           reduce using rule 23 (estatuto -> for .)
    CHAR            reduce using rule 23 (estatuto -> for .)
    }               reduce using rule 23 (estatuto -> for .)


state 68

    (24) estatuto -> id . ;
    (48) asignacion -> id . asignacionp
    (49) asignacionp -> . = superexpresion ;

    ;               shift and go to state 78
    =               shift and go to state 80

    asignacionp                    shift and go to state 79

state 69

    (27) condicion -> IF . ( superexpresion ) condicionAux bloque condicionelse

    (               shift and go to state 81


state 70

    (32) write -> WRITE . ( writep ) ;

    (               shift and go to state 82


state 71

    (44) while -> WHILE . whileAux ( superexpresion ) whileAux2 bloque
    (45) whileAux -> .

    (               reduce using rule 45 (whileAux -> .)

    whileAux                       shift and go to state 83

state 72

    (26) return -> RETURN . superexpresion ;
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    superexpresion                 shift and go to state 84
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 73

    (40) for -> FOR . ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3

    (               shift and go to state 95


state 74

    (98) id -> ID . idp
    (99) idp -> . ( idpp )
    (100) idp -> . [ superexpresion ]
    (101) idp -> . empty
    (106) empty -> .

    (               shift and go to state 97
    [               shift and go to state 98
    ;               reduce using rule 106 (empty -> .)
    =               reduce using rule 106 (empty -> .)
    *               reduce using rule 106 (empty -> .)
    /               reduce using rule 106 (empty -> .)
    +               reduce using rule 106 (empty -> .)
    -               reduce using rule 106 (empty -> .)
    <               reduce using rule 106 (empty -> .)
    >               reduce using rule 106 (empty -> .)
    EQUALS          reduce using rule 106 (empty -> .)
    DIFF            reduce using rule 106 (empty -> .)
    LTHANEQ         reduce using rule 106 (empty -> .)
    GTHANEQ         reduce using rule 106 (empty -> .)
    AND             reduce using rule 106 (empty -> .)
    OR              reduce using rule 106 (empty -> .)
    )               reduce using rule 106 (empty -> .)
    ,               reduce using rule 106 (empty -> .)
    ]               reduce using rule 106 (empty -> .)

    idp                            shift and go to state 96
    empty                          shift and go to state 99

state 75

    (7) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque . functionAux2
    (10) functionAux2 -> .

    FUNCTION        reduce using rule 10 (functionAux2 -> .)
    MAIN            reduce using rule 10 (functionAux2 -> .)

    functionAux2                   shift and go to state 100

state 76

    (84) parametrop -> , parametro .

    )               reduce using rule 84 (parametrop -> , parametro .)


state 77

    (16) estatutop -> estatuto estatutop .

    }               reduce using rule 16 (estatutop -> estatuto estatutop .)


state 78

    (24) estatuto -> id ; .

    IF              reduce using rule 24 (estatuto -> id ; .)
    WRITE           reduce using rule 24 (estatuto -> id ; .)
    WHILE           reduce using rule 24 (estatuto -> id ; .)
    RETURN          reduce using rule 24 (estatuto -> id ; .)
    FOR             reduce using rule 24 (estatuto -> id ; .)
    ID              reduce using rule 24 (estatuto -> id ; .)
    INT             reduce using rule 24 (estatuto -> id ; .)
    FLOAT           reduce using rule 24 (estatuto -> id ; .)
    CHAR            reduce using rule 24 (estatuto -> id ; .)
    }               reduce using rule 24 (estatuto -> id ; .)


state 79

    (48) asignacion -> id asignacionp .

    IF              reduce using rule 48 (asignacion -> id asignacionp .)
    WRITE           reduce using rule 48 (asignacion -> id asignacionp .)
    WHILE           reduce using rule 48 (asignacion -> id asignacionp .)
    RETURN          reduce using rule 48 (asignacion -> id asignacionp .)
    FOR             reduce using rule 48 (asignacion -> id asignacionp .)
    ID              reduce using rule 48 (asignacion -> id asignacionp .)
    INT             reduce using rule 48 (asignacion -> id asignacionp .)
    FLOAT           reduce using rule 48 (asignacion -> id asignacionp .)
    CHAR            reduce using rule 48 (asignacion -> id asignacionp .)
    }               reduce using rule 48 (asignacion -> id asignacionp .)


state 80

    (49) asignacionp -> = . superexpresion ;
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    superexpresion                 shift and go to state 101
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 81

    (27) condicion -> IF ( . superexpresion ) condicionAux bloque condicionelse
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    superexpresion                 shift and go to state 102
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 82

    (32) write -> WRITE ( . writep ) ;
    (33) writep -> . superexpresion writepAux writepp
    (34) writep -> . LETRERO writepAux2 writepp
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    LETRERO         shift and go to state 105
    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    writep                         shift and go to state 103
    superexpresion                 shift and go to state 104
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 83

    (44) while -> WHILE whileAux . ( superexpresion ) whileAux2 bloque

    (               shift and go to state 106


state 84

    (26) return -> RETURN superexpresion . ;

    ;               shift and go to state 107


state 85

    (50) superexpresion -> megaexpresion . superexpresionp
    (51) superexpresionp -> . AND superexpresion
    (52) superexpresionp -> . OR superexpresion
    (53) superexpresionp -> . empty
    (106) empty -> .

    AND             shift and go to state 109
    OR              shift and go to state 110
    ;               reduce using rule 106 (empty -> .)
    )               reduce using rule 106 (empty -> .)
    ,               reduce using rule 106 (empty -> .)
    ]               reduce using rule 106 (empty -> .)

    superexpresionp                shift and go to state 108
    empty                          shift and go to state 111

state 86

    (54) megaexpresion -> exp . megaexpresionp
    (55) megaexpresionp -> . < exp
    (56) megaexpresionp -> . > exp
    (57) megaexpresionp -> . EQUALS exp
    (58) megaexpresionp -> . DIFF exp
    (59) megaexpresionp -> . LTHANEQ exp
    (60) megaexpresionp -> . GTHANEQ exp
    (61) megaexpresionp -> . empty
    (106) empty -> .

    <               shift and go to state 113
    >               shift and go to state 114
    EQUALS          shift and go to state 115
    DIFF            shift and go to state 116
    LTHANEQ         shift and go to state 117
    GTHANEQ         shift and go to state 118
    AND             reduce using rule 106 (empty -> .)
    OR              reduce using rule 106 (empty -> .)
    ;               reduce using rule 106 (empty -> .)
    )               reduce using rule 106 (empty -> .)
    ,               reduce using rule 106 (empty -> .)
    ]               reduce using rule 106 (empty -> .)

    megaexpresionp                 shift and go to state 112
    empty                          shift and go to state 119

state 87

    (62) exp -> termino . expp
    (63) expp -> . + pAppT exp
    (64) expp -> . - pAppT exp
    (65) expp -> . empty
    (106) empty -> .

    +               shift and go to state 121
    -               shift and go to state 122
    <               reduce using rule 106 (empty -> .)
    >               reduce using rule 106 (empty -> .)
    EQUALS          reduce using rule 106 (empty -> .)
    DIFF            reduce using rule 106 (empty -> .)
    LTHANEQ         reduce using rule 106 (empty -> .)
    GTHANEQ         reduce using rule 106 (empty -> .)
    AND             reduce using rule 106 (empty -> .)
    OR              reduce using rule 106 (empty -> .)
    ;               reduce using rule 106 (empty -> .)
    )               reduce using rule 106 (empty -> .)
    ,               reduce using rule 106 (empty -> .)
    ]               reduce using rule 106 (empty -> .)

    expp                           shift and go to state 120
    empty                          shift and go to state 123

state 88

    (67) termino -> factor . terminop
    (68) terminop -> . * pAppF termino
    (69) terminop -> . / pAppF termino
    (70) terminop -> . empty
    (106) empty -> .

    *               shift and go to state 125
    /               shift and go to state 126
    +               reduce using rule 106 (empty -> .)
    -               reduce using rule 106 (empty -> .)
    <               reduce using rule 106 (empty -> .)
    >               reduce using rule 106 (empty -> .)
    EQUALS          reduce using rule 106 (empty -> .)
    DIFF            reduce using rule 106 (empty -> .)
    LTHANEQ         reduce using rule 106 (empty -> .)
    GTHANEQ         reduce using rule 106 (empty -> .)
    AND             reduce using rule 106 (empty -> .)
    OR              reduce using rule 106 (empty -> .)
    ;               reduce using rule 106 (empty -> .)
    )               reduce using rule 106 (empty -> .)
    ,               reduce using rule 106 (empty -> .)
    ]               reduce using rule 106 (empty -> .)

    terminop                       shift and go to state 124
    empty                          shift and go to state 127

state 89

    (72) factor -> constante .

    *               reduce using rule 72 (factor -> constante .)
    /               reduce using rule 72 (factor -> constante .)
    +               reduce using rule 72 (factor -> constante .)
    -               reduce using rule 72 (factor -> constante .)
    <               reduce using rule 72 (factor -> constante .)
    >               reduce using rule 72 (factor -> constante .)
    EQUALS          reduce using rule 72 (factor -> constante .)
    DIFF            reduce using rule 72 (factor -> constante .)
    LTHANEQ         reduce using rule 72 (factor -> constante .)
    GTHANEQ         reduce using rule 72 (factor -> constante .)
    AND             reduce using rule 72 (factor -> constante .)
    OR              reduce using rule 72 (factor -> constante .)
    ;               reduce using rule 72 (factor -> constante .)
    )               reduce using rule 72 (factor -> constante .)
    ,               reduce using rule 72 (factor -> constante .)
    ]               reduce using rule 72 (factor -> constante .)


state 90

    (73) factor -> lParen . superexpresion rParen
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    lParen                         shift and go to state 90
    superexpresion                 shift and go to state 128
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    id                             shift and go to state 91

state 91

    (76) constante -> id .

    *               reduce using rule 76 (constante -> id .)
    /               reduce using rule 76 (constante -> id .)
    +               reduce using rule 76 (constante -> id .)
    -               reduce using rule 76 (constante -> id .)
    <               reduce using rule 76 (constante -> id .)
    >               reduce using rule 76 (constante -> id .)
    EQUALS          reduce using rule 76 (constante -> id .)
    DIFF            reduce using rule 76 (constante -> id .)
    LTHANEQ         reduce using rule 76 (constante -> id .)
    GTHANEQ         reduce using rule 76 (constante -> id .)
    AND             reduce using rule 76 (constante -> id .)
    OR              reduce using rule 76 (constante -> id .)
    ;               reduce using rule 76 (constante -> id .)
    )               reduce using rule 76 (constante -> id .)
    ,               reduce using rule 76 (constante -> id .)
    ]               reduce using rule 76 (constante -> id .)


state 92

    (77) constante -> CTEF . ctef
    (79) ctef -> .

    *               reduce using rule 79 (ctef -> .)
    /               reduce using rule 79 (ctef -> .)
    +               reduce using rule 79 (ctef -> .)
    -               reduce using rule 79 (ctef -> .)
    <               reduce using rule 79 (ctef -> .)
    >               reduce using rule 79 (ctef -> .)
    EQUALS          reduce using rule 79 (ctef -> .)
    DIFF            reduce using rule 79 (ctef -> .)
    LTHANEQ         reduce using rule 79 (ctef -> .)
    GTHANEQ         reduce using rule 79 (ctef -> .)
    AND             reduce using rule 79 (ctef -> .)
    OR              reduce using rule 79 (ctef -> .)
    ;               reduce using rule 79 (ctef -> .)
    )               reduce using rule 79 (ctef -> .)
    ,               reduce using rule 79 (ctef -> .)
    ]               reduce using rule 79 (ctef -> .)

    ctef                           shift and go to state 129

state 93

    (78) constante -> CTEI . ctei
    (80) ctei -> .

    *               reduce using rule 80 (ctei -> .)
    /               reduce using rule 80 (ctei -> .)
    +               reduce using rule 80 (ctei -> .)
    -               reduce using rule 80 (ctei -> .)
    <               reduce using rule 80 (ctei -> .)
    >               reduce using rule 80 (ctei -> .)
    EQUALS          reduce using rule 80 (ctei -> .)
    DIFF            reduce using rule 80 (ctei -> .)
    LTHANEQ         reduce using rule 80 (ctei -> .)
    GTHANEQ         reduce using rule 80 (ctei -> .)
    AND             reduce using rule 80 (ctei -> .)
    OR              reduce using rule 80 (ctei -> .)
    ;               reduce using rule 80 (ctei -> .)
    )               reduce using rule 80 (ctei -> .)
    ,               reduce using rule 80 (ctei -> .)
    ]               reduce using rule 80 (ctei -> .)

    ctei                           shift and go to state 130

state 94

    (74) lParen -> ( .

    CTEF            reduce using rule 74 (lParen -> ( .)
    CTEI            reduce using rule 74 (lParen -> ( .)
    (               reduce using rule 74 (lParen -> ( .)
    ID              reduce using rule 74 (lParen -> ( .)


state 95

    (40) for -> FOR ( . id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3
    (98) id -> . ID idp

    ID              shift and go to state 74

    id                             shift and go to state 131

state 96

    (98) id -> ID idp .

    ;               reduce using rule 98 (id -> ID idp .)
    =               reduce using rule 98 (id -> ID idp .)
    *               reduce using rule 98 (id -> ID idp .)
    /               reduce using rule 98 (id -> ID idp .)
    +               reduce using rule 98 (id -> ID idp .)
    -               reduce using rule 98 (id -> ID idp .)
    <               reduce using rule 98 (id -> ID idp .)
    >               reduce using rule 98 (id -> ID idp .)
    EQUALS          reduce using rule 98 (id -> ID idp .)
    DIFF            reduce using rule 98 (id -> ID idp .)
    LTHANEQ         reduce using rule 98 (id -> ID idp .)
    GTHANEQ         reduce using rule 98 (id -> ID idp .)
    AND             reduce using rule 98 (id -> ID idp .)
    OR              reduce using rule 98 (id -> ID idp .)
    )               reduce using rule 98 (id -> ID idp .)
    ,               reduce using rule 98 (id -> ID idp .)
    ]               reduce using rule 98 (id -> ID idp .)


state 97

    (99) idp -> ( . idpp )
    (102) idpp -> . superexpresion idppp
    (103) idpp -> . empty
    (50) superexpresion -> . megaexpresion superexpresionp
    (106) empty -> .
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    )               reduce using rule 106 (empty -> .)
    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    idpp                           shift and go to state 132
    superexpresion                 shift and go to state 133
    empty                          shift and go to state 134
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 98

    (100) idp -> [ . superexpresion ]
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    superexpresion                 shift and go to state 135
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 99

    (101) idp -> empty .

    ;               reduce using rule 101 (idp -> empty .)
    =               reduce using rule 101 (idp -> empty .)
    *               reduce using rule 101 (idp -> empty .)
    /               reduce using rule 101 (idp -> empty .)
    +               reduce using rule 101 (idp -> empty .)
    -               reduce using rule 101 (idp -> empty .)
    <               reduce using rule 101 (idp -> empty .)
    >               reduce using rule 101 (idp -> empty .)
    EQUALS          reduce using rule 101 (idp -> empty .)
    DIFF            reduce using rule 101 (idp -> empty .)
    LTHANEQ         reduce using rule 101 (idp -> empty .)
    GTHANEQ         reduce using rule 101 (idp -> empty .)
    AND             reduce using rule 101 (idp -> empty .)
    OR              reduce using rule 101 (idp -> empty .)
    )               reduce using rule 101 (idp -> empty .)
    ,               reduce using rule 101 (idp -> empty .)
    ]               reduce using rule 101 (idp -> empty .)


state 100

    (7) function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2 .

    FUNCTION        reduce using rule 7 (function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2 .)
    MAIN            reduce using rule 7 (function -> FUNCTION tipoRetorno ID ( functionParam ) functionAux bloque functionAux2 .)


state 101

    (49) asignacionp -> = superexpresion . ;

    ;               shift and go to state 136


state 102

    (27) condicion -> IF ( superexpresion . ) condicionAux bloque condicionelse

    )               shift and go to state 137


state 103

    (32) write -> WRITE ( writep . ) ;

    )               shift and go to state 138


state 104

    (33) writep -> superexpresion . writepAux writepp
    (35) writepAux -> .

    ,               reduce using rule 35 (writepAux -> .)
    )               reduce using rule 35 (writepAux -> .)

    writepAux                      shift and go to state 139

state 105

    (34) writep -> LETRERO . writepAux2 writepp
    (36) writepAux2 -> .

    ,               reduce using rule 36 (writepAux2 -> .)
    )               reduce using rule 36 (writepAux2 -> .)

    writepAux2                     shift and go to state 140

state 106

    (44) while -> WHILE whileAux ( . superexpresion ) whileAux2 bloque
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    superexpresion                 shift and go to state 141
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 107

    (26) return -> RETURN superexpresion ; .

    IF              reduce using rule 26 (return -> RETURN superexpresion ; .)
    WRITE           reduce using rule 26 (return -> RETURN superexpresion ; .)
    WHILE           reduce using rule 26 (return -> RETURN superexpresion ; .)
    RETURN          reduce using rule 26 (return -> RETURN superexpresion ; .)
    FOR             reduce using rule 26 (return -> RETURN superexpresion ; .)
    ID              reduce using rule 26 (return -> RETURN superexpresion ; .)
    INT             reduce using rule 26 (return -> RETURN superexpresion ; .)
    FLOAT           reduce using rule 26 (return -> RETURN superexpresion ; .)
    CHAR            reduce using rule 26 (return -> RETURN superexpresion ; .)
    }               reduce using rule 26 (return -> RETURN superexpresion ; .)


state 108

    (50) superexpresion -> megaexpresion superexpresionp .

    ;               reduce using rule 50 (superexpresion -> megaexpresion superexpresionp .)
    )               reduce using rule 50 (superexpresion -> megaexpresion superexpresionp .)
    ,               reduce using rule 50 (superexpresion -> megaexpresion superexpresionp .)
    ]               reduce using rule 50 (superexpresion -> megaexpresion superexpresionp .)


state 109

    (51) superexpresionp -> AND . superexpresion
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    superexpresion                 shift and go to state 142
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 110

    (52) superexpresionp -> OR . superexpresion
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    superexpresion                 shift and go to state 143
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 111

    (53) superexpresionp -> empty .

    ;               reduce using rule 53 (superexpresionp -> empty .)
    )               reduce using rule 53 (superexpresionp -> empty .)
    ,               reduce using rule 53 (superexpresionp -> empty .)
    ]               reduce using rule 53 (superexpresionp -> empty .)


state 112

    (54) megaexpresion -> exp megaexpresionp .

    AND             reduce using rule 54 (megaexpresion -> exp megaexpresionp .)
    OR              reduce using rule 54 (megaexpresion -> exp megaexpresionp .)
    ;               reduce using rule 54 (megaexpresion -> exp megaexpresionp .)
    )               reduce using rule 54 (megaexpresion -> exp megaexpresionp .)
    ,               reduce using rule 54 (megaexpresion -> exp megaexpresionp .)
    ]               reduce using rule 54 (megaexpresion -> exp megaexpresionp .)


state 113

    (55) megaexpresionp -> < . exp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    exp                            shift and go to state 144
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 114

    (56) megaexpresionp -> > . exp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    exp                            shift and go to state 145
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 115

    (57) megaexpresionp -> EQUALS . exp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    exp                            shift and go to state 146
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 116

    (58) megaexpresionp -> DIFF . exp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    exp                            shift and go to state 147
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 117

    (59) megaexpresionp -> LTHANEQ . exp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    exp                            shift and go to state 148
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 118

    (60) megaexpresionp -> GTHANEQ . exp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    exp                            shift and go to state 149
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 119

    (61) megaexpresionp -> empty .

    AND             reduce using rule 61 (megaexpresionp -> empty .)
    OR              reduce using rule 61 (megaexpresionp -> empty .)
    ;               reduce using rule 61 (megaexpresionp -> empty .)
    )               reduce using rule 61 (megaexpresionp -> empty .)
    ,               reduce using rule 61 (megaexpresionp -> empty .)
    ]               reduce using rule 61 (megaexpresionp -> empty .)


state 120

    (62) exp -> termino expp .

    <               reduce using rule 62 (exp -> termino expp .)
    >               reduce using rule 62 (exp -> termino expp .)
    EQUALS          reduce using rule 62 (exp -> termino expp .)
    DIFF            reduce using rule 62 (exp -> termino expp .)
    LTHANEQ         reduce using rule 62 (exp -> termino expp .)
    GTHANEQ         reduce using rule 62 (exp -> termino expp .)
    AND             reduce using rule 62 (exp -> termino expp .)
    OR              reduce using rule 62 (exp -> termino expp .)
    ;               reduce using rule 62 (exp -> termino expp .)
    )               reduce using rule 62 (exp -> termino expp .)
    ,               reduce using rule 62 (exp -> termino expp .)
    ]               reduce using rule 62 (exp -> termino expp .)


state 121

    (63) expp -> + . pAppT exp
    (66) pAppT -> .

    CTEF            reduce using rule 66 (pAppT -> .)
    CTEI            reduce using rule 66 (pAppT -> .)
    (               reduce using rule 66 (pAppT -> .)
    ID              reduce using rule 66 (pAppT -> .)

    pAppT                          shift and go to state 150

state 122

    (64) expp -> - . pAppT exp
    (66) pAppT -> .

    CTEF            reduce using rule 66 (pAppT -> .)
    CTEI            reduce using rule 66 (pAppT -> .)
    (               reduce using rule 66 (pAppT -> .)
    ID              reduce using rule 66 (pAppT -> .)

    pAppT                          shift and go to state 151

state 123

    (65) expp -> empty .

    <               reduce using rule 65 (expp -> empty .)
    >               reduce using rule 65 (expp -> empty .)
    EQUALS          reduce using rule 65 (expp -> empty .)
    DIFF            reduce using rule 65 (expp -> empty .)
    LTHANEQ         reduce using rule 65 (expp -> empty .)
    GTHANEQ         reduce using rule 65 (expp -> empty .)
    AND             reduce using rule 65 (expp -> empty .)
    OR              reduce using rule 65 (expp -> empty .)
    ;               reduce using rule 65 (expp -> empty .)
    )               reduce using rule 65 (expp -> empty .)
    ,               reduce using rule 65 (expp -> empty .)
    ]               reduce using rule 65 (expp -> empty .)


state 124

    (67) termino -> factor terminop .

    +               reduce using rule 67 (termino -> factor terminop .)
    -               reduce using rule 67 (termino -> factor terminop .)
    <               reduce using rule 67 (termino -> factor terminop .)
    >               reduce using rule 67 (termino -> factor terminop .)
    EQUALS          reduce using rule 67 (termino -> factor terminop .)
    DIFF            reduce using rule 67 (termino -> factor terminop .)
    LTHANEQ         reduce using rule 67 (termino -> factor terminop .)
    GTHANEQ         reduce using rule 67 (termino -> factor terminop .)
    AND             reduce using rule 67 (termino -> factor terminop .)
    OR              reduce using rule 67 (termino -> factor terminop .)
    ;               reduce using rule 67 (termino -> factor terminop .)
    )               reduce using rule 67 (termino -> factor terminop .)
    ,               reduce using rule 67 (termino -> factor terminop .)
    ]               reduce using rule 67 (termino -> factor terminop .)


state 125

    (68) terminop -> * . pAppF termino
    (71) pAppF -> .

    CTEF            reduce using rule 71 (pAppF -> .)
    CTEI            reduce using rule 71 (pAppF -> .)
    (               reduce using rule 71 (pAppF -> .)
    ID              reduce using rule 71 (pAppF -> .)

    pAppF                          shift and go to state 152

state 126

    (69) terminop -> / . pAppF termino
    (71) pAppF -> .

    CTEF            reduce using rule 71 (pAppF -> .)
    CTEI            reduce using rule 71 (pAppF -> .)
    (               reduce using rule 71 (pAppF -> .)
    ID              reduce using rule 71 (pAppF -> .)

    pAppF                          shift and go to state 153

state 127

    (70) terminop -> empty .

    +               reduce using rule 70 (terminop -> empty .)
    -               reduce using rule 70 (terminop -> empty .)
    <               reduce using rule 70 (terminop -> empty .)
    >               reduce using rule 70 (terminop -> empty .)
    EQUALS          reduce using rule 70 (terminop -> empty .)
    DIFF            reduce using rule 70 (terminop -> empty .)
    LTHANEQ         reduce using rule 70 (terminop -> empty .)
    GTHANEQ         reduce using rule 70 (terminop -> empty .)
    AND             reduce using rule 70 (terminop -> empty .)
    OR              reduce using rule 70 (terminop -> empty .)
    ;               reduce using rule 70 (terminop -> empty .)
    )               reduce using rule 70 (terminop -> empty .)
    ,               reduce using rule 70 (terminop -> empty .)
    ]               reduce using rule 70 (terminop -> empty .)


state 128

    (73) factor -> lParen superexpresion . rParen
    (75) rParen -> . )

    )               shift and go to state 155

    rParen                         shift and go to state 154

state 129

    (77) constante -> CTEF ctef .

    *               reduce using rule 77 (constante -> CTEF ctef .)
    /               reduce using rule 77 (constante -> CTEF ctef .)
    +               reduce using rule 77 (constante -> CTEF ctef .)
    -               reduce using rule 77 (constante -> CTEF ctef .)
    <               reduce using rule 77 (constante -> CTEF ctef .)
    >               reduce using rule 77 (constante -> CTEF ctef .)
    EQUALS          reduce using rule 77 (constante -> CTEF ctef .)
    DIFF            reduce using rule 77 (constante -> CTEF ctef .)
    LTHANEQ         reduce using rule 77 (constante -> CTEF ctef .)
    GTHANEQ         reduce using rule 77 (constante -> CTEF ctef .)
    AND             reduce using rule 77 (constante -> CTEF ctef .)
    OR              reduce using rule 77 (constante -> CTEF ctef .)
    ;               reduce using rule 77 (constante -> CTEF ctef .)
    )               reduce using rule 77 (constante -> CTEF ctef .)
    ,               reduce using rule 77 (constante -> CTEF ctef .)
    ]               reduce using rule 77 (constante -> CTEF ctef .)


state 130

    (78) constante -> CTEI ctei .

    *               reduce using rule 78 (constante -> CTEI ctei .)
    /               reduce using rule 78 (constante -> CTEI ctei .)
    +               reduce using rule 78 (constante -> CTEI ctei .)
    -               reduce using rule 78 (constante -> CTEI ctei .)
    <               reduce using rule 78 (constante -> CTEI ctei .)
    >               reduce using rule 78 (constante -> CTEI ctei .)
    EQUALS          reduce using rule 78 (constante -> CTEI ctei .)
    DIFF            reduce using rule 78 (constante -> CTEI ctei .)
    LTHANEQ         reduce using rule 78 (constante -> CTEI ctei .)
    GTHANEQ         reduce using rule 78 (constante -> CTEI ctei .)
    AND             reduce using rule 78 (constante -> CTEI ctei .)
    OR              reduce using rule 78 (constante -> CTEI ctei .)
    ;               reduce using rule 78 (constante -> CTEI ctei .)
    )               reduce using rule 78 (constante -> CTEI ctei .)
    ,               reduce using rule 78 (constante -> CTEI ctei .)
    ]               reduce using rule 78 (constante -> CTEI ctei .)


state 131

    (40) for -> FOR ( id . = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3

    =               shift and go to state 156


state 132

    (99) idp -> ( idpp . )

    )               shift and go to state 157


state 133

    (102) idpp -> superexpresion . idppp
    (104) idppp -> . , idpp
    (105) idppp -> . empty
    (106) empty -> .

    ,               shift and go to state 159
    )               reduce using rule 106 (empty -> .)

    idppp                          shift and go to state 158
    empty                          shift and go to state 160

state 134

    (103) idpp -> empty .

    )               reduce using rule 103 (idpp -> empty .)


state 135

    (100) idp -> [ superexpresion . ]

    ]               shift and go to state 161


state 136

    (49) asignacionp -> = superexpresion ; .

    IF              reduce using rule 49 (asignacionp -> = superexpresion ; .)
    WRITE           reduce using rule 49 (asignacionp -> = superexpresion ; .)
    WHILE           reduce using rule 49 (asignacionp -> = superexpresion ; .)
    RETURN          reduce using rule 49 (asignacionp -> = superexpresion ; .)
    FOR             reduce using rule 49 (asignacionp -> = superexpresion ; .)
    ID              reduce using rule 49 (asignacionp -> = superexpresion ; .)
    INT             reduce using rule 49 (asignacionp -> = superexpresion ; .)
    FLOAT           reduce using rule 49 (asignacionp -> = superexpresion ; .)
    CHAR            reduce using rule 49 (asignacionp -> = superexpresion ; .)
    }               reduce using rule 49 (asignacionp -> = superexpresion ; .)


state 137

    (27) condicion -> IF ( superexpresion ) . condicionAux bloque condicionelse
    (28) condicionAux -> .

    {               reduce using rule 28 (condicionAux -> .)

    condicionAux                   shift and go to state 162

state 138

    (32) write -> WRITE ( writep ) . ;

    ;               shift and go to state 163


state 139

    (33) writep -> superexpresion writepAux . writepp
    (37) writepp -> . , writeppAux writep
    (38) writepp -> . empty writeppAux
    (106) empty -> .

    ,               shift and go to state 165
    )               reduce using rule 106 (empty -> .)

    writepp                        shift and go to state 164
    empty                          shift and go to state 166

state 140

    (34) writep -> LETRERO writepAux2 . writepp
    (37) writepp -> . , writeppAux writep
    (38) writepp -> . empty writeppAux
    (106) empty -> .

    ,               shift and go to state 165
    )               reduce using rule 106 (empty -> .)

    writepp                        shift and go to state 167
    empty                          shift and go to state 166

state 141

    (44) while -> WHILE whileAux ( superexpresion . ) whileAux2 bloque

    )               shift and go to state 168


state 142

    (51) superexpresionp -> AND superexpresion .

    ;               reduce using rule 51 (superexpresionp -> AND superexpresion .)
    )               reduce using rule 51 (superexpresionp -> AND superexpresion .)
    ,               reduce using rule 51 (superexpresionp -> AND superexpresion .)
    ]               reduce using rule 51 (superexpresionp -> AND superexpresion .)


state 143

    (52) superexpresionp -> OR superexpresion .

    ;               reduce using rule 52 (superexpresionp -> OR superexpresion .)
    )               reduce using rule 52 (superexpresionp -> OR superexpresion .)
    ,               reduce using rule 52 (superexpresionp -> OR superexpresion .)
    ]               reduce using rule 52 (superexpresionp -> OR superexpresion .)


state 144

    (55) megaexpresionp -> < exp .

    AND             reduce using rule 55 (megaexpresionp -> < exp .)
    OR              reduce using rule 55 (megaexpresionp -> < exp .)
    ;               reduce using rule 55 (megaexpresionp -> < exp .)
    )               reduce using rule 55 (megaexpresionp -> < exp .)
    ,               reduce using rule 55 (megaexpresionp -> < exp .)
    ]               reduce using rule 55 (megaexpresionp -> < exp .)


state 145

    (56) megaexpresionp -> > exp .

    AND             reduce using rule 56 (megaexpresionp -> > exp .)
    OR              reduce using rule 56 (megaexpresionp -> > exp .)
    ;               reduce using rule 56 (megaexpresionp -> > exp .)
    )               reduce using rule 56 (megaexpresionp -> > exp .)
    ,               reduce using rule 56 (megaexpresionp -> > exp .)
    ]               reduce using rule 56 (megaexpresionp -> > exp .)


state 146

    (57) megaexpresionp -> EQUALS exp .

    AND             reduce using rule 57 (megaexpresionp -> EQUALS exp .)
    OR              reduce using rule 57 (megaexpresionp -> EQUALS exp .)
    ;               reduce using rule 57 (megaexpresionp -> EQUALS exp .)
    )               reduce using rule 57 (megaexpresionp -> EQUALS exp .)
    ,               reduce using rule 57 (megaexpresionp -> EQUALS exp .)
    ]               reduce using rule 57 (megaexpresionp -> EQUALS exp .)


state 147

    (58) megaexpresionp -> DIFF exp .

    AND             reduce using rule 58 (megaexpresionp -> DIFF exp .)
    OR              reduce using rule 58 (megaexpresionp -> DIFF exp .)
    ;               reduce using rule 58 (megaexpresionp -> DIFF exp .)
    )               reduce using rule 58 (megaexpresionp -> DIFF exp .)
    ,               reduce using rule 58 (megaexpresionp -> DIFF exp .)
    ]               reduce using rule 58 (megaexpresionp -> DIFF exp .)


state 148

    (59) megaexpresionp -> LTHANEQ exp .

    AND             reduce using rule 59 (megaexpresionp -> LTHANEQ exp .)
    OR              reduce using rule 59 (megaexpresionp -> LTHANEQ exp .)
    ;               reduce using rule 59 (megaexpresionp -> LTHANEQ exp .)
    )               reduce using rule 59 (megaexpresionp -> LTHANEQ exp .)
    ,               reduce using rule 59 (megaexpresionp -> LTHANEQ exp .)
    ]               reduce using rule 59 (megaexpresionp -> LTHANEQ exp .)


state 149

    (60) megaexpresionp -> GTHANEQ exp .

    AND             reduce using rule 60 (megaexpresionp -> GTHANEQ exp .)
    OR              reduce using rule 60 (megaexpresionp -> GTHANEQ exp .)
    ;               reduce using rule 60 (megaexpresionp -> GTHANEQ exp .)
    )               reduce using rule 60 (megaexpresionp -> GTHANEQ exp .)
    ,               reduce using rule 60 (megaexpresionp -> GTHANEQ exp .)
    ]               reduce using rule 60 (megaexpresionp -> GTHANEQ exp .)


state 150

    (63) expp -> + pAppT . exp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    exp                            shift and go to state 169
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 151

    (64) expp -> - pAppT . exp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    exp                            shift and go to state 170
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 152

    (68) terminop -> * pAppF . termino
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    termino                        shift and go to state 171
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 153

    (69) terminop -> / pAppF . termino
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    termino                        shift and go to state 172
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 154

    (73) factor -> lParen superexpresion rParen .

    *               reduce using rule 73 (factor -> lParen superexpresion rParen .)
    /               reduce using rule 73 (factor -> lParen superexpresion rParen .)
    +               reduce using rule 73 (factor -> lParen superexpresion rParen .)
    -               reduce using rule 73 (factor -> lParen superexpresion rParen .)
    <               reduce using rule 73 (factor -> lParen superexpresion rParen .)
    >               reduce using rule 73 (factor -> lParen superexpresion rParen .)
    EQUALS          reduce using rule 73 (factor -> lParen superexpresion rParen .)
    DIFF            reduce using rule 73 (factor -> lParen superexpresion rParen .)
    LTHANEQ         reduce using rule 73 (factor -> lParen superexpresion rParen .)
    GTHANEQ         reduce using rule 73 (factor -> lParen superexpresion rParen .)
    AND             reduce using rule 73 (factor -> lParen superexpresion rParen .)
    OR              reduce using rule 73 (factor -> lParen superexpresion rParen .)
    ;               reduce using rule 73 (factor -> lParen superexpresion rParen .)
    )               reduce using rule 73 (factor -> lParen superexpresion rParen .)
    ,               reduce using rule 73 (factor -> lParen superexpresion rParen .)
    ]               reduce using rule 73 (factor -> lParen superexpresion rParen .)


state 155

    (75) rParen -> ) .

    *               reduce using rule 75 (rParen -> ) .)
    /               reduce using rule 75 (rParen -> ) .)
    +               reduce using rule 75 (rParen -> ) .)
    -               reduce using rule 75 (rParen -> ) .)
    <               reduce using rule 75 (rParen -> ) .)
    >               reduce using rule 75 (rParen -> ) .)
    EQUALS          reduce using rule 75 (rParen -> ) .)
    DIFF            reduce using rule 75 (rParen -> ) .)
    LTHANEQ         reduce using rule 75 (rParen -> ) .)
    GTHANEQ         reduce using rule 75 (rParen -> ) .)
    AND             reduce using rule 75 (rParen -> ) .)
    OR              reduce using rule 75 (rParen -> ) .)
    ;               reduce using rule 75 (rParen -> ) .)
    )               reduce using rule 75 (rParen -> ) .)
    ,               reduce using rule 75 (rParen -> ) .)
    ]               reduce using rule 75 (rParen -> ) .)


state 156

    (40) for -> FOR ( id = . superexpresion forAux ; superexpresion forAux2 ) bloque forAux3
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    id                             shift and go to state 91
    superexpresion                 shift and go to state 173
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90

state 157

    (99) idp -> ( idpp ) .

    ;               reduce using rule 99 (idp -> ( idpp ) .)
    =               reduce using rule 99 (idp -> ( idpp ) .)
    *               reduce using rule 99 (idp -> ( idpp ) .)
    /               reduce using rule 99 (idp -> ( idpp ) .)
    +               reduce using rule 99 (idp -> ( idpp ) .)
    -               reduce using rule 99 (idp -> ( idpp ) .)
    <               reduce using rule 99 (idp -> ( idpp ) .)
    >               reduce using rule 99 (idp -> ( idpp ) .)
    EQUALS          reduce using rule 99 (idp -> ( idpp ) .)
    DIFF            reduce using rule 99 (idp -> ( idpp ) .)
    LTHANEQ         reduce using rule 99 (idp -> ( idpp ) .)
    GTHANEQ         reduce using rule 99 (idp -> ( idpp ) .)
    AND             reduce using rule 99 (idp -> ( idpp ) .)
    OR              reduce using rule 99 (idp -> ( idpp ) .)
    )               reduce using rule 99 (idp -> ( idpp ) .)
    ,               reduce using rule 99 (idp -> ( idpp ) .)
    ]               reduce using rule 99 (idp -> ( idpp ) .)


state 158

    (102) idpp -> superexpresion idppp .

    )               reduce using rule 102 (idpp -> superexpresion idppp .)


state 159

    (104) idppp -> , . idpp
    (102) idpp -> . superexpresion idppp
    (103) idpp -> . empty
    (50) superexpresion -> . megaexpresion superexpresionp
    (106) empty -> .
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    )               reduce using rule 106 (empty -> .)
    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    idpp                           shift and go to state 174
    superexpresion                 shift and go to state 133
    empty                          shift and go to state 134
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 160

    (105) idppp -> empty .

    )               reduce using rule 105 (idppp -> empty .)


state 161

    (100) idp -> [ superexpresion ] .

    ;               reduce using rule 100 (idp -> [ superexpresion ] .)
    =               reduce using rule 100 (idp -> [ superexpresion ] .)
    *               reduce using rule 100 (idp -> [ superexpresion ] .)
    /               reduce using rule 100 (idp -> [ superexpresion ] .)
    +               reduce using rule 100 (idp -> [ superexpresion ] .)
    -               reduce using rule 100 (idp -> [ superexpresion ] .)
    <               reduce using rule 100 (idp -> [ superexpresion ] .)
    >               reduce using rule 100 (idp -> [ superexpresion ] .)
    EQUALS          reduce using rule 100 (idp -> [ superexpresion ] .)
    DIFF            reduce using rule 100 (idp -> [ superexpresion ] .)
    LTHANEQ         reduce using rule 100 (idp -> [ superexpresion ] .)
    GTHANEQ         reduce using rule 100 (idp -> [ superexpresion ] .)
    AND             reduce using rule 100 (idp -> [ superexpresion ] .)
    OR              reduce using rule 100 (idp -> [ superexpresion ] .)
    )               reduce using rule 100 (idp -> [ superexpresion ] .)
    ,               reduce using rule 100 (idp -> [ superexpresion ] .)
    ]               reduce using rule 100 (idp -> [ superexpresion ] .)


state 162

    (27) condicion -> IF ( superexpresion ) condicionAux . bloque condicionelse
    (14) bloque -> . { cuerpo }

    {               shift and go to state 47

    bloque                         shift and go to state 175

state 163

    (32) write -> WRITE ( writep ) ; .

    IF              reduce using rule 32 (write -> WRITE ( writep ) ; .)
    WRITE           reduce using rule 32 (write -> WRITE ( writep ) ; .)
    WHILE           reduce using rule 32 (write -> WRITE ( writep ) ; .)
    RETURN          reduce using rule 32 (write -> WRITE ( writep ) ; .)
    FOR             reduce using rule 32 (write -> WRITE ( writep ) ; .)
    ID              reduce using rule 32 (write -> WRITE ( writep ) ; .)
    INT             reduce using rule 32 (write -> WRITE ( writep ) ; .)
    FLOAT           reduce using rule 32 (write -> WRITE ( writep ) ; .)
    CHAR            reduce using rule 32 (write -> WRITE ( writep ) ; .)
    }               reduce using rule 32 (write -> WRITE ( writep ) ; .)


state 164

    (33) writep -> superexpresion writepAux writepp .

    )               reduce using rule 33 (writep -> superexpresion writepAux writepp .)


state 165

    (37) writepp -> , . writeppAux writep
    (39) writeppAux -> .

    LETRERO         reduce using rule 39 (writeppAux -> .)
    CTEF            reduce using rule 39 (writeppAux -> .)
    CTEI            reduce using rule 39 (writeppAux -> .)
    (               reduce using rule 39 (writeppAux -> .)
    ID              reduce using rule 39 (writeppAux -> .)

    writeppAux                     shift and go to state 176

state 166

    (38) writepp -> empty . writeppAux
    (39) writeppAux -> .

    )               reduce using rule 39 (writeppAux -> .)

    writeppAux                     shift and go to state 177

state 167

    (34) writep -> LETRERO writepAux2 writepp .

    )               reduce using rule 34 (writep -> LETRERO writepAux2 writepp .)


state 168

    (44) while -> WHILE whileAux ( superexpresion ) . whileAux2 bloque
    (46) whileAux2 -> .

    {               reduce using rule 46 (whileAux2 -> .)

    whileAux2                      shift and go to state 178

state 169

    (63) expp -> + pAppT exp .

    <               reduce using rule 63 (expp -> + pAppT exp .)
    >               reduce using rule 63 (expp -> + pAppT exp .)
    EQUALS          reduce using rule 63 (expp -> + pAppT exp .)
    DIFF            reduce using rule 63 (expp -> + pAppT exp .)
    LTHANEQ         reduce using rule 63 (expp -> + pAppT exp .)
    GTHANEQ         reduce using rule 63 (expp -> + pAppT exp .)
    AND             reduce using rule 63 (expp -> + pAppT exp .)
    OR              reduce using rule 63 (expp -> + pAppT exp .)
    ;               reduce using rule 63 (expp -> + pAppT exp .)
    )               reduce using rule 63 (expp -> + pAppT exp .)
    ,               reduce using rule 63 (expp -> + pAppT exp .)
    ]               reduce using rule 63 (expp -> + pAppT exp .)


state 170

    (64) expp -> - pAppT exp .

    <               reduce using rule 64 (expp -> - pAppT exp .)
    >               reduce using rule 64 (expp -> - pAppT exp .)
    EQUALS          reduce using rule 64 (expp -> - pAppT exp .)
    DIFF            reduce using rule 64 (expp -> - pAppT exp .)
    LTHANEQ         reduce using rule 64 (expp -> - pAppT exp .)
    GTHANEQ         reduce using rule 64 (expp -> - pAppT exp .)
    AND             reduce using rule 64 (expp -> - pAppT exp .)
    OR              reduce using rule 64 (expp -> - pAppT exp .)
    ;               reduce using rule 64 (expp -> - pAppT exp .)
    )               reduce using rule 64 (expp -> - pAppT exp .)
    ,               reduce using rule 64 (expp -> - pAppT exp .)
    ]               reduce using rule 64 (expp -> - pAppT exp .)


state 171

    (68) terminop -> * pAppF termino .

    +               reduce using rule 68 (terminop -> * pAppF termino .)
    -               reduce using rule 68 (terminop -> * pAppF termino .)
    <               reduce using rule 68 (terminop -> * pAppF termino .)
    >               reduce using rule 68 (terminop -> * pAppF termino .)
    EQUALS          reduce using rule 68 (terminop -> * pAppF termino .)
    DIFF            reduce using rule 68 (terminop -> * pAppF termino .)
    LTHANEQ         reduce using rule 68 (terminop -> * pAppF termino .)
    GTHANEQ         reduce using rule 68 (terminop -> * pAppF termino .)
    AND             reduce using rule 68 (terminop -> * pAppF termino .)
    OR              reduce using rule 68 (terminop -> * pAppF termino .)
    ;               reduce using rule 68 (terminop -> * pAppF termino .)
    )               reduce using rule 68 (terminop -> * pAppF termino .)
    ,               reduce using rule 68 (terminop -> * pAppF termino .)
    ]               reduce using rule 68 (terminop -> * pAppF termino .)


state 172

    (69) terminop -> / pAppF termino .

    +               reduce using rule 69 (terminop -> / pAppF termino .)
    -               reduce using rule 69 (terminop -> / pAppF termino .)
    <               reduce using rule 69 (terminop -> / pAppF termino .)
    >               reduce using rule 69 (terminop -> / pAppF termino .)
    EQUALS          reduce using rule 69 (terminop -> / pAppF termino .)
    DIFF            reduce using rule 69 (terminop -> / pAppF termino .)
    LTHANEQ         reduce using rule 69 (terminop -> / pAppF termino .)
    GTHANEQ         reduce using rule 69 (terminop -> / pAppF termino .)
    AND             reduce using rule 69 (terminop -> / pAppF termino .)
    OR              reduce using rule 69 (terminop -> / pAppF termino .)
    ;               reduce using rule 69 (terminop -> / pAppF termino .)
    )               reduce using rule 69 (terminop -> / pAppF termino .)
    ,               reduce using rule 69 (terminop -> / pAppF termino .)
    ]               reduce using rule 69 (terminop -> / pAppF termino .)


state 173

    (40) for -> FOR ( id = superexpresion . forAux ; superexpresion forAux2 ) bloque forAux3
    (41) forAux -> .

    ;               reduce using rule 41 (forAux -> .)

    forAux                         shift and go to state 179

state 174

    (104) idppp -> , idpp .

    )               reduce using rule 104 (idppp -> , idpp .)


state 175

    (27) condicion -> IF ( superexpresion ) condicionAux bloque . condicionelse
    (29) condicionelse -> . ELSE condicionelseAux bloque
    (30) condicionelse -> . empty
    (106) empty -> .

    ELSE            shift and go to state 181
    IF              reduce using rule 106 (empty -> .)
    WRITE           reduce using rule 106 (empty -> .)
    WHILE           reduce using rule 106 (empty -> .)
    RETURN          reduce using rule 106 (empty -> .)
    FOR             reduce using rule 106 (empty -> .)
    ID              reduce using rule 106 (empty -> .)
    INT             reduce using rule 106 (empty -> .)
    FLOAT           reduce using rule 106 (empty -> .)
    CHAR            reduce using rule 106 (empty -> .)
    }               reduce using rule 106 (empty -> .)

    condicionelse                  shift and go to state 180
    empty                          shift and go to state 182

state 176

    (37) writepp -> , writeppAux . writep
    (33) writep -> . superexpresion writepAux writepp
    (34) writep -> . LETRERO writepAux2 writepp
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    LETRERO         shift and go to state 105
    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    writep                         shift and go to state 183
    superexpresion                 shift and go to state 104
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90
    id                             shift and go to state 91

state 177

    (38) writepp -> empty writeppAux .

    )               reduce using rule 38 (writepp -> empty writeppAux .)


state 178

    (44) while -> WHILE whileAux ( superexpresion ) whileAux2 . bloque
    (14) bloque -> . { cuerpo }

    {               shift and go to state 47

    bloque                         shift and go to state 184

state 179

    (40) for -> FOR ( id = superexpresion forAux . ; superexpresion forAux2 ) bloque forAux3

    ;               shift and go to state 185


state 180

    (27) condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .

    IF              reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    WRITE           reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    WHILE           reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    RETURN          reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    FOR             reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    ID              reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    INT             reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    FLOAT           reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    CHAR            reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)
    }               reduce using rule 27 (condicion -> IF ( superexpresion ) condicionAux bloque condicionelse .)


state 181

    (29) condicionelse -> ELSE . condicionelseAux bloque
    (31) condicionelseAux -> .

    {               reduce using rule 31 (condicionelseAux -> .)

    condicionelseAux               shift and go to state 186

state 182

    (30) condicionelse -> empty .

    IF              reduce using rule 30 (condicionelse -> empty .)
    WRITE           reduce using rule 30 (condicionelse -> empty .)
    WHILE           reduce using rule 30 (condicionelse -> empty .)
    RETURN          reduce using rule 30 (condicionelse -> empty .)
    FOR             reduce using rule 30 (condicionelse -> empty .)
    ID              reduce using rule 30 (condicionelse -> empty .)
    INT             reduce using rule 30 (condicionelse -> empty .)
    FLOAT           reduce using rule 30 (condicionelse -> empty .)
    CHAR            reduce using rule 30 (condicionelse -> empty .)
    }               reduce using rule 30 (condicionelse -> empty .)


state 183

    (37) writepp -> , writeppAux writep .

    )               reduce using rule 37 (writepp -> , writeppAux writep .)


state 184

    (44) while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .

    IF              reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    WRITE           reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    WHILE           reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    RETURN          reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    FOR             reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    ID              reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    INT             reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    FLOAT           reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    CHAR            reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)
    }               reduce using rule 44 (while -> WHILE whileAux ( superexpresion ) whileAux2 bloque .)


state 185

    (40) for -> FOR ( id = superexpresion forAux ; . superexpresion forAux2 ) bloque forAux3
    (50) superexpresion -> . megaexpresion superexpresionp
    (54) megaexpresion -> . exp megaexpresionp
    (62) exp -> . termino expp
    (67) termino -> . factor terminop
    (72) factor -> . constante
    (73) factor -> . lParen superexpresion rParen
    (76) constante -> . id
    (77) constante -> . CTEF ctef
    (78) constante -> . CTEI ctei
    (74) lParen -> . (
    (98) id -> . ID idp

    CTEF            shift and go to state 92
    CTEI            shift and go to state 93
    (               shift and go to state 94
    ID              shift and go to state 74

    id                             shift and go to state 91
    superexpresion                 shift and go to state 187
    megaexpresion                  shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    constante                      shift and go to state 89
    lParen                         shift and go to state 90

state 186

    (29) condicionelse -> ELSE condicionelseAux . bloque
    (14) bloque -> . { cuerpo }

    {               shift and go to state 47

    bloque                         shift and go to state 188

state 187

    (40) for -> FOR ( id = superexpresion forAux ; superexpresion . forAux2 ) bloque forAux3
    (42) forAux2 -> .

    )               reduce using rule 42 (forAux2 -> .)

    forAux2                        shift and go to state 189

state 188

    (29) condicionelse -> ELSE condicionelseAux bloque .

    IF              reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)
    WRITE           reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)
    WHILE           reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)
    RETURN          reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)
    FOR             reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)
    ID              reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)
    INT             reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)
    FLOAT           reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)
    CHAR            reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)
    }               reduce using rule 29 (condicionelse -> ELSE condicionelseAux bloque .)


state 189

    (40) for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 . ) bloque forAux3

    )               shift and go to state 190


state 190

    (40) for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) . bloque forAux3
    (14) bloque -> . { cuerpo }

    {               shift and go to state 47

    bloque                         shift and go to state 191

state 191

    (40) for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque . forAux3
    (43) forAux3 -> .

    IF              reduce using rule 43 (forAux3 -> .)
    WRITE           reduce using rule 43 (forAux3 -> .)
    WHILE           reduce using rule 43 (forAux3 -> .)
    RETURN          reduce using rule 43 (forAux3 -> .)
    FOR             reduce using rule 43 (forAux3 -> .)
    ID              reduce using rule 43 (forAux3 -> .)
    INT             reduce using rule 43 (forAux3 -> .)
    FLOAT           reduce using rule 43 (forAux3 -> .)
    CHAR            reduce using rule 43 (forAux3 -> .)
    }               reduce using rule 43 (forAux3 -> .)

    forAux3                        shift and go to state 192

state 192

    (40) for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .

    IF              reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)
    WRITE           reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)
    WHILE           reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)
    RETURN          reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)
    FOR             reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)
    ID              reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)
    INT             reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)
    FLOAT           reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)
    CHAR            reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)
    }               reduce using rule 40 (for -> FOR ( id = superexpresion forAux ; superexpresion forAux2 ) bloque forAux3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 13 resolved as shift
WARNING: shift/reduce conflict for INT in state 25 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 25 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 25 resolved as shift
WARNING: shift/reduce conflict for INT in state 47 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 47 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 52 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 52 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 52 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 52 resolved as shift
WARNING: shift/reduce conflict for FOR in state 52 resolved as shift
WARNING: shift/reduce conflict for ID in state 52 resolved as shift
WARNING: shift/reduce conflict for INT in state 52 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 52 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 52 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 60 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 60 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 60 resolved as shift
WARNING: shift/reduce conflict for FOR in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 60 resolved as shift
WARNING: shift/reduce conflict for INT in state 60 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 60 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 60 resolved as shift
WARNING: reduce/reduce conflict in state 14 resolved using rule (programaF -> empty)
WARNING: rejected rule (function -> empty) in state 14
WARNING: reduce/reduce conflict in state 61 resolved using rule (estatutop -> empty)
WARNING: rejected rule (estatuto -> empty) in state 61
WARNING: reduce/reduce conflict in state 61 resolved using rule (estatuto -> empty)
WARNING: rejected rule (varsp -> empty) in state 61
WARNING: reduce/reduce conflict in state 61 resolved using rule (estatutop -> empty)
WARNING: rejected rule (varsp -> empty) in state 61
